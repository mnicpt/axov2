{"version":3,"sources":["webpack://zoid/webpack/universalModuleDefinition","webpack://zoid/webpack/bootstrap","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://zoid/./node_modules/zalgo-promise/src/utils.js","webpack://zoid/./node_modules/zalgo-promise/src/exceptions.js","webpack://zoid/./node_modules/zalgo-promise/src/flush.js","webpack://zoid/./node_modules/zalgo-promise/src/promise.js","webpack://zoid/./node_modules/cross-domain-utils/src/util.js","webpack://zoid/./node_modules/cross-domain-utils/src/constants.js","webpack://zoid/./node_modules/cross-domain-utils/src/utils.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/util.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/weakmap.js","webpack://zoid/./node_modules/belter/src/util.js","webpack://zoid/./node_modules/cross-domain-safe-weakmap/src/native.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/construct.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","webpack://zoid/./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://zoid/./node_modules/belter/src/dom.js","webpack://zoid/./node_modules/belter/src/css.js","webpack://zoid/./node_modules/post-robot/src/global.js","webpack://zoid/./node_modules/belter/src/constants.js","webpack://zoid/./node_modules/post-robot/src/lib/hello.js","webpack://zoid/./node_modules/post-robot/src/conf/constants.js","webpack://zoid/./node_modules/post-robot/src/lib/windows.js","webpack://zoid/./node_modules/universal-serialize/src/common.js","webpack://zoid/./node_modules/universal-serialize/src/constants.js","webpack://zoid/./node_modules/universal-serialize/src/serialize.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/function.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/error.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/promise.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/regex.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/date.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/array.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/object.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/string.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/number.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/boolean.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/null.js","webpack://zoid/./node_modules/universal-serialize/src/serializers/undefined.js","webpack://zoid/./node_modules/universal-serialize/src/deserialize.js","webpack://zoid/./node_modules/post-robot/src/serialize/window.js","webpack://zoid/./node_modules/post-robot/src/bridge/common.js","webpack://zoid/./node_modules/post-robot/src/serialize/function.js","webpack://zoid/./node_modules/post-robot/src/serialize/serialize.js","webpack://zoid/./node_modules/post-robot/src/serialize/promise.js","webpack://zoid/./node_modules/post-robot/src/drivers/send/strategies.js","webpack://zoid/./node_modules/post-robot/src/drivers/send/index.js","webpack://zoid/./node_modules/post-robot/src/drivers/listeners.js","webpack://zoid/./node_modules/post-robot/src/drivers/receive/types.js","webpack://zoid/./node_modules/post-robot/src/drivers/receive/index.js","webpack://zoid/./node_modules/post-robot/src/public/on.js","webpack://zoid/./node_modules/post-robot/src/lib/compat.js","webpack://zoid/./node_modules/post-robot/src/public/send.js","webpack://zoid/./node_modules/post-robot/src/conf/config.js","webpack://zoid/./node_modules/post-robot/src/setup.js","webpack://zoid/./src/lib/global.js","webpack://zoid/./src/lib/serialize.js","webpack://zoid/./src/constants.js","webpack://zoid/./src/lib/window.js","webpack://zoid/./src/child/props.js","webpack://zoid/./src/child/child.js","webpack://zoid/./src/component/props.js","webpack://zoid/./src/parent/props.js","webpack://zoid/./src/parent/parent.js","webpack://zoid/./node_modules/post-robot/src/clean.js","webpack://zoid/./src/drivers/react.js","webpack://zoid/./src/drivers/vue.js","webpack://zoid/./src/drivers/vue3.js","webpack://zoid/./src/drivers/angular.js","webpack://zoid/./src/drivers/angular2.js","webpack://zoid/./src/component/templates/container.js","webpack://zoid/./src/component/templates/component.js","webpack://zoid/./src/component/component.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","hasOwnProperty","p","s","_setPrototypeOf","setPrototypeOf","__proto__","_inheritsLoose","subClass","superClass","prototype","constructor","_extends","assign","target","arguments","length","source","apply","isPromise","item","Promise","window","Window","toString","then","err","flushPromise","dispatchedErrors","possiblyUnhandledPromiseHandlers","activeCount","flushActive","promise","resolve","startActive","endActive","ZalgoPromise","handler","resolved","rejected","errorHandled","error","handlers","dispatching","stack","result","isAsync","res","reject","Error","dispatch","setTimeout","indexOf","push","j","dispatchPossiblyUnhandledError","asyncReject","chain","firstPromise","secondPromise","onSuccess","onError","promiseResult","catch","undefined","finally","onFinally","try","timeout","time","clearTimeout","toPromise","TypeError","lazy","all","promises","count","results","slice","prom","hash","awaitPromises","map","items","method","onPossiblyUnhandledException","cancel","splice","context","args","delay","flush","isRegex","WINDOW_TYPE","IFRAME","POPUP","IE_WIN_ACCESS_ERROR","getActualProtocol","win","location","protocol","getProtocol","mockDomain","split","isAboutProtocol","getParent","parent","getOpener","opener","canReadFromWindow","getActualDomain","PROTOCOL","host","getDomain","domain","isSameDomain","desc","getOwnPropertyDescriptor","isMockProtocol","isActuallySameDomain","assertSameDomain","isAncestorParent","child","childParent","getParents","getFrames","frames","len","frame","getAllChildFrames","getTop","top","getAllFramesInWindow","iframeWindows","iframeFrames","isWindowClosed","allowMock","closed","message","mockclosed","iframeIndex","collection","safeIndexOf","contentWindow","parentNode","doc","ownerDocument","documentElement","contains","isFrameWindowClosed","getFrameByName","winFrames","childFrame","getAncestor","anyMatch","collection1","collection2","item1","getDistanceFromTop","distance","isSameTopWindow","win1","win2","top1","top2","allFrames1","allFrames2","opener1","opener2","matchDomain","pattern","origin","Array","isArray","Boolean","match","JSON","stringify","some","subpattern","getDomainFromUrl","url","join","onCloseWindow","callback","maxtime","Infinity","check","isWindow","obj","__cross_domain_utils_window_check__","getFrameForWindow","frameElement","document","querySelectorAll","closeWindow","isIframe","parentElement","removeChild","close","objectIDs","CrossDomainSafeWeakMap","weakmap","keys","values","Math","random","WeakMap","freeze","testWeakMap","testKey","set","hasNativeWeakMap","_cleanupClosedWindows","delete","isSafeToReadWrite","entry","writable","index","has","getOrSet","_getPrototypeOf","getPrototypeOf","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","e","_construct","Parent","Class","isNativeReflectConstruct","a","instance","Function","_wrapNativeSuper","_cache","Map","Wrapper","configurable","getFunctionName","fn","__name__","displayName","setFunctionName","base64encode","str","btoa","encodeURIComponent","replace","p1","String","fromCharCode","parseInt","Buffer","from","uniqueID","chars","charAt","floor","toISOString","toLowerCase","serializeArgs","subkey","val","uid","getObjectID","getEmptyObject","memoizeGlobalIndex","memoizeGlobalIndexValidFrom","memoize","options","simpleCache","thisCache","thisNamespace","cacheTime","memoizeIndex","memoizedFunction","cache","cacheKey","cacheResult","now","reset","memoizePromise","memoizedPromiseFunction","noop","once","called","stringifyError","level","newErr","extend","identity","safeInterval","loop","dasherizeToCamel","string","g","toUpperCase","defineLazyProp","arrayFrom","isObjectObject","isPlainObject","replaceObject","replacer","fullKey","itemKey","isDefined","cleanup","cleanErr","tasks","cleaned","cleaner","register","task","shift","assertExists","thing","clear","ExtendableError","captureStackTrace","ReferenceError","getBody","body","isDocumentReady","readyState","isDocumentInteractive","urlEncode","parseQuery","queryString","logic","__inline_memoize_cache__","params","pair","decodeURIComponent","inlineMemoize","extendQuery","originalQuery","props","filter","appendChild","container","isElement","element","Element","nodeType","style","getElementSafe","id","querySelector","elementReady","el","interval","setInterval","clearInterval","awaitFrameLoadPromises","PopupOpenError","awaitFrameLoad","addEventListener","cleanIframes","linkFrameWindow","awaitFrameWindow","loadedFrame","iframe","tag","styleText","createElement","class","className","setAttribute","attributes","styleSheet","cssText","createTextNode","html","innerHTML","allowTransparency","backgroundColor","border","isIE","navigator","userAgent","hasAttribute","getElement","event","removeEventListener","showElement","setProperty","hideElement","destroyElement","isElementClosed","onResize","width","height","currentWidth","offsetWidth","currentHeight","offsetHeight","canceled","observer","getClientRects","isElementVisible","newWidth","newHeight","ResizeObserver","observe","MutationObserver","childList","subtree","characterData","disconnect","isShadowElement","currentScript","getCurrentScript","getStackTrace","stackDetails","exec","scriptLocation","getElementsByTagName","reverse","script","src","inferCurrentScript","currentUID","toPx","toNum","toCSS","test","getGlobal","globalKey","__POST_ROBOT__","getAttribute","ATTRIBUTES","hashedString","total","charCodeAt","abs","strHashStr","dataset","getObj","globalStore","defStore","store","storeKey","defVal","del","WildCard","getWildcard","global","WINDOW_WILDCARD","windowStore","winStore","getStore","getInstanceID","resolveHelloPromise","helloPromises","existingPromise","newPromise","sayHello","send","instanceID","data","getWindowInstanceID","markWindowKnown","isSerializedType","__type__","determineType","serializeType","type","__val__","SERIALIZER","code","toJSON","defaultSerializers","DESERIALIZER","RegExp","defaultDeserializers","cleanupProxyWindows","idToProxyWindow","shouldClean","getSerializedWindow","winPromise","windowNamePromise","windowTypePromise","getName","getType","focus","isClosed","setLocation","href","opts","form","display","input","submit","submitForm","setName","sameDomain","ProxyWindow","serializedWindow","isProxyWindow","actualWindow","actualWindowPromise","getID","setWindow","isPopup","isPopupPromise","getNamePromise","reopenPromise","open","focusPromise","getWindow","awaitWindow","matchWindow","proxyInstanceID","knownWindowInstanceID","unwrap","serialize","toProxyWindow","deserialize","addMethod","methodStore","proxyWindowMethods","lookupMethod","serializeFunction","destination","on","meth","methodSource","arg","__id__","serializeMessage","serializers","serializer","serializePromise","deserializeMessage","deserializers","parse","deserializer","serializedPromise","deserializePromise","serializedFunction","getDeserializedFunction","crossDomainFunctionWrapper","fireAndForget","__origin__","__source__","deserializeFunction","SEND_MESSAGE_STRATEGIES","sendMessage","domainBuffer","buffer","serializedMessage","strategies","errors","strategyName","getResponseListener","deleteResponseListener","isResponseListenerErrored","getRequestListener","requestListeners","winQualifier","nameListeners","domainListeners","listener","regex","handleRequest","logName","sendResponse","ack","pathname","handleError","handleAck","handleResponse","receiveMessage","receivedMessages","messages","parsedMessage","parseMessages","deserializeMessages","requestListener","addRequestListener","listenersCollection","existingListener","regexListeners","regexListener","strDomain","errorHandler","postMessage","mockUserAgent","getUserAgent","foreignGlobal","domainMatcher","responseTimeout","childTimeout","validateOptions","actualParent","isAncestor","getHelloPromise","awaitWindowHello","targetDomain","actualDomain","normalizedDomain","normalizeDomain","responseListener","addResponseListener","reqPromises","markResponseListenerErrored","totalAckTimeout","isWindowKnown","totalResTimeout","ackTimeout","resTimeout","cancelled","max","tryGlobal","getProxyObject","basicSerialize","getUIDRefStore","references","crossDomainSerialize","metaData","sender","receiver","passByReference","basic","proxyWin","internalSerializeMessage","reference","getRawRef","serializedData","cleanReference","ref","crossDomainDeserialize","atob","base64decode","basicDeserialize","getRefValue","internalDeserializeMessage","PROP_TYPE","STRING","OBJECT","FUNCTION","BOOLEAN","NUMBER","ARRAY","PROP_SERIALIZATION","DOTIFY","BASE64","CONTEXT","EVENT","RENDER","RENDERED","DISPLAY","ERROR","CLOSE","DESTROY","PROPS","RESIZE","FOCUS","buildChildWindowName","serializedPayload","parseWindowName","windowName","zoidcomp","serializedInitialPayload","parseInitialParentPayload","windowRef","getNthParent","ancestor","windows","findChildFrameByName","namedFrame","findFrameByName","getWindowByRef","payload","getInitialParentPayload","getWindowRef","targetWindow","currentWindow","normalizeChildProp","propsDef","helpers","prop","childDecorate","onProps","resize","getParentDomain","show","hide","export","getSiblings","destroy","defaultNoop","decorateOnce","eachProp","serializeProps","propDef","getParam","queryParam","bodyParam","getValue","queryValue","bodyValue","finalParam","finalValue","serialization","dotify","prefix","newobj","every","dotkey","mapProps","parentComponent","triggered","emitter","currentProxyWin","currentProxyContainer","childComponent","currentChildDomain","currentContainer","overrides","parentWin","containerTemplate","prerenderTemplate","dimensions","autoResize","domainMatch","xports","initPromise","handledErrors","clean","state","inputProps","internalState","visible","eventName","handlerList","trigger","triggerOnce","onErrorOverride","getProxyContainerOverride","getProxyContainer","showOverride","hideOverride","closeOverride","renderContainerOverride","renderContainer","getProxyWindowOverride","getProxyWindow","setProxyWinOverride","setProxyWin","openFrameOverride","openFrame","openPrerenderFrameOverride","openPrerenderFrame","prerenderOverride","prerender","openOverride","openPrerenderOverride","openPrerender","watchForUnloadOverride","watchForUnload","getInternalStateOverride","getInternalState","setInternalStateOverride","setInternalState","resolveInitPromise","rejectInitPromise","getPropsForChild","initialChildDomain","sendToChild","newInternalState","windowProp","setState","getUrl","getAttributes","getInitialChildDomain","title","proxyPrerenderFrame","prerenderFrame","prerenderFrameWindow","actualComponentWindow","initChild","childDomain","childExports","proxyFrame","cleanUpWindow","unloadWindowListener","closeParentWindowListener","checkWindowClose","secondIsClosed","exportsPromise","xport","actualExports","renderTemplate","renderer","proxyPrerenderWin","prerenderWindow","isBlankDomain","tagName","children","writeElementToWindow","prerenderResizeListener","proxyContainer","rerender","innerContainer","containerWatcher","sacrificialFrame","sacrificialFrameWin","mutationObservers","elementClosed","mutationElement","mutationObserver","frameWin","watchElementForClose","removeError","getHelpers","updateProps","setProps","newInputProps","existingProps","valueDetermined","alias","default","required","decorate","getDerivedValue","extendProps","newProps","childProps","containerElement","insertShadowSlot","shadowHost","shadowRoot","getShadowRoot","getShadowHost","slotName","slot","slotProvider","init","onRender","onDisplay","onRendered","onClose","onDestroy","onFocus","render","childDomainMatch","checkAllowRender","delegatePromise","delegateProps","propName","allowDelegate","childOverridesPromise","POST_MESSAGE","parentComp","getDelegateOverrides","childOverrides","delegate","watchForUnloadPromise","buildBodyPromise","onRenderPromise","getProxyContainerPromise","getProxyWindowPromise","finalSetPropsPromise","buildUrlPromise","query","originalUrl","originalHash","hashString","extendUrl","normalizeMockUrl","buildWindowNamePromise","version","__ZOID__","checkClose","buildInitialChildPayload","childPayload","buildSerializedChildPayload","openFramePromise","openPrerenderFramePromise","renderContainerPromise","openPromise","openPrerenderPromise","setStatePromise","prerenderPromise","setWindowNamePromise","getMethodPromise","loadUrlPromise","windowUrl","watchForClosePromise","watchForClose","onDisplayPromise","openBridgePromise","runTimeoutPromise","onRenderedPromise","getProps","getExports","react","React","ReactDOM","componentDidMount","findDOMNode","componentDidUpdate","Component","vue","Vue","component","inheritAttrs","mounted","$el","$attrs","reduce","acc","styleObject","includes","watch","deep","vue3","template","angular","ng","directive","scope","restrict","controller","$scope","$element","safeApply","$root","$$phase","$apply","$watch","angular2","AngularComponent","NgModule","ElementRef","NgZone","Inject","ComponentInstance","elementRef","zone","internalProps","_props","run","ngOnInit","targetElement","nativeElement","ngDoCheck","obj1","obj2","checked","equals","annotations","parameters","selector","inputs","ModuleInstance","declarations","defaultContainerTemplate","div","cspNonce","classList","add","remove","defaultPrerenderTemplate","spinner","cleanInstances","cleanZoid","allowDelegateListener","delegateListener","bridgeUrl","allowedParentDomains","defaultContext","validate","eligible","logger","info","xportsDefinition","valuePromise","normalizeOptions","driverCache","instances","isChild","isChildComponentWindow","registerChild","xprops","components","onPropHandlers","parentComponentWindow","parentDomain","parentExports","initialProps","parentExport","parentResize","parentInit","anyParent","currentParent","winParent","isUpdate","normalizedProps","normalizeChildProps","componentName","updateChildWindowNameWithRef","checkParentDomain","ZOID","eligibility","reason","clone","getDefaultContext","finalContext","getDefaultContainer","newInstance","renderTo","childComponents","childName","Child","childInputProps","parentProps","getChildren","isEligible","driver","driverName","dep","drivers","canRenderTo","initialized","sourceElement","originalEvent","messageListener","listenForMessages","initHello","comp","destroyComponents","destroyPromise","destroyAll","responseListeners","cancelResponseListeners"],"mappings":"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","file":"zoid.frameworks.frame.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"zoid\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"zoid\"] = factory();\n\telse\n\t\troot[\"zoid\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","/* @flow */\n\nexport function isPromise(item : mixed) : boolean {\n    try {\n        if (!item) {\n            return false;\n        }\n\n        if (typeof Promise !== 'undefined' && item instanceof Promise) {\n            return true;\n        }\n\n        if (typeof window !== 'undefined' && typeof window.Window === 'function' && item instanceof window.Window) {\n            return false;\n        }\n\n        if (typeof window !== 'undefined' && typeof window.constructor === 'function' && item instanceof window.constructor) {\n            return false;\n        }\n\n        const toString = ({}).toString;\n\n        if (toString) {\n            const name = toString.call(item);\n\n            if (name === '[object Window]' || name === '[object global]' || name === '[object DOMWindow]') {\n                return false;\n            }\n        }\n\n        if (typeof item.then === 'function') {\n            return true;\n        }\n    } catch (err) {\n        return false;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nconst dispatchedErrors = [];\nconst possiblyUnhandledPromiseHandlers : Array<(mixed, promise? : ZalgoPromise<mixed>) => void> = [];\n\nexport function dispatchPossiblyUnhandledError<T>(err : mixed, promise : ZalgoPromise<T>) {\n\n    if (dispatchedErrors.indexOf(err) !== -1) {\n        return;\n    }\n\n    dispatchedErrors.push(err);\n\n    setTimeout(() => {\n        if (__DEBUG__) {\n            // $FlowFixMe\n            throw new Error(`${ err.stack || err.toString() }\\n\\nFrom promise:\\n\\n${ promise.stack }`);\n        }\n\n        throw err;\n    }, 1);\n\n    for (let j = 0; j < possiblyUnhandledPromiseHandlers.length; j++) {\n        // $FlowFixMe\n        possiblyUnhandledPromiseHandlers[j](err, promise);\n    }\n}\n\nexport function onPossiblyUnhandledException(handler : (mixed, promise? : ZalgoPromise<mixed>) => void) : {| cancel : () => void |} {\n    possiblyUnhandledPromiseHandlers.push(handler);\n\n    return {\n        cancel() {\n            possiblyUnhandledPromiseHandlers.splice(possiblyUnhandledPromiseHandlers.indexOf(handler), 1);\n        }\n    };\n}\n","/* @flow */\n\nimport type { ZalgoPromise } from './promise';\n\nlet activeCount = 0;\nlet flushPromise;\n\nfunction flushActive() {\n    if (!activeCount && flushPromise) {\n        const promise = flushPromise;\n        flushPromise = null;\n        promise.resolve();\n    }\n}\n\nexport function startActive() {\n    activeCount += 1;\n}\n\nexport function endActive() {\n    activeCount -= 1;\n    flushActive();\n}\n\nexport function awaitActive(Zalgo : Class<ZalgoPromise<*>>) : ZalgoPromise<void> { // eslint-disable-line no-undef\n    const promise = flushPromise = flushPromise || new Zalgo();\n    flushActive();\n    return promise;\n}\n","/* @flow */\n\nimport { isPromise } from './utils';\nimport { onPossiblyUnhandledException, dispatchPossiblyUnhandledError } from './exceptions';\nimport { startActive, endActive, awaitActive } from './flush';\n\nexport class ZalgoPromise<R : mixed> {\n\n    resolved : boolean\n    rejected : boolean\n    errorHandled : boolean\n    value : R\n    error : mixed\n    // eslint-disable-next-line flowtype/no-mutable-array\n    handlers : Array<{|\n        promise : ZalgoPromise<*>,\n        onSuccess : void | (result : R) => mixed,\n        onError : void | (error : mixed) => mixed\n    |}>\n    dispatching : boolean\n    stack : string\n\n    constructor(handler : ?(resolve : (result : R) => void, reject : (error : mixed) => void) => void) {\n\n        this.resolved = false;\n        this.rejected = false;\n        this.errorHandled = false;\n\n        this.handlers = [];\n\n        if (handler) {\n\n            let result;\n            let error;\n            let resolved = false;\n            let rejected = false;\n            let isAsync = false;\n\n            startActive();\n\n            try {\n                handler(res => {\n                    if (isAsync) {\n                        this.resolve(res);\n                    } else {\n                        resolved = true;\n                        result = res;\n                    }\n\n                }, err => {\n                    if (isAsync) {\n                        this.reject(err);\n                    } else {\n                        rejected = true;\n                        error = err;\n                    }\n                });\n\n            } catch (err) {\n                endActive();\n                this.reject(err);\n                return;\n            }\n\n            endActive();\n\n            isAsync = true;\n\n            if (resolved) {\n                // $FlowFixMe\n                this.resolve(result);\n            } else if (rejected) {\n                this.reject(error);\n            }\n        }\n\n        if (__DEBUG__) {\n            try {\n                throw new Error(`ZalgoPromise`);\n            } catch (err) {\n                this.stack = err.stack;\n            }\n        }\n    }\n\n    resolve(result : R) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(result)) {\n            throw new Error('Can not resolve promise with another promise');\n        }\n\n        this.resolved = true;\n        this.value = result;\n        this.dispatch();\n\n        return this;\n    }\n\n    reject(error : mixed) : ZalgoPromise<R> {\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        if (isPromise(error)) {\n            throw new Error('Can not reject promise with another promise');\n        }\n\n        if (!error) {\n            // $FlowFixMe\n            const err = (error && typeof error.toString === 'function' ? error.toString() : Object.prototype.toString.call(error));\n            error = new Error(`Expected reject to be called with Error, got ${ err }`);\n        }\n\n        this.rejected = true;\n        this.error = error;\n\n        if (!this.errorHandled) {\n            setTimeout(() => {\n                if (!this.errorHandled) {\n                    dispatchPossiblyUnhandledError(error, this);\n                }\n            }, 1);\n        }\n\n        this.dispatch();\n\n        return this;\n    }\n\n    asyncReject(error : mixed) : ZalgoPromise<R> {\n        this.errorHandled = true;\n        this.reject(error);\n        return this;\n    }\n    \n    dispatch() {\n\n        const { dispatching, resolved, rejected, handlers } = this;\n\n        if (dispatching) {\n            return;\n        }\n\n        if (!resolved && !rejected) {\n            return;\n        }\n\n        this.dispatching = true;\n        startActive();\n\n        const chain = <T>(firstPromise : ZalgoPromise<T>, secondPromise : ZalgoPromise<T>) => {\n            return firstPromise.then(res => {\n                secondPromise.resolve(res);\n            }, err => {\n                secondPromise.reject(err);\n            });\n        };\n\n        for (let i = 0; i < handlers.length; i++) {\n\n            const { onSuccess, onError, promise } = handlers[i];\n\n            let result;\n\n            if (resolved) {\n\n                try {\n                    result = onSuccess ? onSuccess(this.value) : this.value;\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n\n            } else if (rejected) {\n\n                if (!onError) {\n                    promise.reject(this.error);\n                    continue;\n                }\n\n                try {\n                    result = onError(this.error);\n                } catch (err) {\n                    promise.reject(err);\n                    continue;\n                }\n            }\n\n            if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n                const promiseResult : ZalgoPromise<*> = result;\n\n                if (promiseResult.resolved) {\n                    promise.resolve(promiseResult.value);\n                } else {\n                    promise.reject(promiseResult.error);\n                }\n\n                promiseResult.errorHandled = true;\n\n            } else if (isPromise(result)) {\n\n                if (result instanceof ZalgoPromise && (result.resolved || result.rejected)) {\n                    if (result.resolved) {\n                        promise.resolve(result.value);\n                    } else {\n                        promise.reject(result.error);\n                    }\n\n                } else {\n                    // $FlowFixMe\n                    chain(result, promise);\n                }\n\n            } else {\n\n                promise.resolve(result);\n            }\n        }\n\n        handlers.length = 0;\n        this.dispatching = false;\n        endActive();\n    }\n\n    then<X, Y>(onSuccess : void | (result : R) => (ZalgoPromise<X> | Y), onError : void | (error : mixed) => (ZalgoPromise<X> | Y)) : ZalgoPromise<X | Y> {\n\n        if (onSuccess && typeof onSuccess !== 'function' && !onSuccess.call) {\n            throw new Error('Promise.then expected a function for success handler');\n        }\n\n        if (onError && typeof onError !== 'function' && !onError.call) {\n            throw new Error('Promise.then expected a function for error handler');\n        }\n\n        const promise = new ZalgoPromise();\n\n        this.handlers.push({\n            promise,\n            onSuccess,\n            onError\n        });\n\n        this.errorHandled = true;\n\n        this.dispatch();\n\n        return promise;\n    }\n\n    catch<X, Y>(onError : (error : mixed) => ZalgoPromise<X> | Y) : ZalgoPromise<X | Y> {\n        // $FlowFixMe incompatible-call\n        const resultPromise : ZalgoPromise<X | Y> = this.then(undefined, onError);\n        return resultPromise;\n    }\n\n    finally(onFinally : () => mixed) : ZalgoPromise<R> {\n\n        if (onFinally && typeof onFinally !== 'function' && !onFinally.call) {\n            throw new Error('Promise.finally expected a function');\n        }\n\n        return this.then((result) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    return result;\n                });\n        }, (err) => {\n            return ZalgoPromise.try(onFinally)\n                .then(() => {\n                    throw err;\n                });\n        });\n    }\n\n    timeout(time : number, err : ?Error) : ZalgoPromise<R> {\n\n        if (this.resolved || this.rejected) {\n            return this;\n        }\n\n        const timeout = setTimeout(() => {\n\n            if (this.resolved || this.rejected) {\n                return;\n            }\n\n            this.reject(err || new Error(`Promise timed out after ${ time }ms`));\n\n        }, time);\n\n        return this.then(result => {\n            clearTimeout(timeout);\n            return result;\n        });\n    }\n\n    // $FlowFixMe\n    toPromise() : Promise<R> {\n        // $FlowFixMe\n        if (typeof Promise === 'undefined') {\n            throw new TypeError(`Could not find Promise`);\n        }\n        // $FlowFixMe\n        return Promise.resolve(this); // eslint-disable-line compat/compat\n    }\n\n    lazy() : ZalgoPromise<R> {\n        this.errorHandled = true;\n        return this;\n    }\n\n    static resolve<X, Y>(value : ZalgoPromise<X> | Y) : ZalgoPromise<X | Y> {\n\n        if (value instanceof ZalgoPromise) {\n            // $FlowFixMe incompatible-type-arg\n            const result : ZalgoPromise<X | Y> = value;\n            return result;\n        }\n\n        if (isPromise(value)) {\n            // $FlowFixMe\n            return new ZalgoPromise((resolve, reject) => value.then(resolve, reject));\n        }\n\n        return new ZalgoPromise().resolve(value);\n    }\n\n    static reject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().reject(error);\n    }\n\n    static asyncReject(error : mixed) : ZalgoPromise<R> {\n        return new ZalgoPromise().asyncReject(error);\n    }\n\n    static all<X : $ReadOnlyArray<mixed>>(promises : X) : ZalgoPromise<$TupleMap<X, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n\n        const promise = new ZalgoPromise();\n        let count = promises.length;\n        // eslint-disable-next-line no-undef\n        const results = ([] : $TupleMap<X, <Y>(ZalgoPromise<Y> | Y) => Y>).slice();\n\n        if (!count) {\n            promise.resolve(results);\n            return promise;\n        }\n\n        const chain = <T>(i : number, firstPromise : ZalgoPromise<T>, secondPromise : ZalgoPromise<T>) => {\n            return firstPromise.then(res => {\n                results[i] = res;\n                count -= 1;\n                if (count === 0) {\n                    promise.resolve(results);\n                }\n            }, err => {\n                secondPromise.reject(err);\n            });\n        };\n\n        for (let i = 0; i < promises.length; i++) {\n            const prom = promises[i];\n\n            if (prom instanceof ZalgoPromise) {\n                if (prom.resolved) {\n                    results[i] = prom.value;\n                    count -= 1;\n                    continue;\n                }\n            } else if (!isPromise(prom)) {\n                results[i] = prom;\n                count -= 1;\n                continue;\n            }\n\n            chain(i, ZalgoPromise.resolve(prom), promise);\n        }\n\n        if (count === 0) {\n            promise.resolve(results);\n        }\n\n        return promise;\n    }\n\n    static hash<O : Object>(promises : O) : ZalgoPromise<$ObjMap<O, <Y>(ZalgoPromise<Y> | Y) => Y>> { // eslint-disable-line no-undef\n        const result = {};\n        const awaitPromises = [];\n\n        for (const key in promises) {\n            if (promises.hasOwnProperty(key)) {\n                const value = promises[key];\n\n                if (isPromise(value)) {\n                    awaitPromises.push(value.then(res => {\n                        result[key] = res;\n                    }));\n                } else {\n                    result[key] = value;\n                }\n            }\n        }\n        \n        return ZalgoPromise.all(awaitPromises).then(() => result);\n    }\n\n    static map<T, X>(items : $ReadOnlyArray<T>, method : (T) => (ZalgoPromise<X> | X)) : ZalgoPromise<$ReadOnlyArray<X>> {\n        // $FlowFixMe\n        return ZalgoPromise.all(items.map(method));\n    }\n\n    static onPossiblyUnhandledException(handler : (err : mixed) => void) : {| cancel : () => void |} {\n        return onPossiblyUnhandledException(handler);\n    }\n\n    static try<X, Y, C : mixed, A : $ReadOnlyArray<mixed>>(method : (...args : $ReadOnlyArray<mixed>) => (ZalgoPromise<X> | Y), context? : C, args? : A) : ZalgoPromise<X | Y> {\n\n        if (method && typeof method !== 'function' && !method.call) {\n            throw new Error('Promise.try expected a function');\n        }\n\n        let result : ZalgoPromise<X> | Y;\n\n        startActive();\n        \n        try {\n            result = method.apply(context, args || []);\n        } catch (err) {\n            endActive();\n            return ZalgoPromise.reject(err);\n        }\n\n        endActive();\n\n        // $FlowFixMe incompatible-call\n        const resultPromise = ZalgoPromise.resolve(result);\n\n        return resultPromise;\n    }\n\n    static delay(delay : number) : ZalgoPromise<void> {\n        return new ZalgoPromise(resolve => {\n            setTimeout(resolve, delay);\n        });\n    }\n\n    static isPromise(value : mixed) : boolean {\n\n        if (value && value instanceof ZalgoPromise) {\n            return true;\n        }\n\n        return isPromise(value);\n    }\n\n    static flush() : ZalgoPromise<void> {\n        return awaitActive(ZalgoPromise);\n    }\n}\n","/* @flow */\n\nexport function isRegex(item : mixed) : boolean {\n    // $FlowFixMe method-unbinding\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : $ReadOnlyArray<mixed>) {\n    // pass\n}\n","/* @flow */\n\nexport const PROTOCOL = {\n    MOCK:  ('mock:' : 'mock:'),\n    FILE:  ('file:' : 'file:'),\n    ABOUT: ('about:' : 'about:')\n};\n\nexport const WILDCARD = '*';\n\nexport const WINDOW_TYPE = {\n    IFRAME: ('iframe' : 'iframe'),\n    POPUP:  ('popup' : 'popup')\n};\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isRegex, noop } from './util';\nimport type { CrossDomainWindowType, SameDomainWindowType, DomainMatcher } from './types';\nimport { PROTOCOL, WILDCARD } from './constants';\n\nconst IE_WIN_ACCESS_ERROR = 'Call was rejected by callee.\\r\\n';\n\nexport function getActualProtocol(win : SameDomainWindowType = window) : ?string {\n    return win.location.protocol;\n}\n\nexport function getProtocol(win : SameDomainWindowType = window) : ?string {\n    if (win.mockDomain) {\n        const protocol = win.mockDomain.split('//')[0];\n\n        if (protocol) {\n            return protocol;\n        }\n    }\n\n    return getActualProtocol(win);\n}\n\nexport function isFileProtocol(win : SameDomainWindowType = window) : boolean {\n    return getProtocol(win) === PROTOCOL.FILE;\n}\n\nexport function isAboutProtocol(win : SameDomainWindowType = window) : boolean {\n    return getProtocol(win) === PROTOCOL.ABOUT;\n}\n\nexport function isMockProtocol(win : SameDomainWindowType = window) : boolean {\n    return getProtocol(win) === PROTOCOL.MOCK;\n}\n\nexport function getParent(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    try {\n        if (win.parent && win.parent !== win) {\n            return win.parent;\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function getOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    if (!win) {\n        return;\n    }\n\n    // Make sure we're not actually an iframe which has had window.open() called on us\n    if (getParent(win)) {\n        return;\n    }\n\n    try {\n        return win.opener;\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function canReadFromWindow(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        noop(win && win.location && win.location.href);\n        return true;\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function getActualDomain(win? : SameDomainWindowType = window) : string {\n\n    const location = win.location;\n\n    if (!location) {\n        throw new Error(`Can not read window location`);\n    }\n\n    const protocol = getActualProtocol(win);\n\n    if (!protocol) {\n        throw new Error(`Can not read window protocol`);\n    }\n\n    if (protocol === PROTOCOL.FILE) {\n        return `${ PROTOCOL.FILE }//`;\n    }\n\n    if (protocol === PROTOCOL.ABOUT) {\n\n        const parent = getParent(win);\n        if (parent && canReadFromWindow(parent)) {\n            // $FlowFixMe\n            return getActualDomain(parent);\n        }\n\n        return `${ PROTOCOL.ABOUT }//`;\n    }\n\n    const host = location.host;\n\n    if (!host) {\n        throw new Error(`Can not read window host`);\n    }\n\n    return `${ protocol }//${ host }`;\n}\n\nexport function getDomain(win? : SameDomainWindowType = window) : string {\n\n    const domain = getActualDomain(win);\n\n    if (domain && win.mockDomain && win.mockDomain.indexOf(PROTOCOL.MOCK) === 0) {\n        return win.mockDomain;\n    }\n\n    return domain;\n}\n\nexport function isBlankDomain(win : CrossDomainWindowType) : boolean {\n    try {\n        // $FlowFixMe\n        if (!win.location.href) {\n            return true;\n        }\n\n        if (win.location.href === 'about:blank') {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isActuallySameDomain(win : CrossDomainWindowType) : boolean {\n\n    try {\n        if (win === window) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        const desc = Object.getOwnPropertyDescriptor(win, 'location');\n\n        if (desc && desc.enumerable === false) {\n            return false;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (isMockProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        // $FlowFixMe\n        if (getActualDomain(win) === getActualDomain(window)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : boolean {\n\n    if (!isActuallySameDomain(win)) {\n        return false;\n    }\n\n    try {\n        if (win === window) {\n            return true;\n        }\n        \n        // $FlowFixMe\n        if (isAboutProtocol(win) && canReadFromWindow(win)) {\n            return true;\n        }\n\n        // $FlowFixMe\n        if (getDomain(window) === getDomain(win)) {\n            return true;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\n\nexport function assertSameDomain(win : CrossDomainWindowType | SameDomainWindowType) : SameDomainWindowType {\n    if (!isSameDomain(win)) {\n        throw new Error(`Expected window to be same domain`);\n    }\n\n    // $FlowFixMe\n    return win;\n}\n\nexport function getParents(win : CrossDomainWindowType) : $ReadOnlyArray<CrossDomainWindowType> {\n\n    const result = [];\n\n    try {\n\n        while (win.parent !== win) {\n            result.push(win.parent);\n            win = win.parent;\n        }\n\n    } catch (err) {\n        // pass\n    }\n\n    return result;\n}\n\nexport function isAncestorParent(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    if (!parent || !child) {\n        return false;\n    }\n\n    const childParent = getParent(child);\n\n    if (childParent) {\n        return childParent === parent;\n    }\n\n    if (getParents(child).indexOf(parent) !== -1) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getFrames(win : CrossDomainWindowType) : $ReadOnlyArray<CrossDomainWindowType> {\n\n    const result = [];\n\n    let frames;\n\n    try {\n        frames = win.frames;\n    } catch (err) {\n        frames = win;\n    }\n\n    let len;\n\n    try {\n        len = frames.length;\n    } catch (err) {\n        // pass\n    }\n\n    if (len === 0) {\n        return result;\n    }\n\n    if (len) {\n        for (let i = 0; i < len; i++) {\n\n            let frame;\n\n            try {\n                frame = frames[i];\n            } catch (err) {\n                continue;\n            }\n\n            result.push(frame);\n        }\n\n        return result;\n    }\n\n    for (let i = 0; i < 100; i++) {\n        let frame;\n\n        try {\n            frame = frames[i];\n        } catch (err) {\n            return result;\n        }\n\n        if (!frame) {\n            return result;\n        }\n\n        result.push(frame);\n    }\n\n    return result;\n}\n\n\nexport function getAllChildFrames(win : CrossDomainWindowType) : $ReadOnlyArray<CrossDomainWindowType> {\n\n    const result = [];\n\n    for (const frame of getFrames(win)) {\n        result.push(frame);\n\n        for (const childFrame of getAllChildFrames(frame)) {\n            result.push(childFrame);\n        }\n    }\n\n    return result;\n}\n\nexport function getTop(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n\n    try {\n        if (win.top) {\n            return win.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    if (getParent(win) === win) {\n        return win;\n    }\n\n    try {\n        if (isAncestorParent(window, win) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (isAncestorParent(win, window) && window.top) {\n            return window.top;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    for (const frame of getAllChildFrames(win)) {\n        try {\n            if (frame.top) {\n                return frame.top;\n            }\n        } catch (err) {\n            // pass\n        }\n\n        if (getParent(frame) === frame) {\n            return frame;\n        }\n    }\n}\n\nexport function getNextOpener(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    return getOpener(getTop(win) || win);\n}\n\nexport function getUltimateTop(win? : CrossDomainWindowType = window) : CrossDomainWindowType {\n    const opener = getNextOpener(win);\n\n    if (opener) {\n        return getUltimateTop(opener);\n    }\n\n    return top;\n}\n\nexport function getAllFramesInWindow(win : CrossDomainWindowType) : $ReadOnlyArray<CrossDomainWindowType> {\n    const top = getTop(win);\n\n    if (!top) {\n        throw new Error(`Can not determine top window`);\n    }\n\n    let result = [ ...getAllChildFrames(top), top ];\n\n    // Win may be in shadow dom\n    if (result.indexOf(win) === -1) {\n        result = [ ...result, win, ...getAllChildFrames(win) ];\n    }\n\n    return result;\n}\n\nexport function getAllWindows(win? : CrossDomainWindowType = window) : $ReadOnlyArray<CrossDomainWindowType> {\n    const frames = getAllFramesInWindow(win);\n    const opener = getNextOpener(win);\n\n    if (opener) {\n        return [ ...getAllWindows(opener), ...frames ];\n    } else {\n        return frames;\n    }\n}\n\nexport function isTop(win : CrossDomainWindowType) : boolean {\n    return win === getTop(win);\n}\n\nexport function isFrameWindowClosed(frame : HTMLIFrameElement) : boolean {\n\n    if (!frame.contentWindow) {\n        return true;\n    }\n\n    if (!frame.parentNode) {\n        return true;\n    }\n\n    const doc = frame.ownerDocument;\n\n    if (doc && doc.documentElement && !doc.documentElement.contains(frame)) {\n        let parent = frame;\n\n        while (parent.parentNode && parent.parentNode !== parent) {\n            parent = parent.parentNode;\n        }\n\n        // $FlowFixMe\n        if (!parent.host || !doc.documentElement.contains(parent.host)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction safeIndexOf<T>(collection : $ReadOnlyArray<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\nconst iframeWindows = [];\nconst iframeFrames = [];\n\nexport function isWindowClosed(win : CrossDomainWindowType, allowMock : boolean = true) : boolean {\n\n    try {\n        if (win === window) {\n            return false;\n        }\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (!win) {\n            return true;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (win.closed) {\n            return true;\n        }\n\n    } catch (err) {\n\n        // I love you so much IE\n\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return false;\n        }\n\n        return true;\n    }\n\n\n    if (allowMock && isSameDomain(win)) {\n        try {\n            // $FlowFixMe\n            if (win.mockclosed) {\n                return true;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    // Mobile safari\n\n    try {\n        if (!win.parent || !win.top) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    // Yes, this actually happens in IE. win === win errors out when the window\n    // is from an iframe, and the iframe was removed from the page.\n\n    try {\n        noop(win === win); // eslint-disable-line no-self-compare\n    } catch (err) {\n        return true;\n    }\n\n    // IE orphaned frame\n\n    const iframeIndex = safeIndexOf(iframeWindows, win);\n\n    if (iframeIndex !== -1) {\n        const frame = iframeFrames[iframeIndex];\n\n        if (frame && isFrameWindowClosed(frame)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction cleanIframes() {\n    for (let i = 0; i < iframeWindows.length; i++) {\n        let closed = false;\n\n        try {\n            closed = iframeWindows[i].closed;\n        } catch (err) {\n            // pass\n        }\n\n        if (closed) {\n            iframeFrames.splice(i, 1);\n            iframeWindows.splice(i, 1);\n        }\n    }\n}\n\nexport function linkFrameWindow(frame : HTMLIFrameElement) {\n\n    cleanIframes();\n\n    if (frame && frame.contentWindow) {\n        try {\n            iframeWindows.push(frame.contentWindow);\n            iframeFrames.push(frame);\n        } catch (err) {\n            // pass\n        }\n    }\n}\n\nexport function getUserAgent(win : ?SameDomainWindowType) : string {\n    win = win || window;\n    return win.navigator.mockUserAgent || win.navigator.userAgent;\n}\n\n\nexport function getFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    const winFrames = getFrames(win);\n\n    for (const childFrame of winFrames) {\n        try {\n            // $FlowFixMe\n            if (isSameDomain(childFrame) && childFrame.name === name && winFrames.indexOf(childFrame) !== -1) {\n                return childFrame;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    try {\n        // $FlowFixMe\n        if (winFrames.indexOf(win.frames[name]) !== -1) {\n            // $FlowFixMe\n            return win.frames[name];\n        }\n    } catch (err) {\n        // pass\n    }\n\n    try {\n        if (winFrames.indexOf(win[name]) !== -1) {\n            return win[name];\n        }\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function findChildFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n\n    const frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    for (const childFrame of getFrames(win)) {\n        const namedFrame = findChildFrameByName(childFrame, name);\n\n        if (namedFrame) {\n            return namedFrame;\n        }\n    }\n}\n\nexport function findFrameByName(win : CrossDomainWindowType, name : string) : ?CrossDomainWindowType {\n    const frame = getFrameByName(win, name);\n\n    if (frame) {\n        return frame;\n    }\n\n    const top = getTop(win) || win;\n\n    return findChildFrameByName(top, name);\n}\n\nexport function isParent(win : CrossDomainWindowType, frame : CrossDomainWindowType) : boolean {\n\n    const frameParent = getParent(frame);\n\n    if (frameParent) {\n        return frameParent === win;\n    }\n\n    for (const childFrame of getFrames(win)) {\n        if (childFrame === frame) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isOpener(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    return parent === getOpener(child);\n}\n\nexport function getAncestor(win? : CrossDomainWindowType = window) : ?CrossDomainWindowType {\n    win = win || window;\n\n    const opener = getOpener(win);\n\n    if (opener) {\n        return opener;\n    }\n\n    const parent = getParent(win);\n\n    if (parent) {\n        return parent;\n    }\n}\n\nexport function getAncestors(win : CrossDomainWindowType) : $ReadOnlyArray<CrossDomainWindowType> {\n\n    const results = [];\n\n    let ancestor = win;\n\n    while (ancestor) {\n        ancestor = getAncestor(ancestor);\n        if (ancestor) {\n            results.push(ancestor);\n        }\n    }\n\n    return results;\n}\n\n\nexport function isAncestor(parent : CrossDomainWindowType, child : CrossDomainWindowType) : boolean {\n\n    const actualParent = getAncestor(child);\n\n    if (actualParent) {\n        if (actualParent === parent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    if (child === parent) {\n        return false;\n    }\n\n    if (getTop(child) === child) {\n        return false;\n    }\n\n    for (const frame of getFrames(parent)) {\n        if (frame === child) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isPopup(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(getOpener(win));\n}\n\nexport function isIframe(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(getParent(win));\n}\n\nexport function isFullpage(win? : CrossDomainWindowType = window) : boolean {\n    return Boolean(!isIframe(win) && !isPopup(win));\n}\n\nfunction anyMatch(collection1, collection2) : boolean {\n\n    for (const item1 of collection1) {\n        for (const item2 of collection2) {\n            if (item1 === item2) {\n                return true;\n            }\n        }\n    }\n\n    return false;\n}\n\nexport function getDistanceFromTop(win : CrossDomainWindowType = window) : number {\n    let distance = 0;\n    let parent = win;\n\n    while (parent) {\n        parent = getParent(parent);\n        if (parent) {\n            distance += 1;\n        }\n    }\n\n    return distance;\n}\n\nexport function getNthParent(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    let parent = win;\n\n    for (let i = 0; i < n; i++) {\n        if (!parent) {\n            return;\n        }\n\n        parent = getParent(parent);\n    }\n\n    return parent;\n}\n\nexport function getNthParentFromTop(win : CrossDomainWindowType, n : number = 1) : ?CrossDomainWindowType {\n    return getNthParent(win, getDistanceFromTop(win) - n);\n}\n\nexport function isSameTopWindow(win1 : CrossDomainWindowType, win2 : CrossDomainWindowType) : boolean {\n\n    const top1 = getTop(win1) || win1;\n    const top2 = getTop(win2) || win2;\n\n    try {\n        if (top1 && top2) {\n            if (top1 === top2) {\n                return true;\n            }\n\n            return false;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    const allFrames1 = getAllFramesInWindow(win1);\n    const allFrames2 = getAllFramesInWindow(win2);\n\n    if (anyMatch(allFrames1, allFrames2)) {\n        return true;\n    }\n\n    const opener1 = getOpener(top1);\n    const opener2 = getOpener(top2);\n\n    if (opener1 && anyMatch(getAllFramesInWindow(opener1), allFrames2)) {\n        return false;\n    }\n\n    if (opener2 && anyMatch(getAllFramesInWindow(opener2), allFrames1)) {\n        return false;\n    }\n\n    return false;\n}\n\nexport function matchDomain(pattern : DomainMatcher, origin : DomainMatcher) : boolean {\n\n    if (typeof pattern === 'string') {\n\n        if (typeof origin === 'string') {\n            return pattern === WILDCARD || origin === pattern;\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n    }\n\n    if (isRegex(pattern)) {\n\n        if (isRegex(origin)) {\n            return pattern.toString() === origin.toString();\n        }\n\n        if (Array.isArray(origin)) {\n            return false;\n        }\n\n        // $FlowFixMe\n        return Boolean(origin.match(pattern));\n    }\n\n    if (Array.isArray(pattern)) {\n\n        if (Array.isArray(origin)) {\n            return JSON.stringify(pattern) === JSON.stringify(origin);\n        }\n\n        if (isRegex(origin)) {\n            return false;\n        }\n\n        return pattern.some(subpattern => matchDomain(subpattern, origin));\n    }\n\n    return false;\n}\n\nexport function stringifyDomainPattern(pattern : DomainMatcher) : string {\n    if (Array.isArray(pattern)) {\n        return `(${ pattern.join(' | ') })`;\n    } else if (isRegex(pattern)) {\n        return `RegExp(${ pattern.toString() })`;\n    } else {\n        return pattern.toString();\n    }\n}\n\nexport function getDomainFromUrl(url : string) : string {\n\n    let domain;\n\n    if (url.match(/^(https?|mock|file):\\/\\//)) {\n        domain = url;\n    } else {\n        return getDomain();\n    }\n\n    domain = domain.split('/').slice(0, 3).join('/');\n\n    return domain;\n}\n\nexport function onCloseWindow(win : CrossDomainWindowType, callback : Function, delay : number = 1000, maxtime : number = Infinity) : {| cancel : () => void |} {\n\n    let timeout;\n\n    const check = () => {\n\n        if (isWindowClosed(win)) {\n\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n\n            return callback();\n        }\n\n        if (maxtime <= 0) {\n            clearTimeout(timeout);\n        } else {\n            maxtime -= delay;\n            timeout = setTimeout(check, delay);\n        }\n    };\n\n    check();\n\n    return {\n        cancel() {\n            if (timeout) {\n                clearTimeout(timeout);\n            }\n        }\n    };\n}\n\n// eslint-disable-next-line complexity\nexport function isWindow(obj : Object) : boolean {\n\n    try {\n        if (obj === window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        // $FlowFixMe method-unbinding\n        if (Object.prototype.toString.call(obj) === '[object Window]') {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (window.Window && obj instanceof window.Window) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.self === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.parent === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (obj && obj.top === obj) {\n            return true;\n        }\n    } catch (err) {\n        if (err && err.message === IE_WIN_ACCESS_ERROR) {\n            return true;\n        }\n    }\n\n    try {\n        if (noop(obj === obj) === '__unlikely_value__') { // eslint-disable-line no-self-compare\n            return false;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if (obj && obj.__cross_domain_utils_window_check__ === '__unlikely_value__') {\n            return false;\n        }\n\n    } catch (err) {\n        return true;\n    }\n\n    try {\n        if ('postMessage' in obj && 'self' in obj && 'location' in obj) {\n            return true;\n        }\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined' && typeof window.location !== 'undefined');\n}\n\nexport function isCurrentDomain(domain : string) : boolean {\n    if (!isBrowser()) {\n        return false;\n    }\n\n    return (getDomain() === domain);\n}\n\nexport function isMockDomain(domain : string) : boolean {\n    return domain.indexOf(PROTOCOL.MOCK) === 0;\n}\n\nexport function normalizeMockUrl(url : string) : string {\n    if (!isMockDomain(getDomainFromUrl(url))) {\n        return url;\n    }\n\n    if (!__TEST__) {\n        throw new Error(`Mock urls not supported out of test mode`);\n    }\n\n    return url.replace(/^mock:\\/\\/[^/]+/, getActualDomain(window));\n}\n\nexport function getFrameForWindow(win : CrossDomainWindowType) : ?HTMLElement {\n    if (isSameDomain(win)) {\n        return assertSameDomain(win).frameElement;\n    }\n\n    for (const frame of document.querySelectorAll('iframe')) {\n        if (frame && frame.contentWindow && frame.contentWindow === win) {\n            return frame;\n        }\n    }\n}\n\nexport function closeWindow(win : CrossDomainWindowType) {\n    if (isIframe(win)) {\n        const frame = getFrameForWindow(win);\n        if (frame && frame.parentElement) {\n            frame.parentElement.removeChild(frame);\n            return;\n        }\n    }\n\n    try {\n        win.close();\n    } catch (err) {\n        // pass\n    }\n}\n","/* @flow */\n\nexport function safeIndexOf<T>(collection : $ReadOnlyArray<T>, item : T) : number {\n    for (let i = 0; i < collection.length; i++) {\n\n        try {\n            if (collection[i] === item) {\n                return i;\n            }\n        } catch (err) {\n            // pass\n        }\n    }\n\n    return -1;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : $ReadOnlyArray<mixed>) {\n    // pass\n}\n","/* @flow */\n\nimport { isWindow, isWindowClosed } from 'cross-domain-utils/src';\n\nimport { hasNativeWeakMap } from './native';\nimport { noop, safeIndexOf } from './util';\n\nexport class CrossDomainSafeWeakMap<K : Object, V : mixed> {\n\n    name : string\n    weakmap : ?WeakMap<K, V>\n    // eslint-disable-next-line flowtype/no-mutable-array\n    keys : Array<K>\n    // eslint-disable-next-line flowtype/no-mutable-array\n    values : Array<V>\n\n    constructor() {\n        // eslint-disable-next-line no-bitwise\n        this.name = `__weakmap_${ Math.random() * 1e9 >>> 0 }__`;\n\n        if (hasNativeWeakMap()) {\n            try {\n                this.weakmap = new WeakMap();\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this.keys  = [];\n        this.values = [];\n    }\n\n    _cleanupClosedWindows() {\n\n        const weakmap = this.weakmap;\n        const keys = this.keys;\n\n        for (let i = 0; i < keys.length; i++) {\n            const value = keys[i];\n\n            if (isWindow(value) && isWindowClosed(value)) {\n\n                if (weakmap) {\n                    try {\n                        weakmap.delete(value);\n                    } catch (err) {\n                        // pass\n                    }\n                }\n\n                keys.splice(i, 1);\n                this.values.splice(i, 1);\n\n                i -= 1;\n            }\n        }\n    }\n\n    isSafeToReadWrite(key : K) : boolean {\n\n        if (isWindow(key)) {\n            return false;\n        }\n\n        try {\n            noop(key && key.self);\n            noop(key && key[this.name]);\n        } catch (err) {\n            return false;\n        }\n\n        return true;\n    }\n\n    set(key : K, value : V) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        const weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.set(key, value);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                const name = this.name;\n                const entry = key[name];\n\n                if (entry && entry[0] === key) {\n                    entry[1] = value;\n                } else {\n                    Object.defineProperty(key, name, {\n                        value:    [ key, value ],\n                        writable: true\n                    });\n                }\n\n                return;\n\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        const keys = this.keys;\n        const values = this.values;\n        const index = safeIndexOf(keys, key);\n\n        if (index === -1) {\n            keys.push(key);\n            values.push(value);\n        } else {\n            values[index] = value;\n        }\n    }\n\n    get(key : K) : V | void {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        const weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return weakmap.get(key);\n                }\n                \n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                const entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    return entry[1];\n                }\n\n                return;\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        const keys = this.keys;\n        const index = safeIndexOf(keys, key);\n\n        if (index === -1) {\n            return;\n        }\n\n        return this.values[index];\n    }\n\n    delete(key : K) {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        const weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                weakmap.delete(key);\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                const entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    entry[0] = entry[1] = undefined;\n                }\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        const keys = this.keys;\n        const index = safeIndexOf(keys, key);\n\n        if (index !== -1) {\n            keys.splice(index, 1);\n            this.values.splice(index, 1);\n        }\n    }\n\n    has(key : K) : boolean {\n\n        if (!key) {\n            throw new Error(`WeakMap expected key`);\n        }\n\n        const weakmap = this.weakmap;\n\n        if (weakmap) {\n            try {\n                if (weakmap.has(key)) {\n                    return true;\n                }\n            } catch (err) {\n                delete this.weakmap;\n            }\n        }\n\n        if (this.isSafeToReadWrite(key)) {\n            try {\n                const entry = key[this.name];\n\n                if (entry && entry[0] === key) {\n                    return true;\n                }\n\n                return false;\n            } catch (err) {\n                // pass\n            }\n        }\n\n        this._cleanupClosedWindows();\n\n        const index = safeIndexOf(this.keys, key);\n        return index !== -1;\n    }\n\n    getOrSet(key : K, getter : () => V) : V {\n        if (this.has(key)) {\n            // $FlowFixMe\n            return this.get(key);\n        }\n\n        const value = getter();\n        this.set(key, value);\n        return value;\n    }\n}\n","\n/* @flow */\n/* eslint max-lines: 0 */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport type { CancelableType } from './types';\n\nexport function getFunctionName <T : Function>(fn : T) : string {\n    return fn.name || fn.__name__ || fn.displayName || 'anonymous';\n}\n\nexport function setFunctionName <T : Function>(fn : T, name : string) : T {\n    try {\n        delete fn.name;\n        fn.name = name;\n    } catch (err) {\n        // pass\n    }\n\n    fn.__name__ = fn.displayName = name;\n    return fn;\n}\n\nexport function base64encode(str : string) : string {\n    if (typeof btoa === 'function') {\n        return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (m, p1) => {\n            return String.fromCharCode(parseInt(p1, 16));\n        })).replace(/[=]/g, '');\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'utf8').toString('base64').replace(/[=]/g, '');\n    }\n\n    throw new Error(`Can not find window.btoa or Buffer`);\n}\n\nexport function base64decode(str : string) : string {\n    if (typeof atob === 'function') {\n        // $FlowFixMe[method-unbinding]\n        return decodeURIComponent(Array.prototype.map.call(atob(str), c => {\n            // eslint-disable-next-line prefer-template\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        }).join(''));\n    }\n\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str, 'base64').toString('utf8');\n    }\n\n    throw new Error(`Can not find window.atob or Buffer`);\n}\n\nexport function uniqueID() : string {\n\n    const chars = '0123456789abcdef';\n\n    const randomID = 'xxxxxxxxxx'.replace(/./g, () => {\n        return chars.charAt(Math.floor(Math.random() * chars.length));\n    });\n\n    const timeID = base64encode(\n        new Date().toISOString().slice(11, 19).replace('T', '.')\n    ).replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n\n    return `uid_${ randomID }_${ timeID }`;\n}\n\nexport function getGlobal() : Object {\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    if (typeof __GLOBAL__ !== 'undefined') {\n        return __GLOBAL__;\n    }\n    throw new Error(`No global found`);\n}\n\nlet objectIDs;\n\nexport function getObjectID(obj : Object) : string {\n\n    objectIDs = objectIDs || new WeakMap();\n\n    if (obj === null || obj === undefined || (typeof obj !== 'object' && typeof obj !== 'function')) {\n        throw new Error(`Invalid object`);\n    }\n\n    let uid = objectIDs.get(obj);\n\n    if (!uid) {\n        uid = `${ typeof obj }:${ uniqueID() }`;\n        objectIDs.set(obj, uid);\n    }\n\n    return uid;\n}\n\nfunction serializeArgs<T>(args : $ReadOnlyArray<T>) : string {\n    try {\n        // $FlowFixMe[method-unbinding]\n        return JSON.stringify(Array.prototype.slice.call(args), (subkey, val) => {\n            if (typeof val === 'function') {\n                return `memoize[${ getObjectID(val) }]`;\n            }\n            return val;\n        });\n    } catch (err) {\n        throw new Error(`Arguments not serializable -- can not be used to memoize`);\n    }\n}\n\nexport function getEmptyObject() : {||} {\n    // $FlowFixMe\n    return {};\n}\n\ntype MemoizeOptions = {|\n    name? : string,\n    time? : number,\n    thisNamespace? : boolean\n|};\n\nconst getDefaultMemoizeOptions = () : MemoizeOptions => {\n    // $FlowFixMe\n    return {};\n};\n\nexport type Memoized<F> = F & {| reset : () => void |};\n\nlet memoizeGlobalIndex = 0;\nlet memoizeGlobalIndexValidFrom = 0;\n\nexport function memoize<F : Function>(method : F, options? : MemoizeOptions = getDefaultMemoizeOptions()) : Memoized<F> {\n    const { thisNamespace = false, time: cacheTime } = options;\n\n    let simpleCache;\n    let thisCache;\n\n    let memoizeIndex = memoizeGlobalIndex;\n    memoizeGlobalIndex += 1;\n\n    const memoizedFunction = function memoizedFunction(...args) : mixed {\n        if (memoizeIndex < memoizeGlobalIndexValidFrom) {\n            simpleCache = null;\n            thisCache = null;\n            memoizeIndex = memoizeGlobalIndex;\n            memoizeGlobalIndex += 1;\n        }\n\n        let cache;\n\n        if (thisNamespace) {\n            thisCache = thisCache || new WeakMap();\n            cache = thisCache.getOrSet(this, getEmptyObject);\n        } else {\n            cache = simpleCache = simpleCache || {};\n        }\n\n        const cacheKey = serializeArgs(args);\n        let cacheResult = cache[cacheKey];\n\n        if (cacheResult && cacheTime && (Date.now() - cacheResult.time) < cacheTime) {\n            delete cache[cacheKey];\n            cacheResult = null;\n        }\n\n        if (cacheResult) {\n            return cacheResult.value;\n        }\n\n        const time  = Date.now();\n        const value = method.apply(this, arguments);\n\n        cache[cacheKey] = { time, value };\n\n        return value;\n    };\n\n    memoizedFunction.reset = () => {\n        simpleCache = null;\n        thisCache = null;\n    };\n\n    // $FlowFixMe\n    const result : F = memoizedFunction;\n\n    return setFunctionName(result, `${ options.name || getFunctionName(method) }::memoized`);\n}\n\nmemoize.clear = () => {\n    memoizeGlobalIndexValidFrom = memoizeGlobalIndex;\n};\n\nexport function promiseIdentity<T : mixed>(item : ZalgoPromise<T> | T) : ZalgoPromise<T> {\n    // $FlowFixMe\n    return ZalgoPromise.resolve(item);\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function memoizePromise<R>(method : (...args : $ReadOnlyArray<any>) => ZalgoPromise<R>) : ((...args : $ReadOnlyArray<any>) => ZalgoPromise<R>) {\n    let cache = {};\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    function memoizedPromiseFunction(...args : $ReadOnlyArray<any>) : ZalgoPromise<R> {\n        const key : string = serializeArgs(args);\n\n        if (cache.hasOwnProperty(key)) {\n            return cache[key];\n        }\n\n        cache[key] = ZalgoPromise.try(() => method.apply(this, arguments))\n            .finally(() => {\n                delete cache[key];\n            });\n\n        return cache[key];\n    }\n\n    memoizedPromiseFunction.reset = () => {\n        cache = {};\n    };\n\n    return setFunctionName(memoizedPromiseFunction, `${ getFunctionName(method) }::promiseMemoized`);\n}\n\ntype PromisifyOptions = {|\n    name ? : string\n|};\n\nconst getDefaultPromisifyOptions = () : PromisifyOptions => {\n    // $FlowFixMe\n    return {};\n};\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function promisify<R>(method : (...args : $ReadOnlyArray<any>) => R, options : PromisifyOptions = getDefaultPromisifyOptions()) : ((...args : $ReadOnlyArray<any>) => ZalgoPromise<R>) {\n    function promisifiedFunction() : ZalgoPromise<R> {\n        return ZalgoPromise.try(method, this, arguments);\n    }\n\n    if (options.name) {\n        promisifiedFunction.displayName = `${ options.name }:promisified`;\n    }\n\n    return setFunctionName(promisifiedFunction, `${ getFunctionName(method) }::promisified`);\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function inlineMemoize<R>(method : (...args : $ReadOnlyArray<any>) => R, logic : (...args : $ReadOnlyArray<any>) => R, args : $ReadOnlyArray<any> = []) : R {\n    // $FlowFixMe\n    const cache : {| [string] : R |} = method.__inline_memoize_cache__ = method.__inline_memoize_cache__ || {};\n    const key = serializeArgs(args);\n\n    if (cache.hasOwnProperty(key)) {\n        return cache[key];\n    }\n    \n    const result = cache[key] = logic(...args);\n\n    return result;\n}\n\n// eslint-disable-next-line no-unused-vars\nexport function noop(...args : $ReadOnlyArray<mixed>) {\n    // pass\n}\n\nexport function once(method : Function) : Function {\n    let called = false;\n\n    const onceFunction = function() : mixed {\n        if (!called) {\n            called = true;\n            return method.apply(this, arguments);\n        }\n    };\n\n    return setFunctionName(onceFunction, `${ getFunctionName(method) }::once`);\n}\n\nexport function hashStr(str : string) : number {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n        hash += str[i].charCodeAt(0) * Math.pow((i % 10) + 1, 5);\n    }\n    return Math.floor(Math.pow(Math.sqrt(hash), 5));\n}\n\nexport function strHashStr(str : string) : string {\n    let hash = '';\n\n    for (let i = 0; i < str.length; i++) {\n        let total = (str[i].charCodeAt(0) * i);\n\n        if (str[i + 1]) {\n            total += (str[i + 1].charCodeAt(0) * (i - 1));\n        }\n\n        hash += String.fromCharCode(97 + (Math.abs(total) % 26));\n    }\n\n    return hash;\n}\n\nexport function match(str : string, pattern : RegExp) : ?string {\n    const regmatch = str.match(pattern);\n    if (regmatch) {\n        return regmatch[1];\n    }\n}\n\nexport function awaitKey<T: mixed>(obj : Object, key : string) : ZalgoPromise<T> {\n    return new ZalgoPromise(resolve => {\n\n        let value = obj[key];\n\n        if (value) {\n            return resolve(value);\n        }\n\n        delete obj[key];\n\n        Object.defineProperty(obj, key, {\n\n            configurable: true,\n\n            set(item) {\n                value = item;\n\n                if (value) {\n                    resolve(value);\n                }\n            },\n\n            get() : T {\n                return value;\n            }\n        });\n    });\n}\n\nexport function stringifyError(err : mixed, level : number = 1) : string {\n\n    if (level >= 3) {\n        return 'stringifyError stack overflow';\n    }\n\n    try {\n        if (!err) {\n            // $FlowFixMe[method-unbinding]\n            return `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n        }\n\n        if (typeof err === 'string') {\n            return err;\n        }\n\n        if (err instanceof Error) {\n            const stack = err && err.stack;\n            const message = err && err.message;\n\n            if (stack && message) {\n                if (stack.indexOf(message) !== -1) {\n                    return stack;\n                } else {\n                    return `${ message }\\n${ stack }`;\n                }\n            } else if (stack) {\n                return stack;\n            } else if (message) {\n                return message;\n            }\n        }\n\n        if (err && err.toString && typeof err.toString === 'function') {\n            // $FlowFixMe\n            return err.toString();\n        }\n\n        // $FlowFixMe[method-unbinding]\n        return Object.prototype.toString.call(err);\n\n    } catch (newErr) {\n        return `Error while stringifying error: ${ stringifyError(newErr, level + 1) }`;\n    }\n}\n\nexport function stringifyErrorMessage(err : mixed) : string {\n\n    // $FlowFixMe[method-unbinding]\n    const defaultMessage = `<unknown error: ${ Object.prototype.toString.call(err) }>`;\n\n    if (!err) {\n        return defaultMessage;\n    }\n\n    if (err instanceof Error) {\n        return err.message || defaultMessage;\n    }\n\n    if (typeof err.message === 'string') {\n        return err.message || defaultMessage;\n    }\n\n    return defaultMessage;\n}\n\nexport function stringify(item : mixed) : string {\n    if (typeof item === 'string') {\n        return item;\n    }\n\n    if (item && item.toString && typeof item.toString === 'function') {\n        // $FlowFixMe\n        return item.toString();\n    }\n\n    // $FlowFixMe[method-unbinding]\n    return Object.prototype.toString.call(item);\n}\n\nexport function domainMatches(hostname : string, domain : string) : boolean {\n    hostname = hostname.split('://')[1];\n    const index = hostname.indexOf(domain);\n    return (index !== -1 && hostname.slice(index) === domain);\n}\n\nexport function patchMethod(obj : Object, name : string, handler : Function) {\n    const original = obj[name];\n\n    obj[name] = function patchedMethod() : mixed {\n        return handler({\n            context:      this,\n            // $FlowFixMe[method-unbinding]\n            args:         Array.prototype.slice.call(arguments),\n            original,\n            callOriginal: () => original.apply(this, arguments)\n        });\n    };\n}\n\nexport function extend<T : Object | Function>(obj : T, source : Object) : T {\n    if (!source) {\n        return obj;\n    }\n\n    if (Object.assign) {\n        return Object.assign(obj, source);\n    }\n\n    for (const key in source) {\n        if (source.hasOwnProperty(key)) {\n            obj[key] = source[key];\n        }\n    }\n\n    return obj;\n}\n\nexport function values<T>(obj : { [string] : T }) : $ReadOnlyArray<T> {\n    if (Object.values) {\n        // $FlowFixMe\n        return Object.values(obj);\n    }\n\n    const result : Array<T> = [];\n    for (const key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            // $FlowFixMe[escaped-generic]\n            result.push(obj[key]);\n        }\n    }\n\n    // $FlowFixMe\n    return result;\n}\n\n// eslint-disable-next-line no-undef\nexport const memoizedValues : <T>({ [string] : T }) => $ReadOnlyArray<T> = memoize(values);\n\nexport function perc(pixels : number, percentage : number) : number {\n    return Math.round((pixels * percentage) / 100);\n}\n\nexport function min(...args : $ReadOnlyArray<number>) : number {\n    return Math.min(...args);\n}\n\nexport function max(...args : $ReadOnlyArray<number>) : number {\n    return Math.max(...args);\n}\n\nexport function roundUp(num : number, nearest : number) : number {\n    const remainder = num % nearest;\n    return remainder\n        ? (num - remainder) + nearest\n        : num;\n}\n\nexport function regexMap<T>(str : string, regexp : RegExp, handler : () => T) : $ReadOnlyArray<T> {\n    const results = [];\n\n    // $FlowFixMe\n    str.replace(regexp, function regexMapMatcher(item) {\n        results.push(handler ? handler.apply(null, arguments) : item);\n    });\n\n    // $FlowFixMe\n    return results;\n}\n\nexport function svgToBase64(svg : string) : string {\n    return `data:image/svg+xml;base64,${ base64encode(svg) }`;\n}\n\nexport function objFilter<T, R>(obj : { [string] : T }, filter? : (T, ?string) => mixed = Boolean) : { [string] : R } {\n    const result = {};\n\n    for (const key in obj) {\n        if (!obj.hasOwnProperty(key) || !filter(obj[key], key)) {\n            continue;\n        }\n\n        result[key] = obj[key];\n    }\n\n    return result;\n}\n\nexport function identity <T>(item : T) : T {\n    return item;\n}\n\nexport function regexTokenize(text : string, regexp : RegExp) : $ReadOnlyArray<string> {\n    const result = [];\n    text.replace(regexp, token => {\n        result.push(token);\n        return '';\n    });\n    return result;\n}\n\nexport function promiseDebounce<T>(method : () => ZalgoPromise<T> | T, delay : number = 50) : () => ZalgoPromise<T> {\n\n    let promise;\n    let timeout;\n\n    const promiseDebounced = function() : ZalgoPromise<T> {\n        if (timeout) {\n            clearTimeout(timeout);\n        }\n\n        const localPromise = promise = promise || new ZalgoPromise();\n\n        timeout = setTimeout(() => {\n            promise = null;\n            timeout = null;\n\n            ZalgoPromise.try(method).then(\n                result => { localPromise.resolve(result); },\n                err => { localPromise.reject(err); }\n            );\n        }, delay);\n\n        return localPromise;\n    };\n\n    return setFunctionName(promiseDebounced, `${ getFunctionName(method) }::promiseDebounced`);\n}\n\nexport function safeInterval(method : Function, time : number) : {| cancel : () => void |} {\n\n    let timeout;\n\n    function loop() {\n        timeout = setTimeout(() => {\n            method();\n            loop();\n        }, time);\n    }\n\n    loop();\n\n    return {\n        cancel() {\n            clearTimeout(timeout);\n        }\n    };\n}\n\nexport function isInteger(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+$/));\n}\n\nexport function isFloat(str : string) : boolean {\n    return Boolean(str.match(/^[0-9]+\\.[0-9]+$/));\n}\n\nexport function serializePrimitive(value : string | number | boolean) : string {\n    return value.toString();\n}\n\nexport function deserializePrimitive(value : string) : string | number | boolean {\n    if (value === 'true') {\n        return true;\n    } else if (value === 'false') {\n        return false;\n    } else if (isInteger(value)) {\n        return parseInt(value, 10);\n    } else if (isFloat(value)) {\n        return parseFloat(value);\n    } else {\n        return value;\n    }\n}\n\nexport function dotify(obj : Object, prefix : string = '', newobj : Object = {}) : { [string] : string } {\n    prefix = prefix ? `${ prefix }.` : prefix;\n    for (const key in obj) {\n        if (!obj.hasOwnProperty(key) || obj[key] === undefined || obj[key] === null || typeof obj[key] === 'function') {\n            continue;\n        } else if (obj[key] && Array.isArray(obj[key]) && obj[key].length && obj[key].every(val => typeof val !== 'object')) {\n            newobj[`${ prefix }${ key }[]`] = obj[key].join(',');\n        } else if (obj[key] && typeof obj[key] === 'object') {\n            newobj = dotify(obj[key], `${ prefix }${ key }`, newobj);\n        } else {\n            newobj[`${ prefix }${ key }`] = serializePrimitive(obj[key]);\n        }\n    }\n    return newobj;\n}\n\nexport function undotify(obj : { [string] : string }) : Object {\n    \n    const result = {};\n\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key) || typeof obj[key] !== 'string') {\n            continue;\n        }\n\n        let value = obj[key];\n\n        if (key.match(/^.+\\[\\]$/)) {\n            key = key.slice(0, -2);\n            value = value.split(',').map(deserializePrimitive);\n        } else {\n            value = deserializePrimitive(value);\n        }\n\n        let keyResult = result;\n        const parts = key.split('.');\n        for (let i = 0; i < parts.length; i++) {\n            const part = parts[i];\n            const isLast = (i + 1 === parts.length);\n            const isIndex = !isLast && isInteger(parts[i + 1]);\n\n            if (part === 'constructor' || part === 'prototype' || part === '__proto__') {\n                throw new Error(`Disallowed key: ${ part }`);\n            }\n\n            if (isLast) {\n                // $FlowFixMe\n                keyResult[part] = value;\n            } else {\n                // $FlowFixMe\n                keyResult = keyResult[part] = keyResult[part] || (isIndex ? [] : {});\n            }\n        }\n    }\n\n    return result;\n}\n\nexport type EventEmitterType = {|\n    on : (eventName : string, handler : Function) => CancelableType,\n    once : (eventName : string, handler : Function) => CancelableType,\n    trigger : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>,\n    triggerOnce : (eventName : string, ...args : $ReadOnlyArray<mixed>) => ZalgoPromise<void>,\n    reset : () => void\n|};\n\nexport function eventEmitter() : EventEmitterType {\n    const triggered = {};\n    let handlers = {};\n\n    const emitter = {\n\n        on(eventName : string, handler : Function) : CancelableType {\n            const handlerList = handlers[eventName] = handlers[eventName] || [];\n\n            handlerList.push(handler);\n\n            let cancelled = false;\n\n            return {\n                cancel() {\n                    if (!cancelled) {\n                        cancelled = true;\n                        handlerList.splice(handlerList.indexOf(handler), 1);\n                    }\n\n                }\n            };\n        },\n\n        once(eventName : string, handler : Function) : CancelableType {\n\n            const listener = emitter.on(eventName, () => {\n                listener.cancel();\n                handler();\n            });\n\n            return listener;\n        },\n\n        trigger(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            const handlerList = handlers[eventName];\n            const promises = [];\n\n            if (handlerList) {\n                for (const handler of handlerList) {\n                    promises.push(ZalgoPromise.try(() => handler(...args)));\n                }\n            }\n\n            return ZalgoPromise.all(promises).then(noop);\n        },\n\n        triggerOnce(eventName : string, ...args : $ReadOnlyArray<mixed>) : ZalgoPromise<void> {\n\n            if (triggered[eventName]) {\n                return ZalgoPromise.resolve();\n            }\n\n            triggered[eventName] = true;\n            return emitter.trigger(eventName, ...args);\n        },\n\n        reset() {\n            handlers = {};\n        }\n    };\n\n    return emitter;\n}\n\nexport function camelToDasherize(string : string) : string {\n    return string.replace(/([A-Z])/g, (g) => {\n        return `-${ g.toLowerCase() }`;\n    });\n}\n\nexport function dasherizeToCamel(string : string) : string {\n    return string.replace(/-([a-z])/g, (g) => {\n        return g[1].toUpperCase();\n    });\n}\n\nexport function capitalizeFirstLetter(string : string) : string {\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n}\n\nexport function get(item : Object, path : string, def : mixed) : mixed {\n\n    if (!path) {\n        return def;\n    }\n\n    const pathParts = path.split('.');\n\n    // Loop through each section of our key path\n\n    for (let i = 0; i < pathParts.length; i++) {\n\n        // If we have an object, we can get the key\n        if (typeof item === 'object' && item !== null) {\n            item = item[pathParts[i]];\n\n        // Otherwise, we should return the default (undefined if not provided)\n        } else {\n            return def;\n        }\n    }\n\n    // If our final result is undefined, we should return the default\n\n    return item === undefined ? def : item;\n}\n\nexport function safeTimeout(method : Function, time : number) {\n\n    const interval = safeInterval(() => {\n        time -= 100;\n        if (time <= 0) {\n            interval.cancel();\n            method();\n        }\n    }, 100);\n}\n\nexport function defineLazyProp<T>(obj : Object | $ReadOnlyArray<mixed>, key : string | number, getter : () => T) {\n    if (Array.isArray(obj)) {\n        if (typeof key !== 'number') {\n            throw new TypeError(`Array key must be number`);\n        }\n    } else if (typeof obj === 'object' && obj !== null) {\n        if (typeof key !== 'string') {\n            throw new TypeError(`Object key must be string`);\n        }\n    }\n    \n    Object.defineProperty(obj, key, {\n        configurable: true,\n        enumerable:   true,\n        get:          () => {\n            // $FlowFixMe\n            delete obj[key];\n            const value = getter();\n            // $FlowFixMe\n            obj[key] = value;\n            return value;\n        },\n        set: (value : T) => {\n            // $FlowFixMe\n            delete obj[key];\n            // $FlowFixMe\n            obj[key] = value;\n        }\n    });\n}\n\nexport function arrayFrom<T>(item : Iterable<T>) : $ReadOnlyArray<T> { // eslint-disable-line no-undef\n    // $FlowFixMe[method-unbinding]\n    return Array.prototype.slice.call(item);\n}\n\nexport function isObject(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null);\n}\n\nexport function isObjectObject(obj : mixed) : boolean {\n    // $FlowFixMe[method-unbinding]\n    return isObject(obj) && Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nexport function isPlainObject(obj : mixed) : boolean {\n    if (!isObjectObject(obj)) {\n        return false;\n    }\n\n    // $FlowFixMe\n    const constructor = obj.constructor;\n\n    if (typeof constructor !== 'function') {\n        return false;\n    }\n\n    const prototype = constructor.prototype;\n\n    if (!isObjectObject(prototype)) {\n        return false;\n    }\n\n    if (!prototype.hasOwnProperty('isPrototypeOf')) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function replaceObject<T : $ReadOnlyArray<mixed> | Object> (item : T, replacer : (mixed, string | number, string) => mixed, fullKey : string = '') : T {\n\n    if (Array.isArray(item)) {\n        const length = item.length;\n        const result : Array<mixed> = [];\n\n        for (let i = 0; i < length; i++) {\n\n            \n            defineLazyProp(result, i, () => {\n                const itemKey = fullKey ? `${ fullKey }.${ i }` : `${ i }`;\n                const el = item[i];\n\n                let child = replacer(el, i, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else if (isPlainObject(item)) {\n        const result = {};\n\n        for (const key in item) {\n            if (!item.hasOwnProperty(key)) {\n                continue;\n            }\n\n            defineLazyProp(result, key, () => {\n                const itemKey = fullKey ? `${ fullKey }.${ key }` : `${ key }`;\n                // $FlowFixMe\n                const el = item[key];\n\n                let child = replacer(el, key, itemKey);\n\n                if (isPlainObject(child) || Array.isArray(child)) {\n                    // $FlowFixMe\n                    child = replaceObject(child, replacer, itemKey);\n                }\n\n                return child;\n            });\n        }\n\n        // $FlowFixMe\n        return result;\n    } else {\n        throw new Error(`Pass an object or array`);\n    }\n}\n\n\nexport function copyProp(source : Object, target : Object, name : string, def : mixed) {\n    if (source.hasOwnProperty(name)) {\n        const descriptor = Object.getOwnPropertyDescriptor(source, name);\n        // $FlowFixMe\n        Object.defineProperty(target, name, descriptor);\n\n    } else {\n        target[name] = def;\n    }\n}\n\ntype RegexResultType = {|\n    text : string,\n    groups : $ReadOnlyArray<string>,\n    start : number,\n    end : number,\n    length : number,\n    replace : (text : string) => string\n|};\n\nexport function regex(pattern : string | RegExp, string : string, start : number = 0) : ?RegexResultType {\n\n    if (typeof pattern === 'string') {\n        // eslint-disable-next-line security/detect-non-literal-regexp\n        pattern = new RegExp(pattern);\n    }\n\n    const result = string.slice(start).match(pattern);\n\n    if (!result) {\n        return;\n    }\n\n    // $FlowFixMe\n    const index : number = result.index;\n    const regmatch = result[0];\n\n    return {\n        text:   regmatch,\n        groups: result.slice(1),\n        start:  start + index,\n        end:    start + index + regmatch.length,\n        length: regmatch.length,\n\n        replace(text : string) : string {\n\n            if (!regmatch) {\n                return '';\n            }\n\n            return `${ regmatch.slice(0, start + index) }${ text }${ regmatch.slice(index + regmatch.length) }`;\n        }\n    };\n}\n\nexport function regexAll(pattern : string | RegExp, string : string) : $ReadOnlyArray<RegexResultType> {\n\n    const matches = [];\n    let start = 0;\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        const regmatch = regex(pattern, string, start);\n\n        if (!regmatch) {\n            break;\n        }\n\n        matches.push(regmatch);\n        start = match.end;\n    }\n\n    return matches;\n}\n\nexport function isDefined(value : ?mixed) : boolean {\n    return value !== null && value !== undefined;\n}\n\nexport function cycle(method : Function) : ZalgoPromise<void> {\n    return ZalgoPromise.try(method).then(() => cycle(method));\n}\n\nexport function debounce<T>(method : (...args : $ReadOnlyArray<mixed>) => T, time : number = 100) : (...args : $ReadOnlyArray<mixed>) => void {\n\n    let timeout;\n\n    const debounceWrapper = function() {\n        clearTimeout(timeout);\n\n        timeout = setTimeout(() => {\n            return method.apply(this, arguments);\n        }, time);\n    };\n\n    return setFunctionName(debounceWrapper, `${ getFunctionName(method) }::debounced`);\n}\n\nexport function isRegex(item : mixed) : boolean {\n    // $FlowFixMe[method-unbinding]\n    return Object.prototype.toString.call(item) === '[object RegExp]';\n}\n\ntype FunctionProxy<T : Function> = (method : T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport const weakMapMemoize : FunctionProxy<*> = <R : mixed>(method : (arg : any) => R) : ((...args : $ReadOnlyArray<any>) => R) => {\n\n    const weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoized(arg : any) : R {\n        return weakmap.getOrSet(arg, () => method.call(this, arg));\n    };\n};\n\ntype FunctionPromiseProxy<R : mixed, T : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<R>> = (T) => T;\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport const weakMapMemoizePromise : FunctionPromiseProxy<*, *> = <R : mixed>(method : (arg : any) => ZalgoPromise<R>) : ((...args : $ReadOnlyArray<any>) => ZalgoPromise<R>) => {\n\n    const weakmap = new WeakMap();\n\n    // eslint-disable-next-line flowtype/no-weak-types\n    return function weakmapMemoizedPromise(arg : any) : ZalgoPromise<R> {\n        return weakmap.getOrSet(arg, () =>\n            method.call(this, arg).finally(() => {\n                weakmap.delete(arg);\n            }));\n    };\n};\n\nexport function getOrSet<O : Object, T : mixed>(obj : O, key : string, getter : () => T) : T {\n    if (obj.hasOwnProperty(key)) {\n        return obj[key];\n    }\n\n    const val = getter();\n    obj[key] = val;\n    return val;\n}\n\nexport type CleanupType = {|\n    set : <T : mixed>(string, T) => T, // eslint-disable-line no-undef\n    register : (Function) => {| cancel : () => void |},\n    all : (err? : mixed) => ZalgoPromise<void>\n|};\n\nexport function cleanup(obj : Object) : CleanupType {\n\n    const tasks = [];\n    let cleaned = false;\n    let cleanErr;\n\n    const cleaner = {\n        set<T : mixed>(name : string, item : T) : T {\n            if (!cleaned) {\n                obj[name] = item;\n                cleaner.register(() => {\n                    delete obj[name];\n                });\n            }\n            return item;\n        },\n\n        register(method : Function) : {| cancel : () => void |} {\n            const task = once(() => method(cleanErr));\n\n            if (cleaned) {\n                method(cleanErr);\n            } else {\n                tasks.push(task);\n            }\n\n            return {\n                cancel: () => {\n                    const index = tasks.indexOf(task);\n                    if (index !== -1) {\n                        tasks.splice(index, 1);\n                    }\n                }\n            };\n        },\n\n        all(err? : mixed) : ZalgoPromise<void> {\n            cleanErr = err;\n\n            const results = [];\n            cleaned = true;\n\n            while (tasks.length) {\n                const task = tasks.shift();\n                results.push(task());\n            }\n\n            return ZalgoPromise.all(results).then(noop);\n        }\n    };\n\n    return cleaner;\n}\n\nexport function tryCatch<T>(fn : () => T) : {| result : T, error : void |} | {| result : void, error : mixed |} {\n    let result;\n    let error;\n\n    try {\n        result = fn();\n    } catch (err) {\n        error = err;\n    }\n    \n    // $FlowFixMe\n    return { result, error };\n}\n\n// eslint-disable-next-line flowtype/no-mutable-array\nexport function removeFromArray<X, T : Array<X>>(arr : T, item : X) {\n    const index = arr.indexOf(item);\n    if (index !== -1) {\n        arr.splice(index, 1);\n    }\n}\n\nexport function assertExists<T>(name : string, thing : void | null | T) : T {\n    if (thing === null || typeof thing === 'undefined') {\n        throw new Error(`Expected ${ name } to be present`);\n    }\n                            \n    return thing;\n}\n\nexport function unique(arr : $ReadOnlyArray<string>) : $ReadOnlyArray<string> {\n    const result = {};\n    for (const item of arr) {\n        result[item] = true;\n    }\n    return Object.keys(result);\n}\n\nexport const constHas = <X : (string | boolean | number), T : { [string] : X }>(constant : T, value : X) : boolean => {\n    return memoizedValues(constant).indexOf(value) !== -1;\n};\n\nexport function dedupeErrors<T>(handler : (mixed) => T) : (mixed) => (T | void) {\n    const seenErrors = [];\n    const seenStringifiedErrors = {};\n\n    return (err) => {\n        if (seenErrors.indexOf(err) !== -1) {\n            return;\n        }\n\n        seenErrors.push(err);\n\n        const stringifiedError = stringifyError(err);\n        if (seenStringifiedErrors[stringifiedError]) {\n            return;\n        }\n\n        seenStringifiedErrors[stringifiedError] = true;\n        return handler(err);\n    };\n}\n\nexport class ExtendableError extends Error {\n    constructor(message : string) {\n        super(message);\n        // eslint-disable-next-line unicorn/custom-error-definition\n        this.name = this.constructor.name;\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, this.constructor);\n        } else {\n            this.stack = (new Error(message)).stack;\n        }\n    }\n}\n  \n","/* @flow */\n\nexport function hasNativeWeakMap() : boolean {\n\n    if (typeof WeakMap === 'undefined') {\n        return false;\n    }\n\n    if (typeof Object.freeze === 'undefined') {\n        return false;\n    }\n\n    try {\n\n        const testWeakMap = new WeakMap();\n        const testKey = {};\n        const testValue = '__testvalue__';\n\n        Object.freeze(testKey);\n\n        testWeakMap.set(testKey, testValue);\n\n        if (testWeakMap.get(testKey) === testValue) {\n            return true;\n        }\n\n        return false;\n\n    } catch (err) {\n\n        return false;\n    }\n}\n","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nimport isNativeFunction from \"@babel/runtime/helpers/esm/isNativeFunction\";\nimport construct from \"@babel/runtime/helpers/esm/construct\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","/* @flow */\n/* eslint max-lines: off */\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { linkFrameWindow, isWindowClosed, assertSameDomain,\n    type SameDomainWindowType, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\n\nimport { inlineMemoize, memoize, noop, stringify, capitalizeFirstLetter,\n    once, extend, safeInterval, uniqueID, arrayFrom, ExtendableError, strHashStr } from './util';\nimport { isDevice } from './device';\nimport { KEY_CODES, ATTRIBUTES, UID_HASH_LENGTH } from './constants';\nimport type { CancelableType } from './types';\n\ntype ElementRefType = string | HTMLElement;\n\nexport function getBody() : HTMLBodyElement {\n    // eslint-disable-next-line compat/compat\n    const body = document.body;\n\n    if (!body) {\n        throw new Error(`Body element not found`);\n    }\n\n    return body;\n}\n\nexport function isDocumentReady() : boolean {\n    // eslint-disable-next-line compat/compat\n    return Boolean(document.body) && (document.readyState === 'complete');\n}\n\nexport function isDocumentInteractive() : boolean {\n    // eslint-disable-next-line compat/compat\n    return Boolean(document.body) && (document.readyState === 'interactive');\n}\n\nexport function urlEncode(str : string) : string {\n    return encodeURIComponent(str);\n}\n\nexport function waitForWindowReady() : ZalgoPromise<void> {\n    return inlineMemoize(waitForWindowReady, () : ZalgoPromise<void> => {\n        return new ZalgoPromise(resolve => {\n            if (isDocumentReady()) {\n                resolve();\n            }\n\n            window.addEventListener('load', () => resolve());\n        });\n    });\n}\n\ntype WaitForDocumentReady = () => ZalgoPromise<void>;\n\nexport const waitForDocumentReady : WaitForDocumentReady = memoize(() => {\n    return new ZalgoPromise(resolve => {\n\n        if (isDocumentReady() || isDocumentInteractive()) {\n            return resolve();\n        }\n\n        const interval = setInterval(() => {\n            if (isDocumentReady() || isDocumentInteractive()) {\n                clearInterval(interval);\n                return resolve();\n            }\n        }, 10);\n    });\n});\n\nexport function waitForDocumentBody() : ZalgoPromise<HTMLBodyElement> {\n    return ZalgoPromise.try(() => {\n        if (document.body) {\n            return document.body;\n        }\n\n        return waitForDocumentReady().then(() => {\n            if (document.body) {\n                return document.body;\n            }\n\n            throw new Error('Document ready but document.body not present');\n        });\n    });\n}\n\nexport function parseQuery(queryString : string) : Object {\n    return inlineMemoize(parseQuery, () : Object => {\n        const params = {};\n\n        if (!queryString) {\n            return params;\n        }\n\n        if (queryString.indexOf('=') === -1) {\n            return params;\n        }\n\n        for (let pair of queryString.split('&')) {\n            pair = pair.split('=');\n\n            if (pair[0] && pair[1]) {\n                params[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n            }\n        }\n\n        return params;\n    }, [ queryString ]);\n}\n\n\nexport function getQueryParam(name : string) : string {\n    return parseQuery(window.location.search.slice(1))[name];\n}\n\nexport function urlWillRedirectPage(url : string) : boolean {\n\n    if (url.indexOf('#') === -1) {\n        return true;\n    }\n\n    if (url.indexOf('#') === 0) {\n        return false;\n    }\n\n    if (url.split('#')[0] === window.location.href.split('#')[0]) {\n        return false;\n    }\n\n    return true;\n}\n\nexport type Query = {\n    [ string ] : boolean | string\n};\n\nexport function formatQuery(obj : Query = {}) : string {\n\n    return Object.keys(obj).filter(key => {\n        return typeof obj[key] === 'string' || typeof obj[key] === 'boolean';\n    }).map(key => {\n        const val = obj[key];\n\n        if (typeof val !== 'string' && typeof val !== 'boolean') {\n            throw new TypeError(`Invalid type for query`);\n        }\n\n        return `${ urlEncode(key) }=${ urlEncode(val.toString()) }`;\n    }).join('&');\n}\n\nexport function extendQuery(originalQuery : string, props : Query = {}) : string {\n\n    if (!props || !Object.keys(props).length) {\n        return originalQuery;\n    }\n\n    return formatQuery({\n        ...parseQuery(originalQuery),\n        ...props\n    });\n}\n\nexport function extendUrl(url : string, options : {| query? : Query, hash? : Query |}) : string {\n\n    const query = options.query || {};\n    const hash = options.hash || {};\n\n    let originalUrl;\n    let originalQuery;\n    let originalHash;\n\n    [ originalUrl, originalHash ] = url.split('#');\n    [ originalUrl, originalQuery ] = originalUrl.split('?');\n\n    const queryString = extendQuery(originalQuery, query);\n    const hashString = extendQuery(originalHash, hash);\n\n    if (queryString) {\n        originalUrl = `${ originalUrl }?${ queryString }`;\n    }\n\n    if (hashString) {\n        originalUrl = `${ originalUrl }#${ hashString }`;\n    }\n\n    return originalUrl;\n}\n\nexport function redirect(url : string, win : CrossDomainWindowType = window) : ZalgoPromise<void> {\n    return new ZalgoPromise(resolve => {\n        win.location = url;\n        if (!urlWillRedirectPage(url)) {\n            resolve();\n        }\n    });\n}\n\nexport function hasMetaViewPort() : boolean {\n    const meta = document.querySelector('meta[name=viewport]');\n\n    if (isDevice() && window.screen.width < 660 && !meta) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function isElementVisible(el : HTMLElement) : boolean {\n    return Boolean(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n}\n\nexport function getPerformance() : ?Performance {\n    return inlineMemoize(getPerformance, () : ?Performance => {\n        const performance = window.performance;\n\n        if (\n            performance &&\n            performance.now &&\n            performance.timing &&\n            performance.timing.connectEnd &&\n            performance.timing.navigationStart &&\n            (Math.abs(performance.now() - Date.now()) > 1000) &&\n            (performance.now() - (performance.timing.connectEnd - performance.timing.navigationStart)) > 0\n        ) {\n            return performance;\n        }\n    });\n}\n\nexport function enablePerformance() : boolean {\n    return Boolean(getPerformance());\n}\n\nexport function getPageRenderTime() : ZalgoPromise<?number> {\n    return waitForDocumentReady().then(() => {\n        const performance = getPerformance();\n\n        if (!performance) {\n            return;\n        }\n\n        const timing = performance.timing;\n\n        if (timing.connectEnd && timing.domInteractive) {\n            return timing.domInteractive - timing.connectEnd;\n        }\n    });\n}\n\nexport function htmlEncode(html : string = '') : string {\n    return html.toString()\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#39;')\n        .replace(/\\//g, '&#x2F;');\n}\n\nexport function isBrowser() : boolean {\n    return (typeof window !== 'undefined') && window.location !== undefined;\n}\n\nexport function querySelectorAll(selector : string, doc : HTMLElement = window.document) : $ReadOnlyArray<HTMLElement> {\n    // $FlowFixMe[method-unbinding]\n    return Array.prototype.slice.call(doc.querySelectorAll(selector));\n}\n\nexport function onClick(element : HTMLElement, handler : (Event) => void) {\n    element.addEventListener('touchstart', noop);\n    element.addEventListener('click', handler);\n    element.addEventListener('keypress', (event : Event) => {\n        // $FlowFixMe\n        if (event.keyCode === KEY_CODES.ENTER || event.keyCode === KEY_CODES.SPACE) {\n            return handler(event);\n        }\n    });\n}\n\nexport function getScript({ host = window.location.host, path, reverse = false } : {| host? : string, path : string, reverse? : boolean |}) : ?HTMLScriptElement {\n    return inlineMemoize(getScript, () : ?HTMLScriptElement => {\n\n        const url = `${ host }${ path }`;\n        // $FlowFixMe[method-unbinding]\n        const scripts = Array.prototype.slice.call(document.getElementsByTagName('script'));\n\n        if (reverse) {\n            scripts.reverse();\n        }\n\n        for (const script of scripts) {\n            if (!script.src) {\n                continue;\n            }\n\n            const src = script.src.replace(/^https?:\\/\\//, '').split('?')[0];\n\n            if (src === url) {\n                return script;\n            }\n        }\n    }, [ path ]);\n}\n\nexport function isLocalStorageEnabled() : boolean {\n    return inlineMemoize(isLocalStorageEnabled, () => {\n        try {\n            if (typeof window === 'undefined') {\n                return false;\n            }\n\n            if (window.localStorage) {\n                const value = Math.random().toString();\n                window.localStorage.setItem('__test__localStorage__', value);\n                const result = window.localStorage.getItem('__test__localStorage__');\n                window.localStorage.removeItem('__test__localStorage__');\n                if (value === result) {\n                    return true;\n                }\n            }\n        } catch (err) {\n            // pass\n        }\n        return false;\n    });\n}\n\nexport function getBrowserLocales() : $ReadOnlyArray<{| country? : string, lang : string |}> {\n    const nav = window.navigator;\n\n    const locales = nav.languages\n        ? [ ...nav.languages ]\n        : [];\n\n    if (nav.language) {\n        locales.push(nav.language);\n    }\n\n    if (nav.userLanguage) {\n        locales.push(nav.userLanguage);\n    }\n\n    return locales.map(locale => {\n\n        if (locale && locale.match(/^[a-z]{2}[-_][A-Z]{2}$/)) {\n            const [ lang, country ] = locale.split(/[-_]/);\n            return { country, lang };\n        }\n\n        if (locale && locale.match(/^[a-z]{2}$/)) {\n            return { lang: locale };\n        }\n\n        return null;\n\n    }).filter(Boolean);\n}\n\n\nexport function appendChild(container : HTMLElement, child : HTMLElement | Text) {\n    container.appendChild(child);\n}\n\nexport function isElement(element : mixed) : boolean {\n\n    if (element instanceof window.Element) {\n        return true;\n    }\n\n    if (element !== null && typeof element === 'object' && element.nodeType === 1 && typeof element.style === 'object' && typeof element.ownerDocument === 'object') {\n        return true;\n    }\n\n    return false;\n}\n\nexport function getElementSafe(id : ElementRefType, doc : Document | HTMLElement = document) : ?HTMLElement {\n\n    if (isElement(id)) {\n        // $FlowFixMe\n        return id;\n    }\n\n    if (typeof id === 'string') {\n        return doc.querySelector(id);\n    }\n}\n\nexport function getElement(id : ElementRefType, doc : Document | HTMLElement = document) : HTMLElement {\n\n    const element = getElementSafe(id, doc);\n\n    if (element) {\n        return element;\n    }\n\n    throw new Error(`Can not find element: ${ stringify(id) }`);\n}\n\nexport function elementReady(id : ElementRefType) : ZalgoPromise<HTMLElement> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        const name = stringify(id);\n        let el = getElementSafe(id);\n\n        if (el) {\n            return resolve(el);\n        }\n\n        if (isDocumentReady()) {\n            return reject(new Error(`Document is ready and element ${ name } does not exist`));\n        }\n\n        const interval = setInterval(() => {\n\n            el = getElementSafe(id);\n\n            if (el) {\n                resolve(el);\n                clearInterval(interval);\n                return;\n            }\n\n            if (isDocumentReady()) {\n                clearInterval(interval);\n                return reject(new Error(`Document is ready and element ${ name } does not exist`));\n            }\n        }, 10);\n    });\n}\n\n// eslint-disable-next-line unicorn/custom-error-definition\nexport class PopupOpenError extends ExtendableError {}\n\ntype PopupOptions = {|\n    name? : string,\n    width? : number,\n    height? : number,\n    top? : number,\n    left? : number,\n    status? : 0 | 1,\n    resizable? : 0 | 1,\n    toolbar? : 0 | 1,\n    menubar? : 0 | 1,\n    scrollbars? : 0 | 1,\n    closeOnUnload? : 0 | 1\n|};\n\nexport function popup(url : string, options? : PopupOptions) : CrossDomainWindowType {\n\n    // $FlowFixMe\n    options = options || {};\n\n    const { closeOnUnload = 1, name = '', width, height } = options;\n\n    let top = 0;\n    let left = 0;\n\n    if (width) {\n        if (window.outerWidth) {\n            left = Math.round((window.outerWidth - width) / 2) + window.screenX;\n        } else if (window.screen.width) {\n            left = Math.round((window.screen.width - width) / 2);\n        }\n    }\n\n    if (height) {\n        if (window.outerHeight) {\n            top = Math.round((window.outerHeight - height) / 2) + window.screenY;\n        } else if (window.screen.height) {\n            top = Math.round((window.screen.height - height) / 2);\n        }\n    }\n\n    delete options.closeOnUnload;\n    delete options.name;\n\n    if (width && height) {\n        // $FlowFixMe\n        options = {\n            top,\n            left,\n            width,\n            height,\n            status:     1,\n            toolbar:    0,\n            menubar:    0,\n            resizable:  1,\n            scrollbars: 1,\n            ...options\n        };\n    }\n\n    // eslint-disable-next-line array-callback-return\n    const params = Object.keys(options).map(key => {\n        // $FlowFixMe\n        if (options[key] !== null && options[key] !== undefined) {\n            return `${ key }=${ stringify(options[key]) }`;\n        }\n    }).filter(Boolean).join(',');\n\n    let win;\n\n    try {\n        win = window.open(url, name, params);\n    } catch (err) {\n        throw new PopupOpenError(`Can not open popup window - ${ err.stack || err.message }`);\n    }\n\n    if (isWindowClosed(win)) {\n        const err = new PopupOpenError(`Can not open popup window - blocked`);\n        throw err;\n    }\n\n    if (closeOnUnload) {\n        window.addEventListener('unload', () => win.close());\n    }\n\n    return win;\n}\n\n\nexport function writeToWindow(win : SameDomainWindowType, html : string) {\n    try {\n        win.document.open();\n        win.document.write(html);\n        win.document.close();\n    } catch (err) {\n        try {\n            win.location = `javascript: document.open(); document.write(${ JSON.stringify(html) }); document.close();`;\n        } catch (err2) {\n            // pass\n        }\n    }\n}\n\nexport function writeElementToWindow(win : SameDomainWindowType, el : HTMLElement) {\n\n    const tag = el.tagName.toLowerCase();\n\n    if (tag !== 'html') {\n        throw new Error(`Expected element to be html, got ${ tag }`);\n    }\n\n    const documentElement = win.document.documentElement;\n\n    for (const child of arrayFrom(documentElement.children)) {\n        documentElement.removeChild(child);\n    }\n\n    for (const child of arrayFrom(el.children)) {\n        documentElement.appendChild(child);\n    }\n}\n\nexport function setStyle(el : HTMLElement, styleText : string, doc : Document = window.document) {\n    // $FlowFixMe\n    if (el.styleSheet) {\n        // $FlowFixMe\n        el.styleSheet.cssText = styleText;\n    } else {\n        el.appendChild(doc.createTextNode(styleText));\n    }\n}\n\nexport type ElementOptionsType = {|\n    style? : { [ string ] : string },\n    id? : string,\n    class? : ?$ReadOnlyArray<string>,\n    attributes? : { [ string ] : string },\n    styleSheet? : ?string,\n    html? : ?string\n|};\n\nlet awaitFrameLoadPromises : WeakMap<HTMLIFrameElement, ZalgoPromise<HTMLIFrameElement>>;\n\nexport function awaitFrameLoad(frame : HTMLIFrameElement) : ZalgoPromise<HTMLIFrameElement> {\n    awaitFrameLoadPromises = awaitFrameLoadPromises || new WeakMap();\n\n    if (awaitFrameLoadPromises.has(frame)) {\n        const promise = awaitFrameLoadPromises.get(frame);\n        if (promise) {\n            return promise;\n        }\n    }\n\n    const promise = new ZalgoPromise((resolve, reject) => {\n        frame.addEventListener('load', () => {\n            linkFrameWindow(frame);\n            resolve(frame);\n        });\n\n        frame.addEventListener('error', (err : Event) => {\n            if (frame.contentWindow) {\n                resolve(frame);\n            } else {\n                reject(err);\n            }\n        });\n    });\n\n    awaitFrameLoadPromises.set(frame, promise);\n\n    return promise;\n}\n\nexport function awaitFrameWindow(frame : HTMLIFrameElement) : ZalgoPromise<CrossDomainWindowType> {\n    return awaitFrameLoad(frame).then(loadedFrame => {\n\n        if (!loadedFrame.contentWindow) {\n            throw new Error(`Could not find window in iframe`);\n        }\n\n        return loadedFrame.contentWindow;\n    });\n}\n\nconst getDefaultCreateElementOptions = () : ElementOptionsType => {\n    // $FlowFixMe\n    return {};\n};\n\nexport function createElement(tag : string = 'div', options : ElementOptionsType = getDefaultCreateElementOptions(), container : ?HTMLElement) : HTMLElement {\n\n    tag = tag.toLowerCase();\n    const element = document.createElement(tag);\n\n    if (options.style) {\n        extend(element.style, options.style);\n    }\n\n    if (options.class) {\n        element.className = options.class.join(' ');\n    }\n\n    if (options.id) {\n        element.setAttribute('id', options.id);\n    }\n\n    if (options.attributes) {\n        for (const key of Object.keys(options.attributes)) {\n            element.setAttribute(key, options.attributes[key]);\n        }\n    }\n\n    if (options.styleSheet) {\n        setStyle(element, options.styleSheet);\n    }\n\n    if (container) {\n        appendChild(container, element);\n    }\n\n    if (options.html) {\n        if (tag === 'iframe') {\n            // $FlowFixMe\n            if (!container || !element.contentWindow) {\n                throw new Error(`Iframe html can not be written unless container provided and iframe in DOM`);\n            }\n\n            // $FlowFixMe\n            writeToWindow(element.contentWindow, options.html);\n\n        } else {\n            element.innerHTML = options.html;\n        }\n    }\n\n    return element;\n}\n\ntype StringMap = {|\n    [ string ] : string\n|};\n\nexport type IframeElementOptionsType = {|\n    style? : StringMap,\n    class? : ?$ReadOnlyArray<string>,\n    attributes? : StringMap,\n    styleSheet? : ?string,\n    html? : ?string,\n    url? : ?string\n|};\n\nconst getDefaultIframeOptions = () : IframeElementOptionsType => {\n    // $FlowFixMe\n    return {};\n};\n\nconst getDefaultStringMap = () : StringMap => {\n    // $FlowFixMe\n    return {};\n};\n\nexport function iframe(options : IframeElementOptionsType = getDefaultIframeOptions(), container : ?HTMLElement) : HTMLIFrameElement {\n\n    const attributes = options.attributes || getDefaultStringMap();\n    const style = options.style || getDefaultStringMap();\n\n    // $FlowFixMe\n    const newAttributes = {\n        allowTransparency: 'true',\n        ...attributes\n    };\n\n    // $FlowFixMe\n    const newStyle = {\n        backgroundColor: 'transparent',\n        border:          'none',\n        ...style\n    };\n\n    const frame = createElement('iframe', {\n        attributes: newAttributes,\n        style:      newStyle,\n        html:       options.html,\n        class:      options.class\n    });\n\n    const isIE = window.navigator.userAgent.match(/MSIE|Edge/i);\n\n    if (!frame.hasAttribute('id')) {\n        frame.setAttribute('id', uniqueID());\n    }\n\n    // $FlowFixMe\n    awaitFrameLoad(frame);\n\n    if (container) {\n        const el = getElement(container);\n        el.appendChild(frame);\n    }\n\n    if (options.url || isIE) {\n        frame.setAttribute('src', options.url || 'about:blank');\n    }\n\n    // $FlowFixMe\n    return frame;\n}\n\nexport function addEventListener(obj : HTMLElement, event : string, handler : (event : Event) => void) : CancelableType {\n    obj.addEventListener(event, handler);\n    return {\n        cancel() {\n            obj.removeEventListener(event, handler);\n        }\n    };\n}\n\nexport function bindEvents(element : HTMLElement, eventNames : $ReadOnlyArray<string>, handler : (event : Event) => void) : CancelableType {\n\n    handler = once(handler);\n\n    for (const eventName of eventNames) {\n        element.addEventListener(eventName, handler);\n    }\n\n    return {\n        cancel: once(() => {\n            for (const eventName of eventNames) {\n                element.removeEventListener(eventName, handler);\n            }\n        })\n    };\n}\n\nconst VENDOR_PREFIXES = [ 'webkit', 'moz', 'ms', 'o' ];\n\nexport function setVendorCSS(element : HTMLElement, name : string, value : string) {\n\n    // $FlowFixMe\n    element.style[name] = value;\n\n    const capitalizedName = capitalizeFirstLetter(name);\n\n    for (const prefix of VENDOR_PREFIXES) {\n        // $FlowFixMe\n        element.style[`${ prefix }${ capitalizedName }`] = value;\n    }\n}\n\nconst ANIMATION_START_EVENTS = [ 'animationstart', 'webkitAnimationStart', 'oAnimationStart', 'MSAnimationStart' ];\nconst ANIMATION_END_EVENTS   = [ 'animationend', 'webkitAnimationEnd', 'oAnimationEnd', 'MSAnimationEnd' ];\n\nexport function animate(element : ElementRefType, name : string, clean : (Function) => void, timeout : number = 1000) : ZalgoPromise<void> {\n    return new ZalgoPromise((resolve, reject) => {\n\n        const el = getElement(element);\n\n        if (!el) {\n            return resolve();\n        }\n\n        let hasStarted = false;\n\n        // eslint-disable-next-line prefer-const\n        let startTimeout;\n        let endTimeout;\n        // eslint-disable-next-line prefer-const\n        let startEvent;\n        // eslint-disable-next-line prefer-const\n        let endEvent;\n\n        function cleanUp() {\n            clearTimeout(startTimeout);\n            clearTimeout(endTimeout);\n            startEvent.cancel();\n            endEvent.cancel();\n        }\n\n        startEvent = bindEvents(el, ANIMATION_START_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            clearTimeout(startTimeout);\n\n            event.stopPropagation();\n\n            startEvent.cancel();\n            hasStarted = true;\n\n            endTimeout = setTimeout(() => {\n                cleanUp();\n                resolve();\n            }, timeout);\n        });\n\n        endEvent = bindEvents(el, ANIMATION_END_EVENTS, event => {\n\n            // $FlowFixMe\n            if (event.target !== el || event.animationName !== name) {\n                return;\n            }\n\n            cleanUp();\n\n            // $FlowFixMe\n            if (typeof event.animationName === 'string' && event.animationName !== name) {\n                return reject(`Expected animation name to be ${ name }, found ${ event.animationName }`);\n            }\n\n            return resolve();\n        });\n\n        setVendorCSS(el, 'animationName', name);\n\n        startTimeout = setTimeout(() => {\n            if (!hasStarted) {\n                cleanUp();\n                return resolve();\n            }\n        }, 200);\n\n        if (clean) {\n            clean(cleanUp);\n        }\n    });\n}\n\nexport function makeElementVisible(element : HTMLElement) {\n    element.style.setProperty('visibility', '');\n}\n\nexport function makeElementInvisible(element : HTMLElement) {\n    element.style.setProperty('visibility', 'hidden', 'important');\n}\n\n\nexport function showElement(element : HTMLElement) {\n    element.style.setProperty('display', '');\n}\n\nexport function hideElement(element : HTMLElement) {\n    element.style.setProperty('display', 'none', 'important');\n}\n\nexport function destroyElement(element : HTMLElement) {\n    if (element && element.parentNode) {\n        element.parentNode.removeChild(element);\n    }\n}\n\nexport function showAndAnimate(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    const animation = animate(element, name, clean);\n    showElement(element);\n    return animation;\n}\n\nexport function animateAndHide(element : HTMLElement, name : string, clean : (Function) => void) : ZalgoPromise<void> {\n    return animate(element, name, clean).then(() => {\n        hideElement(element);\n    });\n}\n\nexport function addClass(element : HTMLElement, name : string) {\n    element.classList.add(name);\n}\n\nexport function removeClass(element : HTMLElement, name : string) {\n    element.classList.remove(name);\n}\n\nexport function isElementClosed(el : HTMLElement) : boolean {\n    if (!el || !el.parentNode || !el.ownerDocument || !el.ownerDocument.documentElement || !el.ownerDocument.documentElement.contains(el)) {\n        return true;\n    }\n    return false;\n}\n\nexport function watchElementForClose(element : HTMLElement, handler : () => mixed) : CancelableType {\n    handler = once(handler);\n\n    let cancelled = false;\n    const mutationObservers = [];\n    // eslint-disable-next-line prefer-const\n    let interval;\n    // eslint-disable-next-line prefer-const\n    let sacrificialFrame;\n    let sacrificialFrameWin;\n\n    const cancel = () => {\n        cancelled = true;\n        for (const observer of mutationObservers) {\n            observer.disconnect();\n        }\n        if (interval) {\n            interval.cancel();\n        }\n        if (sacrificialFrameWin) {\n            // eslint-disable-next-line no-use-before-define\n            sacrificialFrameWin.removeEventListener('unload', elementClosed);\n        }\n        if (sacrificialFrame) {\n            destroyElement(sacrificialFrame);\n        }\n    };\n\n    const elementClosed = () => {\n        if (!cancelled) {\n            handler();\n            cancel();\n        }\n    };\n\n    if (isElementClosed(element)) {\n        elementClosed();\n        return { cancel };\n    }\n\n    // Strategy 1: Mutation observer\n\n    if (window.MutationObserver) {\n        let mutationElement = element.parentElement;\n        while (mutationElement) {\n            const mutationObserver = new window.MutationObserver(() => {\n                if (isElementClosed(element)) {\n                    elementClosed();\n                }\n            });\n\n            mutationObserver.observe(mutationElement, { childList: true });\n            mutationObservers.push(mutationObserver);\n            mutationElement = mutationElement.parentElement;\n        }\n    }\n\n    // Strategy 2: Sacrificial iframe\n\n    sacrificialFrame = document.createElement('iframe');\n    sacrificialFrame.setAttribute('name', `__detect_close_${ uniqueID() }__`);\n    sacrificialFrame.style.display = 'none';\n    awaitFrameWindow(sacrificialFrame).then(frameWin => {\n        sacrificialFrameWin = assertSameDomain(frameWin);\n        sacrificialFrameWin.addEventListener('unload', elementClosed);\n    });\n    element.appendChild(sacrificialFrame);\n\n    // Strategy 3: Poller\n\n    const check = () => {\n        if (isElementClosed(element)) {\n            elementClosed();\n        }\n    };\n    interval = safeInterval(check, 1000);\n\n    return { cancel };\n}\n\nexport function fixScripts(el : HTMLElement, doc : Document = window.document) {\n    for (const script of querySelectorAll('script', el)) {\n        const parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        const newScript = doc.createElement('script');\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\ntype OnResizeOptions = {|\n    width? : boolean,\n    height? : boolean,\n    interval? : number,\n    win? : SameDomainWindowType\n|};\n\nexport function onResize(el : HTMLElement, handler : ({| width : number, height : number |}) => void, { width = true, height = true, interval = 100, win = window } : OnResizeOptions = {}) : {| cancel : () => void |} {\n    let currentWidth = el.offsetWidth;\n    let currentHeight = el.offsetHeight;\n    let canceled = false;\n\n    handler({ width: currentWidth, height: currentHeight });\n\n    const check = () => {\n        if (canceled || !isElementVisible(el)) {\n            return;\n        }\n\n        const newWidth = el.offsetWidth;\n        const newHeight = el.offsetHeight;\n\n        if ((width && newWidth !== currentWidth) || (height && newHeight !== currentHeight)) {\n            handler({ width: newWidth, height: newHeight });\n        }\n\n        currentWidth = newWidth;\n        currentHeight = newHeight;\n    };\n\n    let observer;\n    let timeout;\n\n    win.addEventListener('resize', check);\n\n    if (typeof win.ResizeObserver !== 'undefined') {\n        observer = new win.ResizeObserver(check);\n        observer.observe(el);\n        timeout = safeInterval(check, interval * 10);\n\n    } else if (typeof win.MutationObserver !== 'undefined') {\n        observer = new win.MutationObserver(check);\n        observer.observe(el, {\n            attributes:    true,\n            childList:     true,\n            subtree:       true,\n            characterData: false\n        });\n        timeout = safeInterval(check, interval * 10);\n    } else {\n        timeout = safeInterval(check, interval);\n    }\n\n    return {\n        cancel: () => {\n            canceled = true;\n            observer.disconnect();\n            window.removeEventListener('resize', check);\n            timeout.cancel();\n        }\n    };\n}\n\nexport function getResourceLoadTime(url : string) : ?number {\n    const performance = getPerformance();\n\n    if (!performance) {\n        return;\n    }\n\n    // $FlowFixMe[method-unbinding]\n    if (typeof performance.getEntries !== 'function') {\n        return;\n    }\n\n    const entries = performance.getEntries();\n\n    for (let i = 0; i < entries.length; i++) {\n        const entry = entries[i];\n\n        if (entry && entry.name && entry.name.indexOf(url) === 0 && typeof entry.duration === 'number') {\n            return Math.floor(entry.duration);\n        }\n    }\n}\n\nexport function isShadowElement(element : Node) : boolean {\n    while (element.parentNode) {\n        element = element.parentNode;\n    }\n\n    return element.toString() === '[object ShadowRoot]';\n}\n\nexport function getShadowRoot(element : Node) : ?Node {\n    while (element.parentNode) {\n        element = element.parentNode;\n    }\n\n    if (isShadowElement(element)) {\n        return element;\n    }\n}\n\nexport function getShadowHost(element : Node) : ?HTMLElement {\n    const shadowRoot = getShadowRoot(element);\n\n    // $FlowFixMe\n    if (shadowRoot && shadowRoot.host) {\n        // $FlowFixMe\n        return shadowRoot.host;\n    }\n}\n\n\nexport function insertShadowSlot(element : HTMLElement) : HTMLElement {\n    const shadowHost = getShadowHost(element);\n\n    if (!shadowHost) {\n        throw new Error(`Element is not in shadow dom`);\n    }\n\n    const slotName = `shadow-slot-${ uniqueID() }`;\n    const slot = document.createElement('slot');\n    slot.setAttribute('name', slotName);\n    element.appendChild(slot);\n\n    const slotProvider = document.createElement('div');\n    slotProvider.setAttribute('slot', slotName);\n    shadowHost.appendChild(slotProvider);\n\n    if (isShadowElement(shadowHost)) {\n        return insertShadowSlot(slotProvider);\n    }\n\n    return slotProvider;\n}\n\nexport function preventClickFocus(el : HTMLElement) {\n    const onFocus = (event : Event) => {\n        el.removeEventListener('focus', onFocus);\n        event.preventDefault();\n        el.blur();\n        return false;\n    };\n\n    el.addEventListener('mousedown', () => {\n        el.addEventListener('focus', onFocus);\n        setTimeout(() => {\n            el.removeEventListener('focus', onFocus);\n        }, 1);\n    });\n}\n\nexport function getStackTrace() : string {\n    try {\n        throw new Error('_');\n    }\n    catch (err) {\n        return err.stack || '';\n    }\n}\n\nfunction inferCurrentScript() : ?HTMLScriptElement {\n    try {\n        const stack = getStackTrace();\n        const stackDetails = (/.*at [^(]*\\((.*):(.+):(.+)\\)$/ig).exec(stack);\n        const scriptLocation = stackDetails && stackDetails[1];\n\n        if (!scriptLocation) {\n            return;\n        }\n\n        // $FlowFixMe[method-unbinding]\n        for (const script of Array.prototype.slice.call(document.getElementsByTagName('script')).reverse()) {\n            if (script.src && script.src === scriptLocation) {\n                return script;\n            }\n        }\n\n    } catch (err) {\n        // pass\n    }\n}\n\n// eslint-disable-next-line compat/compat\nlet currentScript = typeof document !== 'undefined' ? document.currentScript : null;\n\ntype GetCurrentScript = () => HTMLScriptElement;\n\nexport const getCurrentScript : GetCurrentScript = memoize(() => {\n    if (currentScript) {\n        return currentScript;\n    }\n\n    currentScript = inferCurrentScript();\n\n    if (currentScript) {\n        return currentScript;\n    }\n\n    throw new Error('Can not determine current script');\n});\n\nconst currentUID = uniqueID();\n\ntype GetCurrentScriptUID = () => string;\n\nexport const getCurrentScriptUID : GetCurrentScriptUID = memoize(() => {\n    let script;\n\n    try {\n        script = getCurrentScript();\n    } catch (err) {\n        return currentUID;\n    }\n\n    let uid = script.getAttribute(ATTRIBUTES.UID);\n\n    if (uid && typeof uid === 'string') {\n        return uid;\n    }\n\n    uid = script.getAttribute(`${ ATTRIBUTES.UID }-auto`);\n\n    if (uid && typeof uid === 'string') {\n        return uid;\n    }\n\n    if (script.src) {\n\n        const { src, dataset } = script;\n        const stringToHash = JSON.stringify({ src, dataset });\n        const hashedString = strHashStr(stringToHash);\n        const hashResult = hashedString.slice(hashedString.length - UID_HASH_LENGTH);\n\n        uid = `uid_${ hashResult }`;\n    } else {\n        uid = uniqueID();\n    }\n\n    script.setAttribute(`${ ATTRIBUTES.UID }-auto`, uid);\n\n    return uid;\n});\n\ntype SubmitFormOptions = {|\n    url : string,\n    target : string,\n    body? : {| [string] : string | boolean |},\n    method? : string\n|};\n\nexport function submitForm({ url, target, body, method = 'post' } : SubmitFormOptions) {\n    const form = document.createElement('form');\n    form.setAttribute('target', target);\n    form.setAttribute('method', method);\n    form.setAttribute('action', url);\n    form.style.display = 'none';\n\n    if (body) {\n        for (const key of Object.keys(body)) {\n            const input = document.createElement('input');\n            input.setAttribute('name', key);\n            input.setAttribute('value', body[key]?.toString());\n            form.appendChild(input);\n        }\n    }\n\n    getBody().appendChild(form);\n    form.submit();\n    getBody().removeChild(form);\n}\n","/* @flow */\n\nexport function isPerc(str : string) : boolean {\n    return typeof str === 'string' && (/^[0-9]+%$/).test(str);\n}\n\nexport function isPx(str : string) : boolean {\n    return typeof str === 'string' && (/^[0-9]+px$/).test(str);\n}\n\nexport function toNum(val : string | number) : number {\n\n    if (typeof val === 'number') {\n        return val;\n    }\n\n    const match = val.match(/^([0-9]+)(px|%)$/);\n\n    if (!match) {\n        throw new Error(`Could not match css value from ${ val }`);\n    }\n\n    return parseInt(match[1], 10);\n}\n\nexport function toPx(val : number | string) : string {\n    return `${ toNum(val) }px`;\n}\n\nexport function toCSS(val : number | string) : string {\n\n    if (typeof val === 'number') {\n        return toPx(val);\n    }\n\n    return isPerc(val) ? val : toPx(val);\n}\n\nexport function percOf(num : number, perc : string) : number {\n    return parseInt(num * toNum(perc)  / 100, 10);\n}\n\nexport function normalizeDimension(dim : string | number, max : number) : number {\n    if (typeof dim === 'number') {\n        return dim;\n    } else if (isPerc(dim)) {\n        return percOf(max, dim);\n    } else if (isPx(dim)) {\n        return toNum(dim);\n    } else {\n        throw new Error(`Can not normalize dimension: ${ dim }`);\n    }\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, type SameDomainWindowType } from 'cross-domain-utils/src';\nimport { WeakMap } from 'cross-domain-safe-weakmap/src';\nimport { getOrSet, getCurrentScriptUID } from 'belter/src';\n\nexport function getGlobalKey() : string {\n    if (__POST_ROBOT__.__SCRIPT_NAMESPACE__) {\n        return `${ __POST_ROBOT__.__GLOBAL_KEY__ }_${ getCurrentScriptUID() }`;\n    } else {\n        return __POST_ROBOT__.__GLOBAL_KEY__;\n    }\n}\n\nexport function getGlobal(win : SameDomainWindowType = window) : Object {\n    const globalKey = getGlobalKey();\n\n    if (win !== window) {\n        return win[globalKey];\n    }\n    const global : Object = win[globalKey] = win[globalKey] || {};\n    return global;\n}\n\nexport function deleteGlobal() {\n    const globalKey = getGlobalKey();\n    delete window[globalKey];\n}\n\ntype ObjectGetter = () => Object;\nconst getObj : ObjectGetter = () => ({});\n\ntype GetOrSet<T> = ((string, () => T) => T) & ((string, () => void) => void);\n\ntype GlobalStore<T> = {|\n    get : ((string, T) => T) & ((string, void) => T | void),\n    set : (string, T) => T,\n    has : (string) => boolean,\n    del : (string) => void,\n    getOrSet : GetOrSet<T>,\n    reset : () => void,\n    keys : () => $ReadOnlyArray<string>\n|};\n\nexport function globalStore<T : mixed>(key? : string = 'store', defStore? : ObjectGetter = getObj) : GlobalStore<T> {\n    return getOrSet(getGlobal(), key, () => {\n        let store = defStore();\n\n        return {\n            has: (storeKey) => {\n                return store.hasOwnProperty(storeKey);\n            },\n            get: (storeKey, defVal) => {\n                // $FlowFixMe\n                return store.hasOwnProperty(storeKey) ? store[storeKey] : defVal;\n            },\n            set: (storeKey, val) => {\n                store[storeKey] = val;\n                return val;\n            },\n            del: (storeKey) => {\n                delete store[storeKey];\n            },\n            getOrSet: (storeKey, getter) => {\n                // $FlowFixMe\n                return getOrSet(store, storeKey, getter);\n            },\n            reset: () => {\n                store = defStore();\n            },\n            keys: () => {\n                return Object.keys(store);\n            }\n        };\n    });\n}\n\nexport class WildCard {}\n\nexport function getWildcard() : WildCard {\n    const global = getGlobal();\n    global.WINDOW_WILDCARD = global.WINDOW_WILDCARD || new WildCard();\n    return global.WINDOW_WILDCARD;\n}\n\ntype WindowStore<T> = {|\n    get : ((CrossDomainWindowType | WildCard, T) => T) & ((CrossDomainWindowType | WildCard, void) => T | void),\n    set : (CrossDomainWindowType | WildCard, T) => T,\n    has : (CrossDomainWindowType | WildCard) => boolean,\n    del : (CrossDomainWindowType | WildCard) => void,\n    getOrSet : (CrossDomainWindowType | WildCard, () => T) => T\n|};\n\nexport function windowStore<T>(key? : string = 'store', defStore? : ObjectGetter = getObj) : WindowStore<T> {\n    return globalStore('windowStore').getOrSet(key, () => {\n        const winStore = new WeakMap();\n\n        const getStore = (win : CrossDomainWindowType | WildCard) : ObjectGetter => {\n            return winStore.getOrSet(win, defStore);\n        };\n    \n        return {\n            has: (win) => {\n                const store = getStore(win);\n                return store.hasOwnProperty(key);\n            },\n            get: (win, defVal) => {\n                const store = getStore(win);\n                // $FlowFixMe\n                return store.hasOwnProperty(key) ? store[key] : defVal;\n            },\n            set: (win, val) => {\n                const store = getStore(win);\n                store[key] = val;\n                return val;\n            },\n            del: (win) => {\n                const store = getStore(win);\n                delete store[key];\n            },\n            getOrSet: (win, getter) => {\n                const store = getStore(win);\n                return getOrSet(store, key, getter);\n            }\n        };\n    });\n}\n","/* @flow */\n\nexport const KEY_CODES = {\n    ENTER: 13,\n    SPACE: 32\n};\n\nexport const ATTRIBUTES = {\n    UID: 'data-uid'\n};\n\nexport const UID_HASH_LENGTH = 30;\n","/* @flow */\n\nimport { getAncestor, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID } from 'belter/src';\n\nimport { MESSAGE_NAME, WILDCARD } from '../conf';\nimport { windowStore, globalStore, getGlobal } from '../global';\nimport type { OnType, SendType, CancelableType } from '../types';\n\nfunction getInstanceID() : string {\n    return globalStore('instance').getOrSet('instanceID', uniqueID);\n}\n\nfunction getHelloPromise(win : CrossDomainWindowType) : ZalgoPromise<{| domain : string |}> {\n    const helloPromises = windowStore('helloPromises');\n    return helloPromises.getOrSet(win, () => new ZalgoPromise());\n}\n\nfunction resolveHelloPromise(win : CrossDomainWindowType, { domain }) : ZalgoPromise<{| domain : string |}> {\n    const helloPromises = windowStore('helloPromises');\n    const existingPromise = helloPromises.get(win);\n    if (existingPromise) {\n        existingPromise.resolve({ domain });\n    }\n    const newPromise = ZalgoPromise.resolve({ domain });\n    helloPromises.set(win, newPromise);\n    return newPromise;\n}\n\nfunction listenForHello({ on } : {| on : OnType |}) : CancelableType {\n    return on(MESSAGE_NAME.HELLO, { domain: WILDCARD }, ({ source, origin }) => {\n        resolveHelloPromise(source, { domain: origin });\n        return { instanceID: getInstanceID() };\n    });\n}\n\nexport function sayHello(win : CrossDomainWindowType, { send } : {| send : SendType |}) : ZalgoPromise<{| win : CrossDomainWindowType, domain : string, instanceID : string |}> {\n    return send(win, MESSAGE_NAME.HELLO, { instanceID: getInstanceID() }, { domain: WILDCARD, timeout: -1 })\n        .then(({ origin, data: { instanceID } }) => {\n            resolveHelloPromise(win, { domain: origin });\n            return { win, domain: origin, instanceID };\n        });\n}\n\nexport function getWindowInstanceID(win : CrossDomainWindowType, { send } : {| send : SendType |}) : ZalgoPromise<string> {\n    return windowStore('windowInstanceIDPromises').getOrSet(win, () => {\n        return sayHello(win, { send }).then(({ instanceID }) => instanceID);\n    });\n}\n\nexport function initHello({ on, send } : {| on : OnType, send : SendType |}) : CancelableType {\n    return globalStore('builtinListeners').getOrSet('helloListener', () => {\n        const listener = listenForHello({ on });\n\n        const parent = getAncestor();\n        if (parent) {\n            sayHello(parent, { send }).catch(err => {\n                // $FlowFixMe\n                if (__TEST__ && getGlobal(parent)) {\n                    throw err;\n                }\n            });\n        }\n\n        return listener;\n    });\n}\n\nexport function awaitWindowHello(win : CrossDomainWindowType, timeout : number = 5000, name : string = 'Window') : ZalgoPromise<{| domain : string |}> {\n    let promise = getHelloPromise(win);\n\n    if (timeout !== -1) {\n        promise = promise.timeout(timeout, new Error(`${ name } did not load after ${ timeout }ms`));\n    }\n\n    return promise;\n}\n","/* @flow */\n\nexport const MESSAGE_TYPE = {\n    REQUEST:  ('postrobot_message_request' : 'postrobot_message_request'),\n    RESPONSE: ('postrobot_message_response' : 'postrobot_message_response'),\n    ACK:      ('postrobot_message_ack' : 'postrobot_message_ack')\n};\n\nexport const MESSAGE_ACK = {\n    SUCCESS: ('success' : 'success'),\n    ERROR:   ('error' : 'error')\n};\n\nexport const MESSAGE_NAME = {\n    METHOD:      ('postrobot_method' : 'postrobot_method'),\n    HELLO:       ('postrobot_hello' : 'postrobot_hello'),\n    OPEN_TUNNEL: ('postrobot_open_tunnel' : 'postrobot_open_tunnel')\n};\n\nexport const SEND_STRATEGY = {\n    POST_MESSAGE: ('postrobot_post_message' : 'postrobot_post_message'),\n    BRIDGE:       ('postrobot_bridge' : 'postrobot_bridge'),\n    GLOBAL:       ('postrobot_global' : 'postrobot_global')\n};\n\nexport const BRIDGE_NAME_PREFIX = '__postrobot_bridge__';\nexport const POSTROBOT_PROXY =    '__postrobot_proxy__';\n\nexport const WILDCARD = '*';\n\nexport const SERIALIZATION_TYPE = {\n    CROSS_DOMAIN_ZALGO_PROMISE: ('cross_domain_zalgo_promise' : 'cross_domain_zalgo_promise'),\n    CROSS_DOMAIN_FUNCTION:      ('cross_domain_function' : 'cross_domain_function'),\n    CROSS_DOMAIN_WINDOW:        ('cross_domain_window' : 'cross_domain_window')\n};\n\nexport const METHOD = {\n    GET:  ('get' : 'get'),\n    POST: ('post' : 'post')\n};\n","/* @flow */\n\nimport { type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport { windowStore } from '../global';\n\nexport function markWindowKnown(win : CrossDomainWindowType) {\n    const knownWindows = windowStore('knownWindows');\n    knownWindows.set(win, true);\n}\n\nexport function isWindowKnown(win : CrossDomainWindowType) : boolean {\n    const knownWindows = windowStore('knownWindows');\n    return knownWindows.get(win, false);\n}\n","/* @flow */\n\nimport { TYPE } from './constants';\nimport type { CustomSerializedType } from './types';\n\nexport function isSerializedType(item : mixed) : boolean {\n    return (typeof item === 'object' && item !== null && typeof item.__type__ === 'string');\n}\n\nexport function determineType(val : mixed) : $Values<typeof TYPE> | void {\n    if (typeof val === 'undefined') {\n        return TYPE.UNDEFINED;\n    }\n\n    if (val === null) {\n        return TYPE.NULL;\n    }\n\n    if (Array.isArray(val)) {\n        return TYPE.ARRAY;\n    }\n\n    if (typeof val === 'function') {\n        return TYPE.FUNCTION;\n    }\n\n    if (typeof val === 'object') {\n\n        if (val instanceof Error) {\n            return TYPE.ERROR;\n        }\n\n        if (typeof val.then === 'function') {\n            return TYPE.PROMISE;\n        }\n\n        // $FlowFixMe method-unbinding\n        if (Object.prototype.toString.call(val) === '[object RegExp]') {\n            return TYPE.REGEX;\n        }\n\n        // $FlowFixMe method-unbinding\n        if (Object.prototype.toString.call(val) === '[object Date]') {\n            return TYPE.DATE;\n        }\n\n        return TYPE.OBJECT;\n    }\n\n    if (typeof val === 'string') {\n        return TYPE.STRING;\n    }\n\n    if (typeof val === 'number') {\n        return TYPE.NUMBER;\n    }\n\n    if (typeof val === 'boolean') {\n        return TYPE.BOOLEAN;\n    }\n}\n\nexport function serializeType<T : string, V : mixed>(type : T, val : V) : CustomSerializedType<T, V> {\n    return {\n        __type__: type,\n        __val__:  val\n    };\n}\n","/* @flow */\n\nexport const TYPE = {\n    FUNCTION:  ('function' : 'function'),\n    ERROR:     ('error' : 'error'),\n    PROMISE:   ('promise' : 'promise'),\n    REGEX:     ('regex' : 'regex'),\n    DATE:      ('date' : 'date'),\n    ARRAY:     ('array' : 'array'),\n    OBJECT:    ('object' : 'object'),\n    STRING:    ('string' : 'string'),\n    NUMBER:    ('number' : 'number'),\n    BOOLEAN:   ('boolean' : 'boolean'),\n    NULL:      ('null' : 'null'),\n    UNDEFINED: ('undefined' : 'undefined')\n};\n","/* @flow */\n\nimport { TYPE } from './constants';\nimport type { Thenable, CustomSerializedType, NativeSerializedType } from './types';\nimport { determineType, isSerializedType } from './common';\nimport {\n    serializeFunction,\n    serializeError, type SerializedError,\n    serializePromise,\n    serializeRegex, type SerializedRegex,\n    serializeDate, type SerializedDate,\n    serializeArray,\n    serializeObject,\n    serializeString,\n    serializeNumber,\n    serializeBoolean,\n    serializeNull,\n    serializeUndefined\n} from './serializers';\n\ntype NativeSerializer<V : mixed, S : mixed, T : $Values<typeof TYPE>> = (value : V, key : string) => NativeSerializedType<T, S>;\ntype CustomSerializer<V : mixed, S : mixed, T : string> = (value : V, key : string) => CustomSerializedType<T, S>;\ntype PrimitiveSerializer<V : mixed, S : mixed> = (value : V, key : string) => S;\ntype CustomOrPrimitiveSerializer<V : mixed, T : string> = CustomSerializer<V, *, T> | PrimitiveSerializer<V, *>;\ntype NativeOrCustomOrPrimitiveSerializer<V : mixed, S : mixed, T : string> = NativeSerializer<V, S, T> | CustomOrPrimitiveSerializer<V, T>;\n\ntype Serializers = {|\n    function? : CustomOrPrimitiveSerializer<Function, typeof TYPE.FUNCTION>,\n    error? : NativeOrCustomOrPrimitiveSerializer<Error, SerializedError, typeof TYPE.ERROR>,\n    promise? : CustomOrPrimitiveSerializer<Thenable, typeof TYPE.PROMISE>,\n    regex? : NativeOrCustomOrPrimitiveSerializer<RegExp, SerializedRegex, typeof TYPE.REGEX>,\n    date? : NativeOrCustomOrPrimitiveSerializer<Date, SerializedDate, typeof TYPE.DATE>,\n    array? : CustomOrPrimitiveSerializer<$ReadOnlyArray<mixed>, typeof TYPE.ARRAY>,\n    object? : CustomOrPrimitiveSerializer<Object, typeof TYPE.OBJECT>,\n    string? : CustomOrPrimitiveSerializer<string, typeof TYPE.STRING>,\n    number? : CustomOrPrimitiveSerializer<number, typeof TYPE.NUMBER>,\n    boolean? : CustomOrPrimitiveSerializer<boolean, typeof TYPE.BOOLEAN>,\n    null? : CustomOrPrimitiveSerializer<null, typeof TYPE.NULL>,\n    undefined? : CustomOrPrimitiveSerializer<void, typeof TYPE.UNDEFINED>\n|};\n\nconst SERIALIZER : Serializers = {\n    [ TYPE.FUNCTION ]:  serializeFunction,\n    [ TYPE.ERROR ]:     serializeError,\n    [ TYPE.PROMISE ]:   serializePromise,\n    [ TYPE.REGEX ]:     serializeRegex,\n    [ TYPE.DATE ]:      serializeDate,\n    [ TYPE.ARRAY ]:     serializeArray,\n    [ TYPE.OBJECT ]:    serializeObject,\n    [ TYPE.STRING ]:    serializeString,\n    [ TYPE.NUMBER ]:    serializeNumber,\n    [ TYPE.BOOLEAN ]:   serializeBoolean,\n    [ TYPE.NULL ]:      serializeNull,\n    [ TYPE.UNDEFINED ]: serializeUndefined\n};\n\n// $FlowFixMe\nconst defaultSerializers : Serializers = {};\n\nexport function serialize<T : mixed>(obj : T, serializers : Serializers = defaultSerializers) : string {\n\n    function replacer(key) : ?mixed {\n        const val = this[key];\n\n        if (isSerializedType(this)) {\n            return val;\n        }\n        \n        const type = determineType(val);\n\n        if (!type) {\n            return val;\n        }\n\n        // $FlowFixMe\n        const serializer = serializers[type] || SERIALIZER[type];\n\n        if (!serializer) {\n            return val;\n        }\n\n        return serializer(val, key);\n    }\n\n    const result = JSON.stringify(obj, replacer);\n\n    if (typeof result === 'undefined') {\n        return TYPE.UNDEFINED;\n    }\n\n    return result;\n}\n","/* @flow */\n\nexport type SerializedFunction = void;\n\nexport function serializeFunction() : SerializedFunction {\n    // pass\n}\n\nexport function deserializeFunction() {\n    throw new Error(`Function serialization is not implemented; nothing to deserialize`);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nimport { serializeObject } from './object';\n\nexport type SerializedError = {|\n    message : string,\n    stack : string,\n    code : string | number | void,\n    data : mixed\n|};\n\n// $FlowFixMe\nexport function serializeError({ message, stack, code, data } : Error) : NativeSerializedType<typeof TYPE.ERROR, SerializedError> {\n    return serializeType(TYPE.ERROR, { message, stack, code, data });\n}\n\nexport function deserializeError({ message, stack, code, data } : SerializedError) : Error {\n    const error = new Error(message);\n    // $FlowFixMe\n    error.code = code;\n\n    if (data) {\n        // $FlowFixMe\n        error.data = serializeObject(data);\n    }\n\n    error.stack = `${ stack }\\n\\n${ error.stack }`;\n    return error;\n}\n","/* @flow */\n\nimport type { Thenable } from '../types';\n\nexport type SerializedPromise = void;\n\nexport function serializePromise() : SerializedPromise {\n    // pass\n}\n\nexport function deserializePromise() : Thenable {\n    throw new Error(`Promise serialization is not implemented; nothing to deserialize`);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedRegex = string;\n\nexport function serializeRegex(val : RegExp) : NativeSerializedType<typeof TYPE.REGEX, SerializedRegex> {\n    return serializeType(TYPE.REGEX, val.source);\n}\n\nexport function deserializeRegex(val : string) : RegExp {\n    // eslint-disable-next-line security/detect-non-literal-regexp\n    return new RegExp(val);\n}\n","/* @flow */\n\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\nimport type { NativeSerializedType } from '../types';\n\nexport type SerializedDate = string;\n\nexport function serializeDate(val : Date) : NativeSerializedType<typeof TYPE.DATE, SerializedDate> {\n    return serializeType(TYPE.DATE, val.toJSON());\n}\n\nexport function deserializeDate(val : string) : Date {\n    return new Date(val);\n}\n","/* @flow */\n\nexport type SerializedArray<T : mixed = mixed> = $ReadOnlyArray<T>;\n\nexport function serializeArray<T : mixed>(val : $ReadOnlyArray<T>) : SerializedArray<T> {\n    return val;\n}\n\nexport function deserializeArray<T : mixed>(val : SerializedArray<T>) : $ReadOnlyArray<T> {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedObject = Object;\n\nexport function serializeObject(val : Object) : SerializedObject {\n    return val;\n}\n\nexport function deserializeObject(val : SerializedObject) : Object {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedString = string;\n\nexport function serializeString(val : string) : SerializedString {\n    return val;\n}\n\nexport function deserializeString(val : SerializedString) : string {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedNumber = number;\n\nexport function serializeNumber(val : number) : SerializedNumber {\n    return val;\n}\n\nexport function deserializeNumber(val : SerializedNumber) : number {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedBoolean = boolean;\n\nexport function serializeBoolean(val : boolean) : SerializedBoolean {\n    return val;\n}\n\nexport function deserializeBoolean(val : SerializedBoolean) : boolean {\n    return val;\n}\n","/* @flow */\n\nexport type SerializedNull = null;\n\nexport function serializeNull(val : null) : SerializedNull {\n    return val;\n}\n\nexport function deserializeNull(val : SerializedNull) : null {\n    return val;\n}\n","/* @flow */\n\nimport type { NativeSerializedType } from '../types';\nimport { serializeType } from '../common';\nimport { TYPE } from '../constants';\n\nexport type SerializedUndefined = void;\n\nexport function serializeUndefined(val : void) : NativeSerializedType<typeof TYPE.UNDEFINED, SerializedUndefined> {\n    return serializeType(TYPE.UNDEFINED, val);\n}\n\nexport function deserializeUndefined() : void {\n    // pass\n}\n","/* @flow */\n\nimport type { Thenable } from './types';\nimport { TYPE } from './constants';\nimport { determineType, isSerializedType } from './common';\nimport {\n    deserializeFunction,\n    deserializeError, type SerializedError,\n    deserializePromise,\n    deserializeRegex, type SerializedRegex,\n    deserializeDate, type SerializedDate,\n    deserializeArray,\n    deserializeObject,\n    deserializeString,\n    deserializeNumber,\n    deserializeBoolean,\n    deserializeNull,\n    deserializeUndefined\n} from './serializers';\n\ntype Deserializer<V : mixed, S : mixed> = (serializedValue : S, key : string) => V;\ntype PrimitiveDeserializer<V, S = V> = (serializedValue : S, key : string) => V;\n\ntype Deserializers = {\n    function? : Deserializer<Function, *>,\n    error? : Deserializer<Error, SerializedError>,\n    promise? : Deserializer<Thenable, *>,\n    regex? : Deserializer<RegExp, SerializedRegex>,\n    date? : Deserializer<Date, SerializedDate>,\n    array? : PrimitiveDeserializer<$ReadOnlyArray<mixed>>,\n    object? : PrimitiveDeserializer<Object>,\n    string? : PrimitiveDeserializer<string>,\n    number? : PrimitiveDeserializer<number>,\n    boolean? : PrimitiveDeserializer<boolean>,\n    null? : PrimitiveDeserializer<null>,\n    [string] : Deserializer<mixed, *>,\n    undefined? : PrimitiveDeserializer<void>\n};\n\n// $FlowFixMe\nconst DESERIALIZER : Deserializers = {\n    [ TYPE.FUNCTION ]:  deserializeFunction,\n    [ TYPE.ERROR ]:     deserializeError,\n    [ TYPE.PROMISE ]:   deserializePromise,\n    [ TYPE.REGEX ]:     deserializeRegex,\n    [ TYPE.DATE ]:      deserializeDate,\n    [ TYPE.ARRAY ]:     deserializeArray,\n    [ TYPE.OBJECT ]:    deserializeObject,\n    [ TYPE.STRING ]:    deserializeString,\n    [ TYPE.NUMBER ]:    deserializeNumber,\n    [ TYPE.BOOLEAN ]:   deserializeBoolean,\n    [ TYPE.NULL ]:      deserializeNull,\n    [ TYPE.UNDEFINED ]: deserializeUndefined\n};\n\n// $FlowFixMe\nconst defaultDeserializers : Deserializers = {};\n\nexport function deserialize<T : mixed | null | void>(str : string, deserializers : Deserializers = defaultDeserializers) : T {\n    if (str === TYPE.UNDEFINED) {\n        // $FlowFixMe\n        return;\n    }\n\n    function replacer(key, val) : ?mixed {\n        if (isSerializedType(this)) {\n            return val;\n        }\n\n        let type;\n        let value;\n\n        if (isSerializedType(val)) {\n            type = val.__type__;\n            value = val.__val__;\n        } else {\n            type = determineType(val);\n            value = val;\n        }\n\n        if (!type) {\n            return value;\n        }\n\n        // $FlowFixMe\n        const deserializer = deserializers[type] || DESERIALIZER[type];\n\n        if (!deserializer) {\n            return value;\n        }\n\n        return deserializer(value, key);\n    }\n\n    return JSON.parse(str, replacer);\n}\n","/* @flow */\n\nimport { isSameDomain, isWindowClosed, type CrossDomainWindowType, closeWindow,\n    type DomainMatcher, getOpener, WINDOW_TYPE, isWindow, assertSameDomain, getFrameForWindow } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID, memoizePromise, noop, submitForm } from 'belter/src';\nimport { serializeType, type CustomSerializedType } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE, METHOD } from '../conf';\nimport { windowStore, globalStore } from '../global';\nimport { getWindowInstanceID } from '../lib';\nimport { linkWindow } from '../bridge';\nimport type { SendType } from '../types';\n\nfunction cleanupProxyWindows() {\n    const idToProxyWindow = globalStore('idToProxyWindow');\n    for (const id of idToProxyWindow.keys()) {\n        // $FlowFixMe\n        if (idToProxyWindow.get(id).shouldClean()) {\n            idToProxyWindow.del(id);\n        }\n    }\n}\n\ntype SetLocationOptions = {|\n    method? : $Values<typeof METHOD>,\n    body? : {|\n        [string] : string | boolean\n    |}\n|};\n\ntype SerializedWindowType = {|\n    id : string,\n    getType : () => ZalgoPromise<$Values<typeof WINDOW_TYPE>>,\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    isClosed : () => ZalgoPromise<boolean>,\n    setLocation : (url : string, opts? : SetLocationOptions) => ZalgoPromise<void>,\n    getName : () => ZalgoPromise<?string>,\n    setName : (string) => ZalgoPromise<void>,\n    getInstanceID : () => ZalgoPromise<string>\n|};\n\nfunction getSerializedWindow(winPromise : ZalgoPromise<CrossDomainWindowType>, { send, id = uniqueID() } : {| send : SendType, id? : string |}) : SerializedWindowType {\n    \n    let windowNamePromise = winPromise.then(win => {\n        if (isSameDomain(win)) {\n            return assertSameDomain(win).name;\n        }\n    });\n    \n    const windowTypePromise = winPromise.then(window => {\n        if (!isWindowClosed(window)) {\n            return getOpener(window) ? WINDOW_TYPE.POPUP : WINDOW_TYPE.IFRAME;\n        } else {\n            throw new Error(`Window is closed, can not determine type`);\n        }\n    });\n\n    windowNamePromise.catch(noop);\n    windowTypePromise.catch(noop);\n\n    const getName = () => winPromise.then(win => {\n        if (isWindowClosed(win)) {\n            return;\n        }\n\n        if (isSameDomain(win)) {\n            return assertSameDomain(win).name;\n        }\n\n        return windowNamePromise;\n    });\n\n    const getDefaultSetLocationOptions = () => {\n        // $FlowFixMe\n        return {};\n    };\n\n    const setLocation = (href : string, opts? : SetLocationOptions = getDefaultSetLocationOptions()) => winPromise.then(win => {\n        const domain = `${ window.location.protocol }//${ window.location.host }`;\n        const { method = METHOD.GET, body } = opts;\n\n        if (href.indexOf('/') === 0) {\n            href = `${ domain }${ href }`;\n        } else if (!href.match(/^https?:\\/\\//) && href.indexOf(domain) !== 0) {\n            throw new Error(`Expected url to be http or https url, or absolute path, got ${ JSON.stringify(href) }`);\n        }\n\n        if (method === METHOD.POST) {\n            return getName().then(name => {\n                if (!name) {\n                    throw new Error(`Can not post to window without target name`);\n                }\n\n                submitForm({\n                    url:    href,\n                    target: name,\n                    method,\n                    body\n                });\n            });\n        } else if (method === METHOD.GET) {\n            if (isSameDomain(win)) {\n                try {\n                    if (win.location && typeof win.location.replace === 'function') {\n                        // $FlowFixMe\n                        win.location.replace(href);\n                        return;\n                    }\n                } catch (err) {\n                    // pass\n                }\n            }\n\n            win.location = href;\n\n        } else {\n            throw new Error(`Unsupported method: ${ method }`);\n        }\n    });\n\n    return {\n        id,\n        getType: () => {\n            return windowTypePromise;\n        },\n        getInstanceID: memoizePromise(() => winPromise.then(win => getWindowInstanceID(win, { send }))),\n        close:         () => winPromise.then(closeWindow),\n        getName,\n        focus:         () => winPromise.then(win => {\n            win.focus();\n        }),\n        isClosed: () => winPromise.then(win => {\n            return isWindowClosed(win);\n        }),\n        setLocation,\n        setName: (name) => winPromise.then(win => {\n            if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n                linkWindow({ win, name });\n            }\n\n            const sameDomain = isSameDomain(win);\n            const frame = getFrameForWindow(win);\n\n            if (!sameDomain) {\n                throw new Error(`Can not set name for cross-domain window: ${ name }`);\n            }\n\n            assertSameDomain(win).name = name;\n            if (frame) {\n                frame.setAttribute('name', name);\n            }\n\n            windowNamePromise = ZalgoPromise.resolve(name);\n        })\n    };\n}\n\nexport class ProxyWindow {\n\n    id : string\n    isProxyWindow : true = true\n    serializedWindow : SerializedWindowType\n    actualWindow : ?CrossDomainWindowType\n    actualWindowPromise : ZalgoPromise<CrossDomainWindowType>\n    send : SendType\n    name : string\n\n    constructor({ send, win, serializedWindow } : {| win? : CrossDomainWindowType, serializedWindow? : SerializedWindowType, send : SendType |}) {\n        this.actualWindowPromise = new ZalgoPromise();\n        this.serializedWindow = serializedWindow || getSerializedWindow(this.actualWindowPromise, { send });\n        \n        globalStore('idToProxyWindow').set(this.getID(), this);\n        if (win) {\n            this.setWindow(win, { send });\n        }\n    }\n\n    getID() : string {\n        return this.serializedWindow.id;\n    }\n\n    getType() : ZalgoPromise<$Values<typeof WINDOW_TYPE>> {\n        return this.serializedWindow.getType();\n    }\n\n    isPopup() : ZalgoPromise<boolean> {\n        return this.getType().then(type => {\n            return type === WINDOW_TYPE.POPUP;\n        });\n    }\n\n    setLocation(href : string, opts? : SetLocationOptions) : ZalgoPromise<ProxyWindow> {\n        return this.serializedWindow.setLocation(href, opts).then(() => this);\n    }\n\n    getName() : ZalgoPromise<?string> {\n        return this.serializedWindow.getName();\n    }\n\n    setName(name : string) : ZalgoPromise<ProxyWindow> {\n        return this.serializedWindow.setName(name).then(() => this);\n    }\n\n    close() : ZalgoPromise<ProxyWindow> {\n        return this.serializedWindow.close().then(() => this);\n    }\n\n    focus() : ZalgoPromise<ProxyWindow> {\n        const isPopupPromise = this.isPopup();\n        const getNamePromise = this.getName();\n\n        const reopenPromise = ZalgoPromise.hash({ isPopup: isPopupPromise, name: getNamePromise }).then(({ isPopup, name }) => {\n            if (isPopup && name) {\n                window.open('', name);\n            }\n        });\n        const focusPromise = this.serializedWindow.focus();\n\n        return ZalgoPromise.all([\n            reopenPromise,\n            focusPromise\n        ]).then(() => this);\n    }\n\n    isClosed() : ZalgoPromise<boolean> {\n        return this.serializedWindow.isClosed();\n    }\n\n    getWindow() : ?CrossDomainWindowType {\n        return this.actualWindow;\n    }\n\n    setWindow(win : CrossDomainWindowType, { send } : {| send : SendType |}) {\n        this.actualWindow = win;\n        this.actualWindowPromise.resolve(this.actualWindow);\n        this.serializedWindow = getSerializedWindow(this.actualWindowPromise, { send, id: this.getID() });\n        windowStore('winToProxyWindow').set(win, this);\n    }\n\n    awaitWindow() : ZalgoPromise<CrossDomainWindowType> {\n        return this.actualWindowPromise;\n    }\n\n    matchWindow(win : CrossDomainWindowType, { send } : {| send : SendType |}) : ZalgoPromise<boolean> {\n        return ZalgoPromise.try(() => {\n            if (this.actualWindow) {\n                return win === this.actualWindow;\n            }\n            \n            return ZalgoPromise.hash({\n                proxyInstanceID:       this.getInstanceID(),\n                knownWindowInstanceID: getWindowInstanceID(win, { send })\n            }).then(({ proxyInstanceID, knownWindowInstanceID }) => {\n                const match = proxyInstanceID === knownWindowInstanceID;\n\n                if (match) {\n                    this.setWindow(win, { send });\n                }\n\n                return match;\n            });\n        });\n    }\n\n    unwrap() : CrossDomainWindowType | ProxyWindow {\n        return this.actualWindow || this;\n    }\n\n    getInstanceID() : ZalgoPromise<string> {\n        return this.serializedWindow.getInstanceID();\n    }\n\n    shouldClean() : boolean {\n        return Boolean(this.actualWindow && isWindowClosed(this.actualWindow));\n    }\n\n    serialize() : SerializedWindowType {\n        return this.serializedWindow;\n    }\n\n    static unwrap(win : CrossDomainWindowType | ProxyWindow) : CrossDomainWindowType | ProxyWindow {\n        return ProxyWindow.isProxyWindow(win)\n            // $FlowFixMe\n            ? win.unwrap()\n            : win;\n    }\n\n    static serialize(win : CrossDomainWindowType | ProxyWindow, { send } : {| send : SendType |}) : SerializedWindowType {\n        cleanupProxyWindows();\n        return ProxyWindow.toProxyWindow(win, { send }).serialize();\n    }\n\n    static deserialize(serializedWindow : SerializedWindowType, { send } : {| send : SendType |}) : ProxyWindow {\n        cleanupProxyWindows();\n        return globalStore('idToProxyWindow').get(serializedWindow.id) || new ProxyWindow({ serializedWindow, send });\n    }\n\n    static isProxyWindow(obj : CrossDomainWindowType | ProxyWindow) : boolean {\n        // $FlowFixMe\n        return Boolean(obj && !isWindow(obj) && obj.isProxyWindow);\n    }\n\n    static toProxyWindow(win : CrossDomainWindowType | ProxyWindow, { send } : {| send : SendType |}) : ProxyWindow {\n        cleanupProxyWindows();\n\n        if (ProxyWindow.isProxyWindow(win)) {\n            // $FlowFixMe\n            return win;\n        }\n\n        // $FlowFixMe\n        const actualWindow : CrossDomainWindowType = win;\n        \n        return windowStore('winToProxyWindow').get(actualWindow) || new ProxyWindow({ win: actualWindow, send });\n    }\n}\n\nexport type SerializedWindow = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW, SerializedWindowType>;\n\nexport function serializeWindow(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, win : CrossDomainWindowType, { send } : {| send : SendType |}) : SerializedWindow {\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW, ProxyWindow.serialize(win, { send }));\n}\n\nexport function deserializeWindow(source : CrossDomainWindowType | ProxyWindow, origin : string, win : SerializedWindowType, { send } : {| send : SendType |}) : ProxyWindow {\n    return ProxyWindow.deserialize(win, { send });\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getDomain, isSameDomain, isOpener, isSameTopWindow, matchDomain, getUserAgent, getDomainFromUrl, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { BRIDGE_NAME_PREFIX } from '../conf';\nimport { windowStore } from '../global';\n\nexport function needsBridgeForBrowser() : boolean {\n\n    if (getUserAgent(window).match(/MSIE|trident|edge\\/12|edge\\/13/i)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function needsBridgeForWin(win : CrossDomainWindowType) : boolean {\n\n    if (!isSameTopWindow(window, win)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function needsBridgeForDomain(domain : ?string, win : ?CrossDomainWindowType) : boolean {\n\n    if (domain) {\n        if (getDomain() !== getDomainFromUrl(domain)) {\n            return true;\n        }\n    } else if (win) {\n        if (!isSameDomain(win))  {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function needsBridge({ win, domain } : {| win? : CrossDomainWindowType, domain? : string |}) : boolean {\n\n    if (!needsBridgeForBrowser()) {\n        return false;\n    }\n\n    if (domain && !needsBridgeForDomain(domain, win)) {\n        return false;\n    }\n\n    if (win && !needsBridgeForWin(win)) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function getBridgeName(domain : string) : string {\n\n    domain = domain || getDomainFromUrl(domain);\n\n    const sanitizedDomain = domain.replace(/[^a-zA-Z0-9]+/g, '_');\n\n    const id = `${ BRIDGE_NAME_PREFIX }_${ sanitizedDomain }`;\n\n    return id;\n}\n\nexport function isBridge() : boolean {\n    return Boolean(window.name && window.name === getBridgeName(getDomain()));\n}\n\nexport const documentBodyReady : ZalgoPromise<HTMLBodyElement> = new ZalgoPromise(resolve => {\n\n    if (window.document && window.document.body) {\n        return resolve(window.document.body);\n    }\n\n    const interval = setInterval(() => {\n        if (window.document && window.document.body) {\n            clearInterval(interval);\n            return resolve(window.document.body);\n        }\n    }, 10);\n});\n\nexport function registerRemoteWindow(win : CrossDomainWindowType) {\n    const remoteWindowPromises = windowStore('remoteWindowPromises');\n    remoteWindowPromises.getOrSet(win, () => new ZalgoPromise());\n}\n\nexport function findRemoteWindow(win : CrossDomainWindowType) : ZalgoPromise<(remoteWin : CrossDomainWindowType, message : string, remoteDomain : string) => void> {\n    const remoteWindowPromises = windowStore('remoteWindowPromises');\n    const remoteWinPromise = remoteWindowPromises.get(win);\n\n    if (!remoteWinPromise) {\n        throw new Error(`Remote window promise not found`);\n    }\n\n    return remoteWinPromise;\n}\n\ntype SendMessageType = {|\n    (string) : void,\n    fireAndForget : (string) => void\n|};\n\nexport function registerRemoteSendMessage(win : CrossDomainWindowType, domain : string, sendMessage : SendMessageType) {\n    const sendMessageWrapper = (remoteWin : CrossDomainWindowType, remoteDomain : string, message : string) => {\n        if (remoteWin !== win) {\n            throw new Error(`Remote window does not match window`);\n        }\n\n        if (!matchDomain(remoteDomain, domain)) {\n            throw new Error(`Remote domain ${ remoteDomain } does not match domain ${ domain }`);\n        }\n\n        sendMessage.fireAndForget(message);\n    };\n\n    findRemoteWindow(win).resolve(sendMessageWrapper);\n}\n\nexport function rejectRemoteSendMessage(win : CrossDomainWindowType, err : Error) {\n    findRemoteWindow(win).reject(err).catch(noop);\n}\n\nexport function sendBridgeMessage(win : CrossDomainWindowType, domain : string, message : string) : ZalgoPromise<void> {\n\n    const messagingChild  = isOpener(window, win);\n    const messagingParent = isOpener(win, window);\n\n    if (!messagingChild && !messagingParent) {\n        throw new Error(`Can only send messages to and from parent and popup windows`);\n    }\n\n    return findRemoteWindow(win).then(sendMessage => {\n        return sendMessage(win, domain, message);\n    });\n}\n","/* @flow */\n\nimport { matchDomain, getDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { uniqueID, isRegex, arrayFrom } from 'belter/src';\nimport { serializeType, type CustomSerializedType } from 'universal-serialize/src';\n\nimport { MESSAGE_NAME, WILDCARD, SERIALIZATION_TYPE } from '../conf';\nimport { windowStore, globalStore } from '../global';\nimport type { OnType, SendType, CancelableType } from '../types';\n\nimport { ProxyWindow } from './window';\n\ntype StoredMethod = {|\n    name : string,\n    domain : DomainMatcher,\n    val : Function,\n    source : CrossDomainWindowType | ProxyWindow\n|};\n\nfunction addMethod(id : string, val : Function, name : string, source : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher) {\n    const methodStore = windowStore('methodStore');\n    const proxyWindowMethods = globalStore('proxyWindowMethods');\n    \n    if (ProxyWindow.isProxyWindow(source)) {\n        proxyWindowMethods.set(id, { val, name, domain, source });\n    } else {\n        proxyWindowMethods.del(id);\n        // $FlowFixMe\n        const methods = methodStore.getOrSet(source, () => ({}));\n        methods[id] = { domain, name, val, source };\n    }\n}\n\nfunction lookupMethod(source : CrossDomainWindowType, id : string) : ?StoredMethod {\n    const methodStore = windowStore('methodStore');\n    const proxyWindowMethods = globalStore('proxyWindowMethods');\n    const methods = methodStore.getOrSet(source, () => ({}));\n    return methods[id] || proxyWindowMethods.get(id);\n}\n\nfunction stringifyArguments(args : $ReadOnlyArray<mixed> = []) : string {\n    return arrayFrom(args).map(arg => {\n        if (typeof arg === 'string') {\n            return `'${ arg }'`;\n        }\n        if (arg === undefined) {\n            return 'undefined';\n        }\n        if (arg === null) {\n            return 'null';\n        }\n        if (typeof arg === 'boolean') {\n            return arg.toString();\n        }\n        if (Array.isArray(arg)) {\n            return '[ ... ]';\n        }\n        if (typeof arg === 'object') {\n            return '{ ... }';\n        }\n        if (typeof arg === 'function') {\n            return '() => { ... }';\n        }\n        return `<${ typeof arg }>`;\n    }).join(', ');\n}\n\nfunction listenForFunctionCalls({ on, send } : {| on : OnType, send : SendType |}) : CancelableType {\n    return globalStore('builtinListeners').getOrSet('functionCalls', () => {\n        return on(MESSAGE_NAME.METHOD, { domain: WILDCARD }, ({ source, origin, data } : {| source : CrossDomainWindowType, origin : string, data : Object |}) => {\n            const { id, name } = data;\n\n            const meth = lookupMethod(source, id);\n    \n            if (!meth) {\n                throw new Error(`Could not find method '${ name }' with id: ${ data.id } in ${ getDomain(window) }`);\n            }\n\n            const { source: methodSource, domain, val } = meth;\n            \n            return ZalgoPromise.try(() => {\n                if (!matchDomain(domain, origin)) {\n                    // $FlowFixMe\n                    throw new Error(`Method '${ data.name }' domain ${ JSON.stringify(isRegex(meth.domain) ? meth.domain.source : meth.domain) } does not match origin ${ origin } in ${ getDomain(window) }`);\n                }\n                \n                if (ProxyWindow.isProxyWindow(methodSource)) {\n                    // $FlowFixMe\n                    return methodSource.matchWindow(source, { send }).then(match => {\n                        if (!match) {\n                            throw new Error(`Method call '${ data.name }' failed - proxy window does not match source in ${ getDomain(window) }`);\n                        }\n                    });\n                }\n            }).then(() => {\n                return val.apply({ source, origin }, data.args);\n            }, err => {\n                return ZalgoPromise.try(() => {\n                    if (val.onError) {\n                        return val.onError(err);\n                    }\n                }).then(() => {\n                    // $FlowFixMe\n                    if (err.stack) {\n                        // $FlowFixMe\n                        err.stack = `Remote call to ${ name }(${ stringifyArguments(data.args) }) failed\\n\\n${ err.stack }`;\n                    }\n\n                    throw err;\n                });\n            }).then(result => {\n                return { result, id, name };\n            });\n        });\n    });\n}\n\nexport type SerializedFunction = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION, {|\n    id : string,\n    name : string\n|}>;\n\n// eslint-disable-next-line flowtype/require-exact-type\ntype SerializableFunction<T> = {\n    () : ZalgoPromise<T> | T,\n    __id__? : string,\n    __name__? : string\n};\n\nexport function serializeFunction<T>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, val : SerializableFunction<T>, key : string, { on, send } : {| on : OnType, send : SendType |}) : SerializedFunction {\n    listenForFunctionCalls({ on, send });\n    \n    const id = val.__id__ || uniqueID();\n    destination = ProxyWindow.unwrap(destination);\n    let name = val.__name__ || val.name || key;\n\n    if (typeof name === 'string' && typeof name.indexOf === 'function' && name.indexOf('anonymous::') === 0) {\n        name = name.replace('anonymous::', `${ key }::`);\n    }\n\n    if (ProxyWindow.isProxyWindow(destination)) {\n        addMethod(id, val, name, destination, domain);\n\n        // $FlowFixMe\n        destination.awaitWindow().then(win => {\n            addMethod(id, val, name, win, domain);\n        });\n    } else {\n        addMethod(id, val, name, destination, domain);\n    }\n\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION, { id, name });\n}\n\nexport function deserializeFunction<T>(source : CrossDomainWindowType | ProxyWindow, origin : string, { id, name } : {| id : string, name : string |}, { send } : {| send : SendType |}) : (...args : $ReadOnlyArray<mixed>) => ZalgoPromise<T> {\n    const getDeserializedFunction = (opts? : Object = {}) => {\n        function crossDomainFunctionWrapper<X : mixed>() : ZalgoPromise<X> {\n            let originalStack;\n    \n            if (__DEBUG__) {\n                originalStack = (new Error(`Original call to ${ name }():`)).stack;\n            }\n    \n            return ProxyWindow.toProxyWindow(source, { send }).awaitWindow().then(win => {\n                const meth = lookupMethod(win, id);\n    \n                if (meth && meth.val !== crossDomainFunctionWrapper) {\n                    return meth.val.apply({ source: window, origin: getDomain() }, arguments);\n                } else {\n                    // $FlowFixMe[method-unbinding]\n                    const args = Array.prototype.slice.call(arguments);\n\n                    if (opts.fireAndForget) {\n                        return send(win, MESSAGE_NAME.METHOD, { id, name, args }, { domain: origin, fireAndForget: true });\n                    } else {\n                        return send(win, MESSAGE_NAME.METHOD, { id, name, args }, { domain: origin, fireAndForget: false })\n                            .then(res => res.data.result);\n                    }\n                }\n    \n            }).catch(err => {\n                // $FlowFixMe\n                if (__DEBUG__ && originalStack && err.stack) {\n                    // $FlowFixMe\n                    err.stack = `Remote call to ${ name }(${ stringifyArguments(arguments) }) failed\\n\\n${ err.stack }\\n\\n${ originalStack }`;\n                }\n                throw err;\n            });\n        }\n\n        crossDomainFunctionWrapper.__name__ = name;\n        crossDomainFunctionWrapper.__origin__ = origin;\n        crossDomainFunctionWrapper.__source__ = source;\n        crossDomainFunctionWrapper.__id__ = id;\n\n        crossDomainFunctionWrapper.origin = origin;\n\n        return crossDomainFunctionWrapper;\n    };\n\n    const crossDomainFunctionWrapper = getDeserializedFunction();\n    crossDomainFunctionWrapper.fireAndForget = getDeserializedFunction({ fireAndForget: true });\n\n    return crossDomainFunctionWrapper;\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, isWindow, type DomainMatcher } from 'cross-domain-utils/src';\nimport { TYPE, serialize, deserialize, type Thenable } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\nimport type { OnType, SendType } from '../types';\n\nimport { serializeFunction, deserializeFunction, type SerializedFunction } from './function';\nimport { serializePromise, deserializePromise, type SerializedPromise } from './promise';\nimport { serializeWindow, deserializeWindow, type SerializedWindow, ProxyWindow } from './window';\n\nexport function serializeMessage<T : mixed>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, obj : T, { on, send } : {| on : OnType, send : SendType |}) : string {\n    return serialize(obj, {\n        [ TYPE.PROMISE ]:  (val : Thenable, key : string) : SerializedPromise => serializePromise(destination, domain, val, key, { on, send }),\n        [ TYPE.FUNCTION ]: (val : Function, key : string) : SerializedFunction => serializeFunction(destination, domain, val, key, { on, send }),\n        [ TYPE.OBJECT ]:   (val : CrossDomainWindowType) : Object | SerializedWindow => {\n            return (isWindow(val) || ProxyWindow.isProxyWindow(val)) ? serializeWindow(destination, domain, val, { send }) : val;\n        }\n    });\n}\n\nexport function deserializeMessage<T : mixed>(source : CrossDomainWindowType | ProxyWindow, origin : string, message : string, { send } : {| on : OnType, send : SendType |}) : T {\n    return deserialize(message, {\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE ]: (serializedPromise)  => deserializePromise(source, origin, serializedPromise),\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_FUNCTION ]:      (serializedFunction) => deserializeFunction(source, origin, serializedFunction, { send }),\n        [ SERIALIZATION_TYPE.CROSS_DOMAIN_WINDOW ]:        (serializedWindow)   => deserializeWindow(source, origin, serializedWindow, { send })\n    });\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { serializeType, type CustomSerializedType, type Thenable } from 'universal-serialize/src';\n\nimport { SERIALIZATION_TYPE } from '../conf';\nimport type { OnType, SendType } from '../types';\n\nimport { serializeFunction, type SerializedFunction } from './function';\nimport { ProxyWindow } from './window';\n\nexport type SerializedPromise = CustomSerializedType<typeof SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE, {|\n    then : SerializedFunction\n|}>;\n\nexport function serializePromise(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, val : Thenable, key : string, { on, send } : {| on : OnType, send : SendType |}) : SerializedPromise {\n    return serializeType(SERIALIZATION_TYPE.CROSS_DOMAIN_ZALGO_PROMISE, {\n        then: serializeFunction(destination, domain, (resolve, reject) => val.then(resolve, reject), key, { on, send })\n    });\n}\n\nexport function deserializePromise<T>(source : CrossDomainWindowType | ProxyWindow, origin : string, { then } : {| then : Function |}) : ZalgoPromise<T> {\n    return new ZalgoPromise(then);\n}\n","/* @flow */\n\nimport { isSameDomain, isSameTopWindow, isActuallySameDomain, getActualDomain,\n    getDomain, type CrossDomainWindowType, PROTOCOL } from 'cross-domain-utils/src';\n\nimport { SEND_STRATEGY, WILDCARD } from '../../conf';\nimport { needsGlobalMessagingForBrowser } from '../../lib';\nimport { getGlobal } from '../../global';\nimport { sendBridgeMessage, needsBridgeForBrowser, isBridge } from '../../bridge';\n\ntype SendStrategies = {|\n    [$Values<typeof SEND_STRATEGY>] : (CrossDomainWindowType, string, string) => void\n|};\n\nexport const SEND_MESSAGE_STRATEGIES : SendStrategies = {};\n\nSEND_MESSAGE_STRATEGIES[SEND_STRATEGY.POST_MESSAGE] = (win : CrossDomainWindowType, serializedMessage : string, domain : string) => {\n    if (domain.indexOf(PROTOCOL.FILE) === 0) {\n        domain = WILDCARD;\n    }\n\n    if (__TEST__) {\n        if (needsGlobalMessagingForBrowser() && isSameTopWindow(window, win) === false) {\n            return;\n        }\n\n        if (domain.indexOf(PROTOCOL.MOCK) === 0) {\n            if (!isActuallySameDomain(win)) {\n                throw new Error(`Attempting to send message to mock domain ${ domain }, but window is actually cross-domain`);\n            }\n\n            // $FlowFixMe\n            const windowDomain = getDomain(win);\n                \n            if (windowDomain !== domain) {\n                throw new Error(`Mock domain target ${ domain } does not match window domain ${ windowDomain }`);\n            }\n\n            // $FlowFixMe\n            domain = getActualDomain(win);\n\n        }\n    }\n\n    win.postMessage(serializedMessage, domain);\n};\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n\n    SEND_MESSAGE_STRATEGIES[SEND_STRATEGY.BRIDGE] = (win : CrossDomainWindowType, serializedMessage : string, domain : string) => {\n\n        if (!needsBridgeForBrowser() && !isBridge()) {\n            throw new Error(`Bridge not needed for browser`);\n        }\n\n        if (isSameDomain(win)) {\n            throw new Error(`Post message through bridge disabled between same domain windows`);\n        }\n\n        if (isSameTopWindow(window, win) !== false) {\n            throw new Error(`Can only use bridge to communicate between two different windows, not between frames`);\n        }\n\n        sendBridgeMessage(win, domain, serializedMessage);\n    };\n}\n\nif (__POST_ROBOT__.__IE_POPUP_SUPPORT__ || __POST_ROBOT__.__GLOBAL_MESSAGE_SUPPORT__) {\n    \n    SEND_MESSAGE_STRATEGIES[SEND_STRATEGY.GLOBAL] = (win : CrossDomainWindowType, serializedMessage : string) => {\n\n        if (!needsGlobalMessagingForBrowser()) {\n            throw new Error(`Global messaging not needed for browser`);\n        }\n\n        if (!isSameDomain(win)) {\n            throw new Error(`Post message through global disabled between different domain windows`);\n        }\n\n        if (isSameTopWindow(window, win) !== false) {\n            throw new Error(`Can only use global to communicate between two different windows, not between frames`);\n        }\n\n        // $FlowFixMe\n        const foreignGlobal = getGlobal(win);\n\n        if (!foreignGlobal) {\n            throw new Error(`Can not find postRobot global on foreign window`);\n        }\n\n        foreignGlobal.receiveMessage({\n            source: window,\n            origin: getDomain(),\n            data:   serializedMessage\n        });\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isWindowClosed, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { stringifyError, noop } from 'belter/src';\n\nimport { serializeMessage } from '../../serialize';\nimport { windowStore, getGlobalKey } from '../../global';\nimport type { Message, PackedMessages } from '../types';\nimport type { OnType, SendType } from '../../types';\n\nimport { SEND_MESSAGE_STRATEGIES } from './strategies';\n\nfunction packMessages(messages : $ReadOnlyArray<Message>) : PackedMessages {\n    return {\n        [ getGlobalKey() ]: messages\n    };\n}\n\nexport function sendMessage(win : CrossDomainWindowType, domain : string, message : Message, { on, send } : {| on : OnType, send : SendType |}) : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        const messageBuffer = windowStore();\n\n        const domainBuffer = messageBuffer.getOrSet(win, () => ({}));\n\n        domainBuffer.buffer = domainBuffer.buffer || [];\n        domainBuffer.buffer.push(message);\n\n        domainBuffer.flush = domainBuffer.flush || ZalgoPromise.flush().then(() => {\n            if (isWindowClosed(win)) {\n                throw new Error('Window is closed');\n            }\n\n            const serializedMessage = serializeMessage(win, domain, packMessages(domainBuffer.buffer || []), { on, send });\n            delete domainBuffer.buffer;\n\n            const strategies = Object.keys(SEND_MESSAGE_STRATEGIES);\n            const errors = [];\n\n            for (const strategyName of strategies) {\n                try {\n                    SEND_MESSAGE_STRATEGIES[strategyName](win, serializedMessage, domain);\n                } catch (err) {\n                    errors.push(err);\n                }\n            }\n\n            if (errors.length === strategies.length) {\n                throw new Error(`All post-robot messaging strategies failed:\\n\\n${ errors.map((err, i) => `${ i }. ${ stringifyError(err) }`).join('\\n\\n') }`);\n            }\n        });\n\n        return domainBuffer.flush.then(() => {\n            delete domainBuffer.flush;\n        });\n    }).then(noop);\n}\n","/* @flow */\n\nimport { type ZalgoPromise } from 'zalgo-promise/src';\nimport { matchDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { isRegex, getOrSet } from 'belter/src';\n\nimport { getWildcard, type WildCard, globalStore, windowStore } from '../global';\nimport { WILDCARD } from '../conf';\n\nexport function resetListeners() {\n    const responseListeners = globalStore('responseListeners');\n    const erroredResponseListeners = globalStore('erroredResponseListeners');\n    responseListeners.reset();\n    erroredResponseListeners.reset();\n}\n\nconst __DOMAIN_REGEX__ = '__domain_regex__';\n\nexport type RequestListenerType = {|\n    handler : ({| source : CrossDomainWindowType, origin : string, data : mixed |}) => (mixed | ZalgoPromise<mixed>),\n    handleError : (err : mixed) => void,\n    window : ?CrossDomainWindowType,\n    name : string,\n    domain : DomainMatcher\n|};\n\nexport type ResponseListenerType = {|\n    name : string,\n    win : CrossDomainWindowType,\n    domain : DomainMatcher,\n    promise : ZalgoPromise<*>,\n    ack? : ?boolean,\n    cancelled? : ?boolean\n|};\n\nexport function addResponseListener(hash : string, listener : ResponseListenerType) {\n    const responseListeners = globalStore('responseListeners');\n    responseListeners.set(hash, listener);\n}\n\nexport function getResponseListener(hash : string) : ?ResponseListenerType {\n    const responseListeners = globalStore('responseListeners');\n    return responseListeners.get(hash);\n}\n\nexport function deleteResponseListener(hash : string) {\n    const responseListeners = globalStore('responseListeners');\n    responseListeners.del(hash);\n}\n\nexport function cancelResponseListeners() {\n    const responseListeners = globalStore('responseListeners');\n    for (const hash of responseListeners.keys()) {\n        const listener = responseListeners.get(hash);\n        if (listener) {\n            listener.cancelled = true;\n        }\n        responseListeners.del(hash);\n    }\n}\n\nexport function markResponseListenerErrored(hash : string) {\n    const erroredResponseListeners = globalStore('erroredResponseListeners');\n    erroredResponseListeners.set(hash, true);\n}\n\nexport function isResponseListenerErrored(hash : string) : boolean {\n    const erroredResponseListeners = globalStore('erroredResponseListeners');\n    return erroredResponseListeners.has(hash);\n}\n\nexport function getRequestListener({ name, win, domain } : {| name : string, win : ?(CrossDomainWindowType | WildCard), domain : ?(string | RegExp) |}) : ?RequestListenerType {\n    const requestListeners = windowStore('requestListeners');\n\n    if (win === WILDCARD) {\n        win = null;\n    }\n\n    if (domain === WILDCARD) {\n        domain = null;\n    }\n\n    if (!name) {\n        throw new Error(`Name required to get request listener`);\n    }\n\n    for (const winQualifier of [ win, getWildcard() ]) {\n        if (!winQualifier) {\n            continue;\n        }\n\n        const nameListeners = requestListeners.get(winQualifier);\n\n        if (!nameListeners) {\n            continue;\n        }\n\n        const domainListeners = nameListeners[name];\n\n        if (!domainListeners) {\n            continue;\n        }\n\n        if (domain && typeof domain === 'string') {\n            if (domainListeners[domain]) {\n                return domainListeners[domain];\n            }\n\n            if (domainListeners[__DOMAIN_REGEX__]) {\n                for (const { regex, listener } of domainListeners[__DOMAIN_REGEX__]) {\n                    if (matchDomain(regex, domain)) {\n                        return listener;\n                    }\n                }\n            }\n        }\n\n        if (domainListeners[WILDCARD]) {\n            return domainListeners[WILDCARD];\n        }\n    }\n}\n\nexport function addRequestListener({ name, win, domain } : {| name : string, win : ?(CrossDomainWindowType | WildCard), domain : ?DomainMatcher |}, listener : RequestListenerType) : {| cancel : () => void |} {\n    const requestListeners = windowStore('requestListeners');\n\n    if (!name || typeof name !== 'string') {\n        throw new Error(`Name required to add request listener`);\n    }\n\n    if (Array.isArray(win)) {\n        const listenersCollection = [];\n\n        for (const item of win) {\n            listenersCollection.push(addRequestListener({ name, domain, win: item }, listener));\n        }\n\n        return {\n            cancel() {\n                for (const cancelListener of listenersCollection) {\n                    cancelListener.cancel();\n                }\n            }\n        };\n    }\n\n    if (Array.isArray(domain)) {\n        const listenersCollection = [];\n\n        for (const item of domain) {\n            listenersCollection.push(addRequestListener({ name, win, domain: item }, listener));\n        }\n\n        return {\n            cancel() {\n                for (const cancelListener of listenersCollection) {\n                    cancelListener.cancel();\n                }\n            }\n        };\n    }\n\n    const existingListener = getRequestListener({ name, win, domain });\n\n    if (!win || win === WILDCARD) {\n        win = getWildcard();\n    }\n\n    domain = domain || WILDCARD;\n\n    if (existingListener) {\n        if (win && domain) {\n            throw new Error(`Request listener already exists for ${ name } on domain ${ domain.toString() } for ${ win === getWildcard() ? 'wildcard' : 'specified' } window`);\n        } else if (win) {\n            throw new Error(`Request listener already exists for ${ name } for ${ win === getWildcard() ? 'wildcard' : 'specified' } window`);\n        } else if (domain) {\n            throw new Error(`Request listener already exists for ${ name } on domain ${ domain.toString() }`);\n        } else {\n            throw new Error(`Request listener already exists for ${ name }`);\n        }\n    }\n\n    const nameListeners = requestListeners.getOrSet(win, () => ({}));\n    const domainListeners = getOrSet(nameListeners, name, () => ({}));\n\n    const strDomain = domain.toString();\n\n    let regexListeners;\n    let regexListener;\n\n    if (isRegex(domain)) {\n        regexListeners = getOrSet(domainListeners, __DOMAIN_REGEX__, () => []);\n        regexListener = { regex: domain, listener };\n        regexListeners.push(regexListener);\n    } else {\n        domainListeners[strDomain] = listener;\n    }\n\n    return {\n        cancel() {\n            delete domainListeners[strDomain];\n\n            if (regexListener) {\n                regexListeners.splice(regexListeners.indexOf(regexListener, 1));\n\n                if (!regexListeners.length) {\n                    delete domainListeners[__DOMAIN_REGEX__];\n                }\n            }\n\n            if (!Object.keys(domainListeners).length) {\n                delete nameListeners[name];\n            }\n\n            if (win && !Object.keys(nameListeners).length) {\n                requestListeners.del(win);\n            }\n        }\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { getDomain, isWindowClosed, matchDomain, stringifyDomainPattern, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { noop, stringifyError, uniqueID } from 'belter/src';\n\nimport { MESSAGE_TYPE, MESSAGE_ACK, MESSAGE_NAME } from '../../conf';\nimport { sendMessage } from '../send';\nimport { getRequestListener, getResponseListener, deleteResponseListener, isResponseListenerErrored } from '../listeners';\nimport type { RequestMessage, AckResponseMessage, ResponseMessage } from '../types';\nimport type { OnType, SendType } from '../../types';\n\nexport function handleRequest(source : CrossDomainWindowType, origin : string, message : RequestMessage, { on, send } : {| on : OnType, send : SendType |}) : ZalgoPromise<void> {\n\n    const options = getRequestListener({ name: message.name, win: source, domain: origin });\n\n    const logName = (message.name === MESSAGE_NAME.METHOD && message.data && typeof message.data.name === 'string') ? `${ message.data.name }()` : message.name;\n\n    if (__DEBUG__) {\n        // eslint-disable-next-line no-console\n        console.info('receive::req', logName, origin, '\\n\\n', message.data);\n    }\n\n    function sendAck() : ZalgoPromise<void> {\n        return ZalgoPromise.flush().then(() => {\n            if (message.fireAndForget || isWindowClosed(source)) {\n                return;\n            }\n\n            try {\n                return sendMessage(source, origin, {\n                    id:     uniqueID(),\n                    origin: getDomain(window),\n                    type:   MESSAGE_TYPE.ACK,\n                    hash:   message.hash,\n                    name:   message.name\n                }, { on, send });\n            } catch (err) {\n                throw new Error(`Send ack message failed for ${ logName } in ${ getDomain() }\\n\\n${ stringifyError(err) }`);\n            }\n        });\n    }\n\n\n    function sendResponse(ack : $Values<typeof MESSAGE_ACK>, data : ?Object, error : ?mixed) : ZalgoPromise<void> {\n        return ZalgoPromise.flush().then(() => {\n            if (message.fireAndForget || isWindowClosed(source)) {\n                return;\n            }\n\n            if (__DEBUG__) {\n                if (ack === MESSAGE_ACK.SUCCESS) {\n                    console.info('respond::res', logName, origin, '\\n\\n', data);  // eslint-disable-line no-console\n                } else if (ack === MESSAGE_ACK.ERROR) {\n                    console.error('respond::err', logName, origin, '\\n\\n', error); // eslint-disable-line no-console\n                }\n            }\n\n            try {\n                return sendMessage(source, origin, {\n                    id:     uniqueID(),\n                    origin: getDomain(window),\n                    type:   MESSAGE_TYPE.RESPONSE,\n                    hash:   message.hash,\n                    name:   message.name,\n                    ack,\n                    data,\n                    error\n                }, { on, send });\n            } catch (err) {\n                throw new Error(`Send response message failed for ${ logName } in ${ getDomain() }\\n\\n${ stringifyError(err) }`);\n            }\n        });\n    }\n\n    \n    return ZalgoPromise.all([\n        sendAck(),\n\n        ZalgoPromise.try(() => {\n\n            if (!options) {\n                throw new Error(`No handler found for post message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n            }\n\n            if (!matchDomain(options.domain, origin)) {\n                throw new Error(`Request origin ${ origin } does not match domain ${ options.domain.toString() }`);\n            }\n\n            const data = message.data;\n\n            return options.handler({ source, origin, data });\n\n        }).then(data => {\n            return sendResponse(MESSAGE_ACK.SUCCESS, data);\n\n        }, error => {\n            return sendResponse(MESSAGE_ACK.ERROR, null, error);\n        })\n\n    ]).then(noop).catch(err => {\n        if (options && options.handleError) {\n            return options.handleError(err);\n        } else {\n            throw err;\n        }\n    });\n}\n\nexport function handleAck(source : CrossDomainWindowType, origin : string, message : AckResponseMessage) {\n\n    if (isResponseListenerErrored(message.hash)) {\n        return;\n    }\n\n    const options = getResponseListener(message.hash);\n\n    if (!options) {\n        throw new Error(`No handler found for post message ack for message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n    }\n\n    try {\n        if (!matchDomain(options.domain, origin)) {\n            throw new Error(`Ack origin ${ origin } does not match domain ${ options.domain.toString() }`);\n        }\n    \n        if (source !== options.win) {\n            throw new Error(`Ack source does not match registered window`);\n        }\n    } catch (err) {\n        options.promise.reject(err);\n    }\n\n    options.ack = true;\n}\n\nexport function handleResponse(source : CrossDomainWindowType, origin : string, message : ResponseMessage) : void | ZalgoPromise<void> {\n\n    if (isResponseListenerErrored(message.hash)) {\n        return;\n    }\n\n    const options = getResponseListener(message.hash);\n\n    if (!options) {\n        throw new Error(`No handler found for post message response for message: ${ message.name } from ${ origin } in ${ window.location.protocol }//${ window.location.host }${ window.location.pathname }`);\n    }\n\n    if (!matchDomain(options.domain, origin)) {\n        throw new Error(`Response origin ${ origin } does not match domain ${ stringifyDomainPattern(options.domain) }`);\n    }\n\n    if (source !== options.win) {\n        throw new Error(`Response source does not match registered window`);\n    }\n\n    deleteResponseListener(message.hash);\n\n    const logName = (message.name === MESSAGE_NAME.METHOD && message.data && typeof message.data.name === 'string') ? `${ message.data.name }()` : message.name;\n\n    if (message.ack === MESSAGE_ACK.ERROR) {\n        if (__DEBUG__) {\n            console.error('receive::err', logName, origin, '\\n\\n', message.error); // eslint-disable-line no-console\n        }\n\n        options.promise.reject(message.error);\n\n    } else if (message.ack === MESSAGE_ACK.SUCCESS) {\n        if (__DEBUG__) {\n            console.info('receive::res', logName, origin, '\\n\\n', message.data); // eslint-disable-line no-console\n        }\n\n        options.promise.resolve({ source, origin, data: message.data });\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isWindowClosed, type CrossDomainWindowType, getDomain, isSameTopWindow, PROTOCOL  } from 'cross-domain-utils/src';\nimport { addEventListener, noop } from 'belter/src';\n\nimport type { Message } from '../types';\nimport { MESSAGE_TYPE } from '../../conf';\nimport { markWindowKnown, needsGlobalMessagingForBrowser } from '../../lib';\nimport { deserializeMessage } from '../../serialize';\nimport { getGlobal, globalStore, getGlobalKey } from '../../global';\nimport type { OnType, SendType, MessageEvent, CancelableType } from '../../types';\n\nimport { handleRequest, handleResponse, handleAck } from './types';\n\nfunction deserializeMessages(message : string, source : CrossDomainWindowType, origin : string, { on, send } : {| on : OnType, send : SendType |}) : ?$ReadOnlyArray<Message> {\n    let parsedMessage;\n\n    try {\n        parsedMessage = deserializeMessage(source, origin, message, { on, send });\n    } catch (err) {\n        return;\n    }\n\n    if (!parsedMessage) {\n        return;\n    }\n\n    if (typeof parsedMessage !== 'object' || parsedMessage === null) {\n        return;\n    }\n\n    const parseMessages = parsedMessage[getGlobalKey()];\n\n    if (!Array.isArray(parseMessages)) {\n        return;\n    }\n\n    return parseMessages;\n}\n\nexport function receiveMessage(event : MessageEvent, { on, send } : {| on : OnType, send : SendType |}) {\n    const receivedMessages = globalStore('receivedMessages');\n\n    try {\n        if (!window || window.closed || !event.source) {\n            return;\n        }\n    } catch (err) {\n        return;\n    }\n\n    let { source, origin, data } = event;\n\n    if (__TEST__) {\n        if (isWindowClosed(source)) {\n            return;\n        }\n\n        // $FlowFixMe\n        origin = getDomain(source);\n    }\n\n    const messages = deserializeMessages(data, source, origin, { on, send });\n\n    if (!messages) {\n        return;\n    }\n\n    markWindowKnown(source);\n\n    for (const message of messages) {\n        if (receivedMessages.has(message.id)) {\n            return;\n        }\n\n        receivedMessages.set(message.id, true);\n\n        if (isWindowClosed(source) && !message.fireAndForget) {\n            return;\n        }\n\n        if (message.origin.indexOf(PROTOCOL.FILE) === 0) {\n            origin = `${ PROTOCOL.FILE }//`;\n        }\n\n        try {\n            if (message.type === MESSAGE_TYPE.REQUEST) {\n                handleRequest(source, origin, message, { on, send });\n            } else if (message.type === MESSAGE_TYPE.RESPONSE) {\n                handleResponse(source, origin, message);\n            } else if (message.type === MESSAGE_TYPE.ACK) {\n                handleAck(source, origin, message);\n            }\n        } catch (err) {\n            setTimeout(() => {\n                throw err;\n            }, 0);\n        }\n    }\n}\n\nexport function setupGlobalReceiveMessage({ on, send } : {| on : OnType, send : SendType |}) {\n    const global = getGlobal();\n    global.receiveMessage = global.receiveMessage || (message => receiveMessage(message, { on, send }));\n}\n\ntype ListenerEvent = {|\n    source : CrossDomainWindowType,\n    origin : string,\n    data : string,\n    sourceElement : CrossDomainWindowType,\n    originalEvent? : {| origin : string |}\n|};\n\nexport function messageListener(event : ListenerEvent, { on, send } : {| on : OnType, send : SendType |}) {\n    ZalgoPromise.try(() => {\n        try {\n            noop(event.source);\n        } catch (err) {\n            return;\n        }\n\n        const source = event.source || event.sourceElement;\n        let origin = event.origin || (event.originalEvent && event.originalEvent.origin);\n        const data = event.data;\n\n        if (origin === 'null') {\n            origin = `${ PROTOCOL.FILE }//`;\n        }\n\n        if (!source) {\n            return;\n        }\n\n        if (!origin) {\n            throw new Error(`Post message did not have origin domain`);\n        }\n\n        if (__TEST__) {\n            if (needsGlobalMessagingForBrowser() && isSameTopWindow(source, window) === false) {\n                return;\n            }\n        }\n\n        receiveMessage({ source, origin, data }, { on, send });\n    });\n}\n\nexport function listenForMessages({ on, send } : {| on : OnType, send : SendType |}) : CancelableType {\n    return globalStore().getOrSet('postMessageListener', () => {\n        return addEventListener(window, 'message', event => {\n            // $FlowFixMe\n            messageListener(event, { on, send });\n        });\n    });\n}\n\nexport function stopListenForMessages() {\n    const listener = globalStore().get('postMessageListener');\n    if (listener) {\n        listener.cancel();\n    }\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\n\nimport { addRequestListener, type RequestListenerType } from '../drivers';\nimport { WILDCARD } from '../conf';\nimport type { ServerOptionsType, HandlerType, CancelableType } from '../types';\n\nconst getDefaultServerOptions = () : ServerOptionsType => {\n    // $FlowFixMe\n    return {};\n};\n\nexport function on(name : string, options : ServerOptionsType | HandlerType, handler : ?HandlerType) : CancelableType {\n\n    if (!name) {\n        throw new Error('Expected name');\n    }\n\n    options = options || getDefaultServerOptions();\n    if (typeof options === 'function') {\n        handler = options;\n        options = getDefaultServerOptions();\n    }\n\n    if (!handler) {\n        throw new Error('Expected handler');\n    }\n\n    options = options || {};\n    options.name = name;\n    options.handler = handler || options.handler;\n\n    const win = options.window;\n    const domain = options.domain;\n\n    const listenerOptions : RequestListenerType = {\n        handler:     options.handler,\n        handleError: options.errorHandler || (err => {\n            throw err;\n        }),\n        window: win,\n        domain: domain || WILDCARD,\n        name\n    };\n\n    const requestListener = addRequestListener({ name, win, domain }, listenerOptions);\n\n    return {\n        cancel() {\n            requestListener.cancel();\n        }\n    };\n}\n\ntype CancelableZalgoPromise<T> = ZalgoPromise<T> & {|\n    cancel : () => void\n|};\n\nexport function once(name : string, options? : ServerOptionsType | HandlerType, handler? : HandlerType) : CancelableZalgoPromise<{| source : mixed, origin : string, data : Object |}> {\n    \n    options = options || getDefaultServerOptions();\n    if (typeof options === 'function') {\n        handler = options;\n        options = getDefaultServerOptions();\n    }\n\n    const promise = new ZalgoPromise();\n    let listener; // eslint-disable-line prefer-const\n\n    options.errorHandler = (err) => {\n        listener.cancel();\n        promise.reject(err);\n    };\n\n    listener = on(name, options, event => {\n        listener.cancel();\n        promise.resolve(event);\n        if (handler) {\n            return handler(event);\n        }\n    });\n\n    // $FlowFixMe\n    promise.cancel = listener.cancel;\n\n    // $FlowFixMe\n    return promise;\n}\n","/* @flow */\n\nimport { getUserAgent } from 'cross-domain-utils/src';\n\nexport function needsGlobalMessagingForBrowser() : boolean {\n\n    if (getUserAgent(window).match(/MSIE|rv:11|trident|edge\\/12|edge\\/13/i)) {\n        return true;\n    }\n\n    return false;\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isAncestor, isWindowClosed, getDomain, matchDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { uniqueID, isRegex, noop, safeInterval, stringify, stringifyError } from 'belter/src';\n\n\nimport { CHILD_WINDOW_TIMEOUT, MESSAGE_TYPE, WILDCARD, MESSAGE_NAME, ACK_TIMEOUT, RES_TIMEOUT, ACK_TIMEOUT_KNOWN, RESPONSE_CYCLE_TIME } from '../conf';\nimport { sendMessage, addResponseListener, deleteResponseListener, markResponseListenerErrored, type ResponseListenerType } from '../drivers';\nimport { awaitWindowHello, sayHello, isWindowKnown } from '../lib';\nimport { windowStore } from '../global';\nimport type { SendType } from '../types';\n\nimport { on } from './on';\n\nfunction validateOptions(name : string, win : CrossDomainWindowType, domain : ?DomainMatcher) {\n    if (!name) {\n        throw new Error('Expected name');\n    }\n\n    if (domain) {\n        if (typeof domain !== 'string' && !Array.isArray(domain) && !isRegex(domain)) {\n            throw new TypeError(`Can not send ${ name }. Expected domain ${ JSON.stringify(domain) } to be a string, array, or regex`);\n        }\n    }\n\n    if (isWindowClosed(win)) {\n        throw new Error(`Can not send ${ name }. Target window is closed`);\n    }\n}\n\nfunction normalizeDomain(win : CrossDomainWindowType, targetDomain : DomainMatcher, actualDomain : ?string, { send } : {| send : SendType |}) : ZalgoPromise<string> {\n    return ZalgoPromise.try(() => {\n        if (typeof targetDomain === 'string') {\n            return targetDomain;\n        }\n\n        return ZalgoPromise.try(() => {\n            return actualDomain || sayHello(win, { send }).then(({ domain }) => domain);\n\n        }).then(normalizedDomain => {\n            if (!matchDomain(targetDomain, targetDomain)) {\n                throw new Error(`Domain ${ stringify(targetDomain) } does not match ${ stringify(targetDomain) }`);\n            }\n\n            return normalizedDomain;\n        });\n    });\n}\n\nexport const send : SendType = (win, name, data, options) => {\n    options = options || {};\n    const domainMatcher = options.domain || WILDCARD;\n    const responseTimeout = options.timeout || RES_TIMEOUT;\n    const childTimeout = options.timeout || CHILD_WINDOW_TIMEOUT;\n    const fireAndForget = options.fireAndForget || false;\n\n    // $FlowFixMe\n    return ZalgoPromise.try(() => {\n        validateOptions(name, win, domainMatcher);\n\n        if (isAncestor(window, win)) {\n            return awaitWindowHello(win, childTimeout);\n        }\n        \n    }).then(({ domain: actualDomain } = {}) => {\n\n        return normalizeDomain(win, domainMatcher, actualDomain, { send });\n    }).then(targetDomain => {\n        const domain = targetDomain;\n\n        const logName = (name === MESSAGE_NAME.METHOD && data && typeof data.name === 'string') ? `${ data.name }()` : name;\n\n        if (__DEBUG__) {\n            console.info('send::req', logName, domain, '\\n\\n', data); // eslint-disable-line no-console\n        }\n\n        const promise = new ZalgoPromise();\n        const hash = `${ name }_${ uniqueID() }`;\n\n        if (!fireAndForget) {\n            const responseListener : ResponseListenerType = { name, win, domain, promise };\n            addResponseListener(hash, responseListener);\n\n            const reqPromises = windowStore('requestPromises').getOrSet(win, () => []);\n            reqPromises.push(promise);\n\n            promise.catch(() => {\n                markResponseListenerErrored(hash);\n                deleteResponseListener(hash);\n            });\n\n            const totalAckTimeout = isWindowKnown(win) ? ACK_TIMEOUT_KNOWN : ACK_TIMEOUT;\n            const totalResTimeout = responseTimeout;\n\n            let ackTimeout = totalAckTimeout;\n            let resTimeout = totalResTimeout;\n        \n            const interval = safeInterval(() => {\n                if (isWindowClosed(win)) {\n                    return promise.reject(new Error(`Window closed for ${ name } before ${ responseListener.ack ? 'response' : 'ack' }`));\n                }\n\n                if (responseListener.cancelled) {\n                    return promise.reject(new Error(`Response listener was cancelled for ${ name }`));\n                }\n\n                ackTimeout = Math.max(ackTimeout - RESPONSE_CYCLE_TIME, 0);\n                if (resTimeout !== -1) {\n                    resTimeout = Math.max(resTimeout - RESPONSE_CYCLE_TIME, 0);\n                }\n\n                if (!responseListener.ack && ackTimeout === 0) {\n                    return promise.reject(new Error(`No ack for postMessage ${ logName } in ${ getDomain() } in ${ totalAckTimeout }ms`));\n\n                } else if (resTimeout === 0) {\n                    return promise.reject(new Error(`No response for postMessage ${ logName } in ${ getDomain() } in ${ totalResTimeout }ms`));\n                }\n            }, RESPONSE_CYCLE_TIME);\n\n            promise.finally(() => {\n                interval.cancel();\n                reqPromises.splice(reqPromises.indexOf(promise, 1));\n            }).catch(noop);\n        }\n\n        return sendMessage(win, domain, {\n            id:     uniqueID(),\n            origin: getDomain(window),\n            type:   MESSAGE_TYPE.REQUEST,\n            hash,\n            name,\n            data,\n            fireAndForget\n        }, { on, send }).then(() => {\n            return fireAndForget ? promise.resolve() : promise;\n        }, err => {\n            throw new Error(`Send request message failed for ${ logName } in ${ getDomain() }\\n\\n${ stringifyError(err) }`);\n        });\n    });\n};\n","/* @flow */\n\nexport const BRIDGE_TIMEOUT = 5000;\nexport const CHILD_WINDOW_TIMEOUT = 5000;\n\nexport const ACK_TIMEOUT = 2000;\nexport const ACK_TIMEOUT_KNOWN = 10000;\nexport const RES_TIMEOUT : number = __TEST__ ? 2000 : -1;\nexport const RESPONSE_CYCLE_TIME = 500;\n","/* @flow */\n\nimport type { CrossDomainWindowType, DomainMatcher } from 'cross-domain-utils/src';\n\nimport { initHello } from './lib';\nimport { listenForMessages, stopListenForMessages, receiveMessage, setupGlobalReceiveMessage, cancelResponseListeners } from './drivers';\nimport { getGlobal, deleteGlobal } from './global';\nimport { on, send } from './public';\nimport { setupBridge } from './bridge';\nimport { serializeMessage as internalSerializeMessage, deserializeMessage as internalDeserializeMessage, ProxyWindow } from './serialize';\n\nexport function serializeMessage<T>(destination : CrossDomainWindowType | ProxyWindow, domain : DomainMatcher, obj : T) : string {\n    return internalSerializeMessage(destination, domain, obj, { on, send });\n}\n\nexport function deserializeMessage<T : mixed>(source : CrossDomainWindowType | ProxyWindow, origin : string, message : string) : T {\n    return internalDeserializeMessage(source, origin, message, { on, send });\n}\n\nexport function createProxyWindow(win? : CrossDomainWindowType) : ProxyWindow {\n    return new ProxyWindow({ send, win });\n}\n\nexport function toProxyWindow(win : CrossDomainWindowType | ProxyWindow) : ProxyWindow {\n    return ProxyWindow.toProxyWindow(win, { send });\n}\n\nexport function setup() {\n    if (!getGlobal().initialized) {\n        getGlobal().initialized = true;\n    \n        setupGlobalReceiveMessage({ on, send });\n        listenForMessages({ on, send });\n    \n        if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n            setupBridge({ on, send, receiveMessage });\n        }\n\n        initHello({ on, send });\n    }\n}\n\nexport function destroy() {\n    cancelResponseListeners();\n    stopListenForMessages();\n    deleteGlobal();\n}\n","/* @flow */\n\nimport { isSameDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\nimport { getCurrentScriptUID } from 'belter/src';\n\nexport function getGlobalKey() : string {\n    if (__ZOID__.__SCRIPT_NAMESPACE__) {\n        return `${ __ZOID__.__GLOBAL_KEY__ }_${ getCurrentScriptUID() }`;\n    } else {\n        return __ZOID__.__GLOBAL_KEY__;\n    }\n}\n\nexport function getGlobal<T>(win : CrossDomainWindowType) : T {\n    const globalKey = getGlobalKey();\n\n    if (!isSameDomain(win)) {\n        throw new Error(`Can not get global for window on different domain`);\n    }\n\n    if (!win[globalKey]) {\n        win[globalKey] = {};\n    }\n\n    return win[globalKey];\n}\n\nexport function tryGlobal<T, R>(win : CrossDomainWindowType, handler : (T) => R) : ?R {\n    try {\n        return handler(getGlobal(win));\n    } catch (err) {\n        // pass\n    }\n}\n\nexport function destroyGlobal() {\n    const globalKey = getGlobalKey();\n    delete window[globalKey];\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { serializeMessage, deserializeMessage, toProxyWindow, type ProxyWindow } from 'post-robot/src';\nimport { uniqueID, base64encode, base64decode } from 'belter/src';\nimport type { CrossDomainWindowType, DomainMatcher } from 'cross-domain-utils/src';\n\nimport { getGlobal } from './global';\n\nexport type ProxyObject<T> = {|\n    get : () => ZalgoPromise<T>\n|};\n\nexport function getProxyObject<T>(obj : T) : ProxyObject<T> {\n    return {\n        get() : ZalgoPromise<T> {\n            return ZalgoPromise.try(() => {\n                // $FlowFixMe[object-this-reference]\n                if (this.source && this.source !== window) {\n                    throw new Error(`Can not call get on proxy object from a remote window`);\n                }\n    \n                return obj;\n            });\n        }\n    };\n}\n\nexport function basicSerialize<T>(data : T) : string {\n    return base64encode(JSON.stringify(data));\n}\n\nexport function basicDeserialize<T>(serializedData : string) : T {\n    return JSON.parse(base64decode(serializedData));\n}\n\nexport const REFERENCE_TYPE = {\n    UID: ('uid' : 'uid'),\n    RAW: ('raw' : 'raw')\n};\n\nexport type UIDReferenceType = {| type : typeof REFERENCE_TYPE.UID, uid : string |};\nexport type RawReferenceType<T> = {| type : typeof REFERENCE_TYPE.RAW, val : T |};\n\nexport type ReferenceType<T> =\n    UIDReferenceType |\n    RawReferenceType<T>;\n\nexport function getUIDRefStore<T>(win : CrossDomainWindowType) : { [string] : T } {\n    const global = getGlobal(win);\n    global.references = global.references || {};\n    return global.references;\n}\n\nexport function getUIDRef<T>(val : T) : ReferenceType<T> {\n    const uid = uniqueID();\n    const references = getUIDRefStore(window);\n    references[uid] = val;\n    return { type: REFERENCE_TYPE.UID, uid };\n}\n\nexport function getRawRef<T>(val : T) : ReferenceType<T> {\n    return { type: REFERENCE_TYPE.RAW, val };\n}\n\nexport function getRefValue<T>(win : CrossDomainWindowType, ref : ReferenceType<T>) : T {\n    if (ref.type === REFERENCE_TYPE.RAW) {\n        return ref.val;\n    }\n\n    if (ref.type === REFERENCE_TYPE.UID) {\n        const references = getUIDRefStore(win);\n        return references[ref.uid];\n    }\n\n    throw new Error(`Unsupported ref type: ${ ref.type }`);\n}\n\nexport function cleanupRef<T>(win : CrossDomainWindowType, ref : ReferenceType<T>) {\n    if (ref.type === REFERENCE_TYPE.UID) {\n        const references = getUIDRefStore(win);\n        delete references[ref.uid];\n    }\n}\n\ntype Message<T, M> = {|\n    sender : {|\n        domain : string\n    |},\n    metaData : M,\n    reference : ReferenceType<T>\n|};\n\ntype CrossDomainSerializeOptions<T, M> = {|\n    data : T,\n    metaData : M,\n    sender : {|\n        domain : string\n    |},\n    receiver : {|\n        win : ProxyWindow | CrossDomainWindowType,\n        domain : DomainMatcher\n    |},\n    passByReference? : boolean,\n    basic? : boolean\n|};\n\ntype CrossDomainSerializedMessage = {|\n    serializedData : string,\n    cleanReference : () => void\n|};\n\nexport function crossDomainSerialize<T, M>({ data, metaData, sender, receiver, passByReference = false, basic = false } : CrossDomainSerializeOptions<T, M>) : CrossDomainSerializedMessage {\n    const proxyWin = toProxyWindow(receiver.win);\n    const serializedMessage = basic\n        ? JSON.stringify(data)\n        : serializeMessage(proxyWin, receiver.domain, data);\n\n    const reference = passByReference\n        ? getUIDRef(serializedMessage)\n        : getRawRef(serializedMessage);\n\n    const message : Message<string, M> = {\n        sender: {\n            domain: sender.domain\n        },\n        metaData,\n        reference\n    };\n\n    const cleanReference = () => {\n        cleanupRef(window, reference);\n    };\n\n    return {\n        serializedData: basicSerialize(message),\n        cleanReference\n    };\n}\n\ntype CrossDomainDeserializeOptions<M> = {|\n    data : string,\n    sender : {|\n        win : CrossDomainWindowType | ({| metaData : M |}) => CrossDomainWindowType,\n        domain? : string | ({| metaData : M |}) => string\n    |},\n    basic? : boolean\n|};\n\ntype CrossDomainDeserializedMessage<T, M> = {|\n    data : T,\n    metaData : M,\n    sender : {|\n        domain : string,\n        win : CrossDomainWindowType\n    |},\n    reference : ReferenceType<string>\n|};\n\nexport function crossDomainDeserialize<T, M>({ data, sender, basic = false } : CrossDomainDeserializeOptions<M>) : CrossDomainDeserializedMessage<T, M> {\n    const message : Message<string, M> = basicDeserialize(data);\n\n    const { reference, metaData } = message;\n\n    let win;\n    if (typeof sender.win === 'function') {\n        win = sender.win({ metaData });\n    } else {\n        win = sender.win;\n    }\n\n    let domain;\n    if (typeof sender.domain === 'function') {\n        domain = sender.domain({ metaData });\n    } else if (typeof sender.domain === 'string') {\n        domain = sender.domain;\n    } else {\n        domain = message.sender.domain;\n    }\n\n    const serializedData = getRefValue(win, reference);\n    const deserializedData = basic\n        ? JSON.parse(serializedData)\n        : deserializeMessage(win, domain, serializedData);\n    \n    return {\n        data:   deserializedData,\n        metaData,\n        sender: { win, domain },\n        reference\n    };\n}\n","/* @flow */\n\nimport { WINDOW_TYPE } from 'cross-domain-utils/src';\n\nexport const ZOID = `zoid`;\n\nexport const POST_MESSAGE = {\n    DELEGATE:       `${ ZOID }_delegate`,\n    ALLOW_DELEGATE: `${ ZOID }_allow_delegate`\n};\n\nexport const PROP_TYPE = {\n    STRING:   ('string' : 'string'),\n    OBJECT:   ('object' : 'object'),\n    FUNCTION: ('function' : 'function'),\n    BOOLEAN:  ('boolean' : 'boolean'),\n    NUMBER:   ('number' : 'number'),\n    ARRAY:    ('array' : 'array')\n};\n\nexport const WINDOW_REFERENCE = {\n    OPENER: ('opener' : 'opener'),\n    PARENT: ('parent' : 'parent'),\n    GLOBAL: ('global' : 'global'),\n    NAME:   ('name' : 'name')\n};\n\nexport const PROP_SERIALIZATION = {\n    JSON:   ('json' : 'json'),\n    DOTIFY: ('dotify' : 'dotify'),\n    BASE64: ('base64' : 'base64')\n};\n\nexport const CONTEXT = WINDOW_TYPE;\n\nexport const WILDCARD = '*';\n\nexport const DEFAULT_DIMENSIONS = {\n    WIDTH:  '300px',\n    HEIGHT: '150px'\n};\n\nexport const EVENT = {\n    RENDER:   'zoid-render',\n    RENDERED: 'zoid-rendered',\n    DISPLAY:  'zoid-display',\n    ERROR:    'zoid-error',\n    CLOSE:    'zoid-close',\n    DESTROY:  'zoid-destroy',\n    PROPS:    'zoid-props',\n    RESIZE:   'zoid-resize',\n    FOCUS:    'zoid-focus'\n};\n\nexport const METHOD = {\n    GET:  ('get' : 'get'),\n    POST: ('post' : 'post')\n};\n","/* @flow */\n\nimport { assertExists, memoize } from 'belter/src';\nimport { isSameDomain, getOpener, getNthParentFromTop, getAncestor, getAllFramesInWindow, getParent, isTop,\n    findFrameByName, getDomain, assertSameDomain, type CrossDomainWindowType, getDistanceFromTop } from 'cross-domain-utils/src';\n\nimport { ZOID, WINDOW_REFERENCE } from '../constants';\nimport type { InitialChildPayload, WindowRef } from '../parent';\n\nimport { crossDomainDeserialize, crossDomainSerialize, REFERENCE_TYPE, type ReferenceType } from './serialize';\nimport { tryGlobal } from './global';\n\nfunction getWindowByRef(windowRef : WindowRef) : CrossDomainWindowType {\n    if (windowRef.type === WINDOW_REFERENCE.OPENER) {\n        return assertExists('opener', getOpener(window));\n\n    } else if (windowRef.type === WINDOW_REFERENCE.PARENT && typeof windowRef.distance === 'number') {\n        return assertExists('parent', getNthParentFromTop(window, windowRef.distance));\n\n    } else if (windowRef.type === WINDOW_REFERENCE.GLOBAL && windowRef.uid && typeof windowRef.uid === 'string') {\n        const { uid } = windowRef;\n        const ancestor = getAncestor(window);\n\n        if (!ancestor) {\n            throw new Error(`Can not find ancestor window`);\n        }\n\n        for (const frame of getAllFramesInWindow(ancestor)) {\n            if (isSameDomain(frame)) {\n                const win = tryGlobal(frame, global => global.windows && global.windows[uid]);\n\n                if (win) {\n                    return win;\n                }\n            }\n        }\n    } else if (windowRef.type === WINDOW_REFERENCE.NAME) {\n        const { name } = windowRef;\n        return assertExists('namedWindow', findFrameByName(assertExists('ancestor', getAncestor(window)), name));\n    }\n\n    throw new Error(`Unable to find ${ windowRef.type } parent component window`);\n}\n\nexport function buildChildWindowName({ name, serializedPayload } : {| name : string, serializedPayload : string |}) : string {\n    return `__${ ZOID }__${ name }__${ serializedPayload }__`;\n}\n\nfunction parseWindowName(windowName : string) : {| name : string, serializedInitialPayload : string |} {\n    if (!windowName) {\n        throw new Error(`No window name`);\n    }\n\n    const [ , zoidcomp, name, serializedInitialPayload ] = windowName.split('__');\n\n    if (zoidcomp !== ZOID) {\n        throw new Error(`Window not rendered by zoid - got ${ zoidcomp }`);\n    }\n\n    if (!name) {\n        throw new Error(`Expected component name`);\n    }\n\n    if (!serializedInitialPayload) {\n        throw new Error(`Expected serialized payload ref`);\n    }\n\n    return { name, serializedInitialPayload };\n}\n\nexport type InitialParentPayload<P, X> = {|\n    parent : {|\n        domain : string,\n        win : CrossDomainWindowType\n    |},\n    payload : InitialChildPayload<P, X>,\n    reference : ReferenceType<string>\n|};\n\nconst parseInitialParentPayload = memoize(<P, X>(windowName : string) : InitialParentPayload<P, X> => {\n    const { serializedInitialPayload } = parseWindowName(windowName);\n\n    const { data: payload, sender: parent, reference } = crossDomainDeserialize({\n        data:   serializedInitialPayload,\n        sender: {\n            win: ({ metaData: { windowRef } }) => getWindowByRef(windowRef)\n        }\n    });\n\n    return {\n        parent,\n        payload,\n        reference\n    };\n});\n\nexport function getInitialParentPayload<P, X>() : InitialParentPayload<P, X> {\n    return parseInitialParentPayload(window.name);\n}\n\nexport function isChildComponentWindow(name : string) : boolean {\n    try {\n        return parseWindowName(window.name).name === name;\n    } catch (err) {\n        // pass\n    }\n\n    return false;\n}\n\nexport function getWindowRef(targetWindow : CrossDomainWindowType, currentWindow? : CrossDomainWindowType = window) : ?WindowRef {\n    if (targetWindow === getParent(currentWindow)) {\n        return { type: WINDOW_REFERENCE.PARENT, distance: getDistanceFromTop(targetWindow) };\n    }\n\n    if (targetWindow === getOpener(currentWindow)) {\n        return { type: WINDOW_REFERENCE.OPENER };\n    }\n\n    if (isSameDomain(targetWindow) && !isTop(targetWindow)) {\n        const windowName = assertSameDomain(targetWindow).name;\n        if (windowName) {\n            return { type: WINDOW_REFERENCE.NAME, name: windowName };\n        }\n    }\n}\n\ntype UpdateChildWindowNameWithRefOptions = {|\n    componentName : string,\n    parentComponentWindow : CrossDomainWindowType\n|};\n\nexport function updateChildWindowNameWithRef({ componentName, parentComponentWindow } : UpdateChildWindowNameWithRefOptions) {\n    const { serializedInitialPayload } = parseWindowName(window.name);\n\n    const { data, sender, reference, metaData } = crossDomainDeserialize({\n        data:   serializedInitialPayload,\n        sender: {\n            win: parentComponentWindow\n        },\n        basic: true\n    });\n\n    if (reference.type === REFERENCE_TYPE.UID || metaData.windowRef.type === WINDOW_REFERENCE.GLOBAL) {\n        const windowRef = getWindowRef(parentComponentWindow);\n\n        const { serializedData: serializedPayload } = crossDomainSerialize({\n            data,\n            metaData: {\n                windowRef\n            },\n            sender: {\n                domain: sender.domain\n            },\n            receiver: {\n                win:    window,\n                domain: getDomain()\n            },\n            basic: true\n        });\n\n        window.name = buildChildWindowName({\n            name:              componentName,\n            serializedPayload\n        });\n    }\n}\n","/* @flow */\n\nimport { getDomain, isSameDomain, type CrossDomainWindowType } from 'cross-domain-utils/src';\n\nimport type { PropsDefinitionType, PropsType, ChildPropsType } from '../component/props';\n\nimport type { ChildHelpers } from './index';\n\n// $FlowFixMe\nexport function normalizeChildProp<P, T, X>(propsDef : PropsDefinitionType<P, X>, props : PropsType<P>, key : string, value : ?T, helpers : ChildHelpers<P, X>) : ?T  {\n    if (!propsDef.hasOwnProperty(key)) {\n        return value;\n    }\n\n    const prop = propsDef[key];\n\n    if (typeof prop.childDecorate === 'function') {\n        const { uid, tag, close, focus, onError, onProps, resize, getParent, getParentDomain, show, hide, export: xport, getSiblings } = helpers;\n        const decoratedValue = prop.childDecorate({ value, uid, tag, close, focus, onError, onProps, resize, getParent, getParentDomain, show, hide, export: xport, getSiblings });\n\n        // $FlowFixMe\n        return decoratedValue;\n    }\n\n    return value;\n}\n\n// eslint-disable-next-line max-params\nexport function normalizeChildProps<P, X>(parentComponentWindow : CrossDomainWindowType, propsDef : PropsDefinitionType<P, X>, props : PropsType<P>, origin : string, helpers : ChildHelpers<P, X>, isUpdate : boolean = false) : ChildPropsType<P, X> {\n\n    const result = {};\n\n    for (const key of Object.keys(props)) {\n        const prop = propsDef[key];\n\n        if (prop && prop.sameDomain && (origin !== getDomain(window) || !isSameDomain(parentComponentWindow))) {\n            continue;\n        }\n\n        // $FlowFixMe\n        const value = normalizeChildProp(propsDef, props, key, props[key], helpers);\n\n        result[key] = value;\n        if (prop && prop.alias && !result[prop.alias]) {\n            result[prop.alias] = value;\n        }\n    }\n\n    if (!isUpdate) {\n        for (const key of Object.keys(propsDef)) {\n            if (!props.hasOwnProperty(key)) {\n                result[key] = normalizeChildProp(propsDef, props, key, undefined, helpers);\n            }\n        }\n    }\n\n    // $FlowFixMe\n    return result;\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { isSameDomain, matchDomain, getAllFramesInWindow, type CrossDomainWindowType,\n    onCloseWindow, assertSameDomain } from 'cross-domain-utils/src';\nimport { markWindowKnown, type CrossDomainFunctionType } from 'post-robot/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { extend, onResize, elementReady, noop } from 'belter/src';\n\nimport { getGlobal, tryGlobal, getInitialParentPayload, updateChildWindowNameWithRef } from '../lib';\nimport { CONTEXT } from '../constants';\nimport type { NormalizedComponentOptionsType, getSiblingsPropType } from '../component';\nimport type { PropsType, ChildPropsType } from '../component/props';\nimport type { StringMatcherType } from '../types';\n\nimport { normalizeChildProps } from './props';\n\nexport type ChildExportsType<P> = {|\n    updateProps : CrossDomainFunctionType<[ PropsType<P> ], void>,\n    close : CrossDomainFunctionType<[], void>\n|};\n\nexport type ChildHelpers<P, X> = {|\n    uid : string,\n    tag : string,\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    resize : ({| width : ?number, height : ?number |}) => ZalgoPromise<void>,\n    onError : (mixed) => ZalgoPromise<void>,\n    onProps : ((PropsType<P>) => void) => {| cancel : () => void |},\n    getParent : () => CrossDomainWindowType,\n    getParentDomain : () => string,\n    show : () => ZalgoPromise<void>,\n    hide : () => ZalgoPromise<void>,\n    export : (X) => ZalgoPromise<void>,\n    getSiblings : getSiblingsPropType\n|};\n\nfunction checkParentDomain(allowedParentDomains : StringMatcherType, domain : string) {\n    if (!matchDomain(allowedParentDomains, domain)) {\n        throw new Error(`Can not be rendered by domain: ${ domain }`);\n    }\n}\n\nfunction focus() : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        window.focus();\n    });\n}\n\nfunction destroy() : ZalgoPromise<void> {\n    return ZalgoPromise.try(() => {\n        window.close();\n    });\n}\n\nexport type ChildComponent<P, X> = {|\n    getProps : () => ChildPropsType<P, X>,\n    init : () => ZalgoPromise<void>\n|};\n\nexport function childComponent<P, X, C>(options : NormalizedComponentOptionsType<P, X, C>) : ChildComponent<P, X> {\n    const { tag, propsDef, autoResize, allowedParentDomains } = options;\n\n    const onPropHandlers = [];\n\n    const { parent, payload } = getInitialParentPayload();\n    const { win: parentComponentWindow, domain: parentDomain } = parent;\n\n    let props : ChildPropsType<P, X>;\n    const exportsPromise = new ZalgoPromise();\n\n    const { version, uid, exports: parentExports, context, props: initialProps } = payload;\n\n    if (version !== __ZOID__.__VERSION__) {\n        throw new Error(`Parent window has zoid version ${ version }, child window has version ${ __ZOID__.__VERSION__ }`);\n    }\n\n    const { show, hide, close, onError, checkClose, export: parentExport, resize: parentResize, init: parentInit } = parentExports;\n\n    const getParent = () => parentComponentWindow;\n    const getParentDomain = () => parentDomain;\n    \n    const onProps = (handler : Function) => {\n        onPropHandlers.push(handler);\n        return {\n            cancel: () => {\n                onPropHandlers.splice(onPropHandlers.indexOf(handler), 1);\n            }\n        };\n    };\n\n    const resize = ({ width, height } : {| width : ?number, height : ?number |}) : ZalgoPromise<void> => {\n        return parentResize.fireAndForget({ width, height });\n    };\n\n    const xport = (xports : X) : ZalgoPromise<void> => {\n        exportsPromise.resolve(xports);\n        return parentExport(xports);\n    };\n\n    const getSiblings = ({ anyParent } = {}) => {\n        const result = [];\n        const currentParent = props.parent;\n\n        if (typeof anyParent === 'undefined') {\n            anyParent = !currentParent;\n        }\n\n        if (!anyParent && !currentParent) {\n            throw new Error(`No parent found for ${ tag } child`);\n        }\n\n        for (const win of getAllFramesInWindow(window)) {\n            if (!isSameDomain(win)) {\n                continue;\n            }\n\n            const xprops : ChildPropsType<mixed, mixed> = assertSameDomain(win).xprops;\n\n            if (!xprops || getParent() !== xprops.getParent()) {\n                continue;\n            }\n\n            const winParent = xprops.parent;\n\n            if (!anyParent && currentParent) {\n                if (!winParent || winParent.uid !== currentParent.uid) {\n                    continue;\n                }\n            }\n\n            const xports = tryGlobal(win, global => global.exports);\n\n            result.push({\n                props:   xprops,\n                exports: xports\n            });\n        }\n\n        return result;\n    };\n\n    const getHelpers = () : ChildHelpers<P, X> => {\n        return {\n            tag, show, hide, close, focus, onError, resize, getSiblings,\n            onProps, getParent, getParentDomain, uid, export: xport\n        };\n    };\n\n    const watchForClose = () => {\n        window.addEventListener('beforeunload', () => {\n            checkClose.fireAndForget();\n        });\n\n        window.addEventListener('unload', () => {\n            checkClose.fireAndForget();\n        });\n\n        onCloseWindow(parentComponentWindow, () => {\n            destroy();\n        });\n    };\n\n    const setProps = (newProps : PropsType<P>, origin : string, isUpdate : boolean = false) => {\n        const helpers = getHelpers();\n        const normalizedProps = normalizeChildProps(parentComponentWindow, propsDef, newProps, origin, helpers, isUpdate);\n\n        if (props) {\n            extend(props, normalizedProps);\n        } else {\n            props = normalizedProps;\n        }\n\n        for (const handler of onPropHandlers) {\n            handler(props);\n        }\n    };\n    \n    const getAutoResize = () : ZalgoPromise<{| width : boolean, height : boolean, element : ?HTMLElement |}> => {\n        const { width = false, height = false, element: elementRef = 'body' } = autoResize;\n        return elementReady(elementRef).catch(noop).then(element => {\n            return { width, height, element };\n        });\n    };\n\n    const watchForResize = () : ?ZalgoPromise<void> => {\n        return getAutoResize().then(({ width, height, element }) => {\n            if (!element || (!width && !height) || context === CONTEXT.POPUP) {\n                return;\n            }\n\n            onResize(element, ({ width: newWidth, height: newHeight }) => {\n                resize({\n                    width:  width ? newWidth : undefined,\n                    height: height ? newHeight : undefined\n                });\n            }, { width, height });\n        });\n    };\n\n    const updateProps = (newProps : (PropsType<P>)) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => setProps(newProps, parentDomain, true));\n    };\n\n    const init = () => {\n        return ZalgoPromise.try(() => {\n            if (isSameDomain(parentComponentWindow)) {\n                updateChildWindowNameWithRef({\n                    componentName: options.name,\n                    parentComponentWindow\n                });\n            }\n\n            getGlobal(window).exports = options.exports({\n                getExports: () => exportsPromise\n            });\n\n            checkParentDomain(allowedParentDomains, parentDomain);\n            markWindowKnown(parentComponentWindow);\n            watchForClose();\n\n            return parentInit({ updateProps, close: destroy });\n    \n        }).then(() => {\n            return watchForResize();\n    \n        }).catch(err => {\n            onError(err);\n        });\n    };\n\n    const getProps = () => {\n        if (props) {\n            return props;\n        } else {\n            setProps(initialProps, parentDomain);\n            return props;\n        }\n    };\n\n    return {\n        init,\n        getProps\n    };\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { once, noop, type EventEmitterType } from 'belter/src';\nimport { isWindow, type CrossDomainWindowType, isWindowClosed, isSameDomain } from 'cross-domain-utils/src';\nimport { ProxyWindow, toProxyWindow } from 'post-robot/src';\n\nimport type { CssDimensionsType } from '../types';\nimport { PROP_SERIALIZATION, PROP_TYPE } from '../constants';\n\nexport type EventHandlerType<T> = (T) => void | ZalgoPromise<void>;\nexport type Sibling = {|\n    props : mixed,\n    exports : mixed\n|};\n\nexport type timeoutPropType = number;\nexport type windowPropType = CrossDomainWindowType | ProxyWindow;\nexport type cspNoncePropType = string;\nexport type uidPropType = string;\nexport type tagPropType = string;\nexport type closePropType = () => ZalgoPromise<void>;\nexport type focusPropType = () => ZalgoPromise<void>;\nexport type showPropType = () => ZalgoPromise<void>;\nexport type exportPropType<X> = (X) => ZalgoPromise<void>;\nexport type getSiblingsPropType = (opts? : {| anyParent? : boolean |}) => $ReadOnlyArray<Sibling>;\nexport type hidePropType = () => ZalgoPromise<void>;\nexport type resizePropType = ({| width : ?number, height : ?number |}) => ZalgoPromise<void>;\nexport type getParentPropType = () => CrossDomainWindowType;\nexport type getParentDomainPropType = () => string;\n\nexport type onDisplayPropType = EventHandlerType<void>;\nexport type onRenderedPropType = EventHandlerType<void>;\nexport type onRenderPropType = EventHandlerType<void>;\nexport type onClosePropType = EventHandlerType<void>;\nexport type onDestroyPropType = EventHandlerType<void>;\nexport type onResizePropType = EventHandlerType<void>;\nexport type onFocusPropType = EventHandlerType<void>;\nexport type onErrorPropType = EventHandlerType<mixed>;\nexport type onPropsPropType<P> = ((PropsType<P>) => void) => {| cancel : () => void |}; // eslint-disable-line no-use-before-define\n\nexport type ParentPropType<P, X> = {|\n    uid : string,\n    // eslint-disable-next-line no-use-before-define\n    props : PropsType<P>,\n    export : exportPropType<X>\n|};\n\nexport type PropsInputType<P> = {|\n    parent? : ParentPropType<mixed, mixed>,\n    \n    timeout? : timeoutPropType,\n    window? : windowPropType,\n    cspNonce? : ?cspNoncePropType,\n\n    onDisplay? : onDisplayPropType,\n    onRendered? : onRenderedPropType,\n    onRender? : onRenderPropType,\n    onClose? : onClosePropType,\n    onDestroy? : onDestroyPropType,\n    onResize? : onResizePropType,\n    onFocus? : onFocusPropType,\n    onError? : onErrorPropType,\n    onProps? : onPropsPropType<P>,\n\n    ...P\n|};\n\nexport type PropsType<P> = {|\n    timeout? : timeoutPropType,\n    window? : ?windowPropType,\n    cspNonce? : ?cspNoncePropType,\n    dimensions : CssDimensionsType,\n\n    onDisplay : onDisplayPropType,\n    onRendered : onRenderedPropType,\n    onRender : onRenderPropType,\n    onClose : onClosePropType,\n    onDestroy : onDestroyPropType,\n    onResize : onResizePropType,\n    onFocus : onFocusPropType,\n    onError : onErrorPropType,\n    onProps : onPropsPropType<P>,\n    \n    ...P\n|};\n\ntype onErrorChildPropType = (mixed) => ZalgoPromise<void>;\n\nexport type ChildPropsType<P, X> = {|\n    ...PropsType<P>,\n\n    parent? : ParentPropType<mixed, mixed>,\n    uid : uidPropType,\n    tag : tagPropType,\n    close : closePropType,\n    focus : focusPropType,\n    show : showPropType,\n    hide : hidePropType,\n    export : exportPropType<X>,\n    getParent : getParentPropType,\n    getParentDomain : getParentDomainPropType,\n    resize : resizePropType,\n    onError : onErrorChildPropType,\n    onProps : onPropsPropType<P>,\n    getSiblings : getSiblingsPropType\n|};\n\nexport type PropDefinitionType<T, P, S : $Values<typeof PROP_TYPE>, X> = {|\n    type : S,\n    alias? : string,\n    value? : ({|\n        props : P,\n        state : Object,\n        close : () => ZalgoPromise<void>,\n        focus : () => ZalgoPromise<void>,\n        onError : (mixed) => ZalgoPromise<void>,\n        container : HTMLElement | void,\n        event : EventEmitterType\n    |}) => ?T,\n    default? : ({|\n        props : P,\n        state : Object,\n        close : () => ZalgoPromise<void>,\n        focus : () => ZalgoPromise<void>,\n        onError : (mixed) => ZalgoPromise<void>,\n        container : HTMLElement | void,\n        event : EventEmitterType\n    |}) => ?T,\n    decorate? : ({|\n        value : T,\n        props : PropsType<P>,\n        state : Object,\n        close : () => ZalgoPromise<void>,\n        focus : () => ZalgoPromise<void>,\n        onError : (mixed) => ZalgoPromise<void>,\n        container : HTMLElement | void,\n        event : EventEmitterType\n    |}) => T,\n    childDecorate? : ({|\n        value : ?T,\n        uid : uidPropType,\n        tag : tagPropType,\n        close : closePropType,\n        focus : focusPropType,\n        onError : onErrorPropType,\n        onProps : onPropsPropType<P>,\n        resize : resizePropType,\n        getParentDomain : getParentDomainPropType,\n        getParent : getParentPropType,\n        show : showPropType,\n        hide : hidePropType,\n        export : exportPropType<X>,\n        getSiblings : getSiblingsPropType\n    |}) => ?T,\n    required? : boolean,\n    queryParam? : boolean | string | ({| value : T |}) => (string | ZalgoPromise<string>),\n    bodyParam? : boolean | string | ({| value : T |}) => (string | ZalgoPromise<string>),\n    // eslint-disable-next-line no-undef\n    queryValue? : <R>({| value : T |}) => (ZalgoPromise<R> | R | string),\n    // eslint-disable-next-line no-undef\n    bodyValue? : <R>({| value : T |}) => (ZalgoPromise<R> | R | string),\n    sendToChild? : boolean,\n    allowDelegate? : boolean,\n    validate? : ({| value : T, props : PropsType<P> |}) => void,\n    sameDomain? : boolean,\n    serialization? : $Values<typeof PROP_SERIALIZATION>\n|};\n\nexport type BOOLEAN_DEFINITION_TYPE = typeof PROP_TYPE.BOOLEAN;\nexport type STRING_DEFINITION_TYPE = typeof PROP_TYPE.STRING;\nexport type NUMBER_DEFINITION_TYPE = typeof PROP_TYPE.NUMBER;\nexport type FUNCTION_DEFINITION_TYPE = typeof PROP_TYPE.FUNCTION;\nexport type ARRAY_DEFINITION_TYPE = typeof PROP_TYPE.ARRAY;\nexport type OBJECT_DEFINITION_TYPE = typeof PROP_TYPE.OBJECT;\n\nexport type DEFINITION_TYPE =\n        BOOLEAN_DEFINITION_TYPE | STRING_DEFINITION_TYPE | NUMBER_DEFINITION_TYPE |\n        FUNCTION_DEFINITION_TYPE | ARRAY_DEFINITION_TYPE | OBJECT_DEFINITION_TYPE;\n\n\nexport type BooleanPropDefinitionType<T : boolean, P, X> = PropDefinitionType<T, P, BOOLEAN_DEFINITION_TYPE, X>;\nexport type StringPropDefinitionType<T : string, P, X> = PropDefinitionType<T, P, STRING_DEFINITION_TYPE, X>;\nexport type NumberPropDefinitionType<T : number, P, X> = PropDefinitionType<T, P, NUMBER_DEFINITION_TYPE, X>;\nexport type FunctionPropDefinitionType<T : Function, P, X> = PropDefinitionType<T, P, FUNCTION_DEFINITION_TYPE, X>;\nexport type ArrayPropDefinitionType<T : Array<*> | $ReadOnlyArray<*>, P, X> = PropDefinitionType<T, P, ARRAY_DEFINITION_TYPE, X>; // eslint-disable-line flowtype/no-mutable-array\nexport type ObjectPropDefinitionType<T : Object, P, X> = PropDefinitionType<T, P, OBJECT_DEFINITION_TYPE, X>;\n\nexport type MixedPropDefinitionType<P, X> =\n    BooleanPropDefinitionType<*, P, X> |\n    StringPropDefinitionType<*, P, X> |\n    NumberPropDefinitionType<*, P, X> |\n    FunctionPropDefinitionType<*, P, X> |\n    ObjectPropDefinitionType<*, P, X> |\n    ArrayPropDefinitionType<*, P, X>;\n\nexport type UserPropsDefinitionType<P, X> = {|\n    [string] : MixedPropDefinitionType<P, X>\n|};\n\nexport type BuiltInPropsDefinitionType<P, X> = {|\n    timeout : NumberPropDefinitionType<timeoutPropType, P, X>,\n    window : ObjectPropDefinitionType<windowPropType, P, X>,\n    close : FunctionPropDefinitionType<closePropType, P, X>,\n    focus : FunctionPropDefinitionType<focusPropType, P, X>,\n    resize : FunctionPropDefinitionType<resizePropType, P, X>,\n    uid : StringPropDefinitionType<uidPropType, P, X>,\n    tag : StringPropDefinitionType<tagPropType, P, X>,\n    cspNonce : StringPropDefinitionType<cspNoncePropType, P, X>,\n    getParent : FunctionPropDefinitionType<getParentPropType, P, X>,\n    getParentDomain : FunctionPropDefinitionType<getParentDomainPropType, P, X>,\n    hide : FunctionPropDefinitionType<hidePropType, P, X>,\n    show : FunctionPropDefinitionType<showPropType, P, X>,\n    export : FunctionPropDefinitionType<exportPropType<X>, P, X>,\n    getSiblings : FunctionPropDefinitionType<getSiblingsPropType, P, X>,\n\n    onDisplay : FunctionPropDefinitionType<onDisplayPropType, P, X>,\n    onRendered : FunctionPropDefinitionType<onRenderedPropType, P, X>,\n    onRender : FunctionPropDefinitionType<onRenderPropType, P, X>,\n    onClose : FunctionPropDefinitionType<onClosePropType, P, X>,\n    onDestroy : FunctionPropDefinitionType<onDestroyPropType, P, X>,\n    onResize : FunctionPropDefinitionType<onClosePropType, P, X>,\n    onFocus : FunctionPropDefinitionType<onFocusPropType, P, X>,\n    onError : FunctionPropDefinitionType<onErrorPropType, P, X>,\n    onProps : FunctionPropDefinitionType<onPropsPropType<P>, P, X>\n|};\n\nexport type PropsDefinitionType<P, X> = {|\n    ...BuiltInPropsDefinitionType<P, X>,\n    [ string ] : MixedPropDefinitionType<P, X>\n|};\n\nconst defaultNoop = () => noop;\n// eslint-disable-next-line flowtype/require-exact-type\nconst decorateOnce = <F : Function>({ value } : { value : F }) : F => once(value);\n\nexport function getBuiltInProps<P, X>() : BuiltInPropsDefinitionType<P, X> {\n    return {\n        window: {\n            type:          PROP_TYPE.OBJECT,\n            sendToChild:   false,\n            required:      false,\n            allowDelegate: true,\n            validate:      ({ value }) => {\n                if (!isWindow(value) && !ProxyWindow.isProxyWindow(value)) {\n                    throw new Error(`Expected Window or ProxyWindow`);\n                }\n\n                if (isWindow(value)) {\n                    // $FlowFixMe\n                    if (isWindowClosed(value)) {\n                        throw new Error(`Window is closed`);\n                    }\n\n                    // $FlowFixMe\n                    if (!isSameDomain(value)) {\n                        throw new Error(`Window is not same domain`);\n                    }\n                }\n            },\n            decorate: ({ value }) => {\n                return toProxyWindow(value);\n            }\n        },\n\n        timeout: {\n            type:        PROP_TYPE.NUMBER,\n            required:    false,\n            sendToChild: false\n        },\n\n        cspNonce: {\n            type:     PROP_TYPE.STRING,\n            required: false\n        },\n\n        onDisplay: {\n            type:          PROP_TYPE.FUNCTION,\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop,\n            decorate:      decorateOnce\n        },\n\n        onRendered: {\n            type:        PROP_TYPE.FUNCTION,\n            required:    false,\n            sendToChild: false,\n            default:     defaultNoop,\n            decorate:    decorateOnce\n        },\n\n        onRender: {\n            type:        PROP_TYPE.FUNCTION,\n            required:    false,\n            sendToChild: false,\n            default:     defaultNoop,\n            decorate:    decorateOnce\n        },\n\n        onClose: {\n            type:          PROP_TYPE.FUNCTION,\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop,\n            decorate:      decorateOnce\n        },\n\n        onDestroy: {\n            type:          PROP_TYPE.FUNCTION,\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop,\n            decorate:      decorateOnce\n        },\n\n        onResize: {\n            type:          PROP_TYPE.FUNCTION,\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop\n        },\n\n        onFocus: {\n            type:          PROP_TYPE.FUNCTION,\n            required:      false,\n            sendToChild:   false,\n            allowDelegate: true,\n            default:       defaultNoop\n        },\n\n        close: {\n            type:          PROP_TYPE.FUNCTION,\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ close }) => close\n        },\n\n        focus: {\n            type:          PROP_TYPE.FUNCTION,\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ focus }) => focus\n        },\n\n        resize: {\n            type:          PROP_TYPE.FUNCTION,\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ resize }) => resize\n        },\n\n        uid: {\n            type:          PROP_TYPE.STRING,\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ uid }) => uid\n        },\n\n        tag: {\n            type:          PROP_TYPE.STRING,\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ tag }) => tag\n        },\n\n        getParent: {\n            type:          PROP_TYPE.FUNCTION,\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ getParent }) => getParent\n        },\n\n        getParentDomain: {\n            type:          PROP_TYPE.FUNCTION,\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ getParentDomain }) => getParentDomain\n        },\n\n        show: {\n            type:          PROP_TYPE.FUNCTION,\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ show }) => show\n        },\n\n        hide: {\n            type:          PROP_TYPE.FUNCTION,\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ hide }) => hide\n        },\n\n        export: {\n            type:          PROP_TYPE.FUNCTION,\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ 'export': xport }) => xport\n        },\n\n        onError: {\n            type:          PROP_TYPE.FUNCTION,\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ onError }) => onError\n        },\n\n        onProps: {\n            type:          PROP_TYPE.FUNCTION,\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ onProps }) => onProps\n        },\n\n        getSiblings: {\n            type:          PROP_TYPE.FUNCTION,\n            required:      false,\n            sendToChild:   false,\n            childDecorate: ({ getSiblings }) => getSiblings\n        }\n    };\n}\n\ntype PropCallback<P, X, R> =\n    ((string, BooleanPropDefinitionType<boolean, P, X> | void, boolean) => R) &\n    ((string, StringPropDefinitionType<string, P, X> | void, string) => R) &\n    ((string, NumberPropDefinitionType<number, P, X> | void, number) => R) &\n    ((string, FunctionPropDefinitionType<Function, P, X> | void, Function) => R) &\n    ((string, ArrayPropDefinitionType<$ReadOnlyArray<*> | $ReadOnlyArray<*>, P, X>  | void, $ReadOnlyArray<*> | $ReadOnlyArray<*>) => R) &\n    ((string, ObjectPropDefinitionType<Object, P, X>  | void, Object) => R);\n\nexport function eachProp<P, X>(props : PropsType<P>, propsDef : PropsDefinitionType<P, X>, handler : PropCallback<P, X, void>) {\n    // $FlowFixMe[cannot-spread-indexer]\n    for (const key of Object.keys({ ...props, ...propsDef })) {\n        const propDef = propsDef[key];\n        const value = props[key];\n\n        // $FlowFixMe[incompatible-call]\n        handler(key, propDef, value);\n    }\n}\n\nexport function mapProps<P, X, T>(props : PropsType<P>, propsDef : PropsDefinitionType<P, X>, handler : PropCallback<P, X, T>) : $ReadOnlyArray<T> {\n    const results = [];\n\n    eachProp(props, propsDef, (key, propDef, value) => {\n        // $FlowFixMe[incompatible-call]\n        const result = handler(key, propDef, value);\n        results.push(result);\n    });\n    return results;\n}\n","/* @flow */\n\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { dotify, isDefined, base64encode, noop } from 'belter/src';\n\nimport { eachProp, mapProps, type PropsInputType, type PropsType, type PropsDefinitionType } from '../component/props';\nimport { PROP_SERIALIZATION, METHOD, PROP_TYPE } from '../constants';\n\nimport type { ParentHelpers } from './index';\n\nexport function extendProps<P, X>(propsDef : PropsDefinitionType<P, X>, existingProps : PropsType<P>, inputProps : PropsInputType<P>, helpers : ParentHelpers<P>, container : HTMLElement | void) {\n    const { state, close, focus, event, onError } = helpers;\n\n    // $FlowFixMe\n    eachProp(inputProps, propsDef, (key, propDef, val) => {\n        let valueDetermined = false;\n        let value = val;\n\n        const getDerivedValue = () => {\n            if (!propDef) {\n                return value;\n            }\n\n            const alias = propDef.alias;\n            if (alias && !isDefined(val) && isDefined(inputProps[alias])) {\n                value = inputProps[alias];\n            }\n    \n            if (propDef.value) {\n                value = propDef.value({ props: existingProps, state, close, focus, event, onError, container });\n            }\n    \n            if (propDef.default && !isDefined(value) && !isDefined(inputProps[key])) {\n                value = propDef.default({ props: existingProps, state, close, focus, event, onError, container });\n            }\n\n            if (isDefined(value)) {\n                if (propDef.type === PROP_TYPE.ARRAY ? !Array.isArray(value) : (typeof value !== propDef.type)) {\n                    throw new TypeError(`Prop is not of type ${ propDef.type }: ${ key }`);\n                }\n            } else {\n                if (propDef.required !== false && !isDefined(inputProps[key])) {\n                    throw new Error(`Expected prop \"${ key }\" to be defined`);\n                }\n            }\n    \n            if (__DEBUG__ && isDefined(value) && propDef.validate) {\n                // $FlowFixMe\n                propDef.validate({ value, props: inputProps });\n            }\n\n            if (isDefined(value) && propDef.decorate) {\n                // $FlowFixMe\n                value = propDef.decorate({ value, props: existingProps, state, close, focus, event, onError, container });\n            }\n\n            return value;\n        };\n\n        const getter = () => {\n            if (valueDetermined) {\n                return value;\n            }\n\n            valueDetermined = true;\n            return getDerivedValue();\n        };\n\n        Object.defineProperty(existingProps, key, {\n            configurable: true,\n            enumerable:   true,\n            get:          getter\n        });\n    });\n\n    // $FlowFixMe\n    eachProp(existingProps, propsDef, noop);\n}\n\nexport function serializeProps<P, X>(propsDef : PropsDefinitionType<P, X>, props : (PropsType<P>), method : $Values<typeof METHOD>) : ZalgoPromise<{ [string] : string | boolean }> {\n\n    const params = {};\n\n    return ZalgoPromise.all(mapProps(props, propsDef, (key, propDef, value) => {\n        return ZalgoPromise.resolve().then(() => {\n\n            if (value === null || typeof value === 'undefined' || !propDef) {\n                return;\n            }\n\n            const getParam = {\n                [ METHOD.GET ]:  propDef.queryParam,\n                [ METHOD.POST ]: propDef.bodyParam\n            }[method];\n\n            const getValue = {\n                [ METHOD.GET ]:  propDef.queryValue,\n                [ METHOD.POST ]: propDef.bodyValue\n            }[method];\n            \n            if (!getParam) {\n                return;\n            }\n\n            return ZalgoPromise.hash({\n\n                finalParam: ZalgoPromise.try(() => {\n                    if (typeof getParam === 'function') {\n                        // $FlowFixMe[incompatible-call]\n                        return getParam({ value });\n                    } else if (typeof getParam === 'string') {\n                        return getParam;\n                    } else {\n                        return key;\n                    }\n                }),\n    \n                finalValue: ZalgoPromise.try(() => {\n                    if (typeof getValue === 'function' && isDefined(value)) {\n                        // $FlowFixMe[incompatible-call]\n                        // $FlowFixMe[incompatible-return]\n                        return getValue({ value });\n                    } else {\n                        // $FlowFixMe[incompatible-return]\n                        return value;\n                    }\n                })\n\n            }).then(({ finalParam, finalValue }) => {\n\n                let result;\n\n                if (typeof finalValue === 'boolean') {\n                    result = finalValue.toString();\n                } else if (typeof finalValue === 'string') {\n                    result = finalValue.toString();\n                } else if (typeof finalValue === 'object' && finalValue !== null) {\n\n                    if (propDef.serialization === PROP_SERIALIZATION.JSON) {\n                        result = JSON.stringify(finalValue);\n                    } else if (propDef.serialization === PROP_SERIALIZATION.BASE64) {\n                        result = base64encode(JSON.stringify(finalValue));\n                    } else if (propDef.serialization === PROP_SERIALIZATION.DOTIFY || !propDef.serialization) {\n                        result = dotify(finalValue, key);\n\n                        for (const dotkey of Object.keys(result)) {\n                            params[dotkey] = result[dotkey];\n                        }\n\n                        return;\n                    }\n\n                } else if (typeof finalValue === 'number') {\n                    result = finalValue.toString();\n                }\n\n                params[finalParam] = result;\n            });\n        });\n\n    })).then(() => {\n        return params;\n    });\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { send, bridge, ProxyWindow, toProxyWindow, type CrossDomainFunctionType, cleanUpWindow } from 'post-robot/src';\nimport { isSameDomain, matchDomain, getDomainFromUrl, isBlankDomain, getAncestor, getDomain, type CrossDomainWindowType,\n    getDistanceFromTop, normalizeMockUrl, assertSameDomain, closeWindow, onCloseWindow, isWindowClosed, isSameTopWindow,\n    type DomainMatcher } from 'cross-domain-utils/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { addEventListener, uniqueID, elementReady, writeElementToWindow, eventEmitter, type EventEmitterType,\n    noop, onResize, extendUrl, appendChild, cleanup,\n    once, stringifyError, destroyElement, getElementSafe, showElement, hideElement, iframe, memoize, isElementClosed,\n    awaitFrameWindow, popup, normalizeDimension, watchElementForClose, isShadowElement, insertShadowSlot, extend } from 'belter/src';\n\nimport { ZOID, POST_MESSAGE, CONTEXT, EVENT, METHOD,\n    WINDOW_REFERENCE, DEFAULT_DIMENSIONS } from '../constants';\nimport { getGlobal, getProxyObject, crossDomainSerialize, buildChildWindowName, type ProxyObject } from '../lib';\nimport type { PropsInputType, PropsType } from '../component/props';\nimport type { ChildExportsType } from '../child';\nimport type { CssDimensionsType, ContainerReferenceType } from '../types';\nimport type { NormalizedComponentOptionsType, AttributesType } from '../component';\n\nimport { serializeProps, extendProps } from './props';\n\nexport type RenderOptionsType<P> = {|\n    uid : string,\n    props : PropsType<P>,\n    tag : string,\n    context : $Values<typeof CONTEXT>,\n    close : (?string) => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    doc : Document,\n    container? : HTMLElement,\n    dimensions : CssDimensionsType,\n    state : Object,\n    event : EventEmitterType,\n    frame : ?HTMLIFrameElement,\n    prerenderFrame : ?HTMLIFrameElement\n|};\n\nexport type ParentExportsType<P, X> = {|\n    init : (ChildExportsType<P>) => ZalgoPromise<void>,\n    close : () => ZalgoPromise<void>,\n    checkClose : CrossDomainFunctionType<[], boolean>,\n    resize : CrossDomainFunctionType<[{| width? : ?number, height? : ?number |}], void>,\n    onError : (mixed) => ZalgoPromise<void>,\n    show : () => ZalgoPromise<void>,\n    hide : () => ZalgoPromise<void>,\n    export : (X) => ZalgoPromise<void>\n|};\n\nexport type WindowRef =\n    {| type : typeof WINDOW_REFERENCE.OPENER |} |\n    {| type : typeof WINDOW_REFERENCE.PARENT, distance : number |} |\n    {| type : typeof WINDOW_REFERENCE.GLOBAL, uid : string |} |\n    {| type : typeof WINDOW_REFERENCE.NAME, name : string |};\n\nexport type InitialChildPayload<P, X> = {|\n    uid : string,\n    tag : string,\n    version : string,\n    context : $Values<typeof CONTEXT>,\n    childDomainMatch : DomainMatcher,\n    props : PropsType<P>,\n    exports : ParentExportsType<P, X>\n|};\n\nexport type InitialChildPayloadMetadata = {|\n    windowRef : WindowRef\n|};\n\nexport type StateType = Object;\n\nexport type ParentHelpers<P> = {|\n    state : StateType,\n    close : () => ZalgoPromise<void>,\n    focus : () => ZalgoPromise<void>,\n    resize : ({| width : ?number, height : ?number |}) => ZalgoPromise<void>,\n    onError : (mixed) => ZalgoPromise<void>,\n    updateProps : PropsInputType<P> => ZalgoPromise<void>,\n    event : EventEmitterType,\n    show : () => ZalgoPromise<void>,\n    hide : () => ZalgoPromise<void>\n|};\n\nfunction getDefaultProps<P>() : PropsType<P> {\n    // $FlowFixMe\n    return {};\n}\n\ntype InternalState = {|\n    visible : boolean\n|};\n\ntype Rerender = () => ZalgoPromise<void>;\n\ntype RenderContainerOptions = {|\n    context : $Values<typeof CONTEXT>,\n    proxyFrame : ?ProxyObject<HTMLIFrameElement>,\n    proxyPrerenderFrame : ?ProxyObject<HTMLIFrameElement>,\n    rerender : Rerender\n|};\n\ntype ResolveInitPromise = () => ZalgoPromise<void>;\ntype RejectInitPromise = (mixed) => ZalgoPromise<void>;\ntype GetProxyContainer = (container : ContainerReferenceType) => ZalgoPromise<ProxyObject<HTMLElement>>;\ntype Show = () => ZalgoPromise<void>;\ntype Hide = () => ZalgoPromise<void>;\ntype Close = () => ZalgoPromise<void>;\ntype OnError = (mixed) => ZalgoPromise<void>;\ntype RenderContainer = (proxyContainer : ProxyObject<HTMLElement>, RenderContainerOptions) => ZalgoPromise<?ProxyObject<HTMLElement>>;\ntype SetProxyWin = (ProxyWindow) => ZalgoPromise<void>;\ntype GetProxyWindow = () => ZalgoPromise<ProxyWindow>;\ntype OpenFrame = (context : $Values<typeof CONTEXT>, {| windowName : string |}) => ZalgoPromise<?ProxyObject<HTMLIFrameElement>>;\ntype OpenPrerenderFrame = (context : $Values<typeof CONTEXT>) => ZalgoPromise<?ProxyObject<HTMLIFrameElement>>;\ntype Prerender = (proxyPrerenderWin : ProxyWindow, {| context : $Values<typeof CONTEXT>|}) => ZalgoPromise<void>;\ntype Open = (context : $Values<typeof CONTEXT>, {| proxyWin : ProxyWindow, proxyFrame : ?ProxyObject<HTMLIFrameElement>, windowName : string |}) => ZalgoPromise<ProxyWindow>;\ntype OpenPrerender = (context : $Values<typeof CONTEXT>, proxyWin : ProxyWindow, proxyPrerenderFrame : ?ProxyObject<HTMLIFrameElement>) => ZalgoPromise<ProxyWindow>;\ntype WatchForUnload = () => ZalgoPromise<void>;\ntype GetInternalState = () => ZalgoPromise<InternalState>;\ntype SetInternalState = (InternalState) => ZalgoPromise<InternalState>;\n\ntype ParentDelegateOverrides<P> = {|\n    props : PropsType<P>,\n    event : EventEmitterType,\n    close : Close,\n    onError : OnError,\n    getProxyContainer : GetProxyContainer,\n    show : Show,\n    hide : Hide,\n    renderContainer : RenderContainer,\n    getProxyWindow : GetProxyWindow,\n    setProxyWin : SetProxyWin,\n    openFrame : OpenFrame,\n    openPrerenderFrame : OpenPrerenderFrame,\n    prerender : Prerender,\n    open : Open,\n    openPrerender : OpenPrerender,\n    watchForUnload : WatchForUnload,\n    getInternalState : GetInternalState,\n    setInternalState : SetInternalState,\n    resolveInitPromise : ResolveInitPromise,\n    rejectInitPromise : RejectInitPromise\n|};\n\ntype DelegateOverrides = {|\n    getProxyContainer : GetProxyContainer,\n    show : Show,\n    hide : Hide,\n    renderContainer : RenderContainer,\n    getProxyWindow : GetProxyWindow,\n    setProxyWin : SetProxyWin,\n    openFrame : OpenFrame,\n    openPrerenderFrame : OpenPrerenderFrame,\n    prerender : Prerender,\n    open : Open,\n    openPrerender : OpenPrerender,\n    watchForUnload : WatchForUnload\n|};\n\ntype RenderOptions = {|\n    target : CrossDomainWindowType,\n    container : ContainerReferenceType,\n    context : $Values<typeof CONTEXT>,\n    rerender : Rerender\n|};\n\ntype ParentComponent<P, X> = {|\n    init : () => void,\n    render : (RenderOptions) => ZalgoPromise<void>,\n    getProps : () => PropsType<P>,\n    setProps : (newProps : PropsInputType<P>, isUpdate? : boolean) => void,\n    export : (X) => ZalgoPromise<void>,\n    destroy : (err? : mixed) => ZalgoPromise<void>,\n    getHelpers : () => ParentHelpers<P>,\n    getDelegateOverrides : () => ZalgoPromise<DelegateOverrides>,\n    getExports : () => X\n|};\n\nconst getDefaultOverrides = <P>() : ParentDelegateOverrides<P> => {\n    // $FlowFixMe\n    return {};\n};\n\ntype ParentOptions<P, X, C> = {|\n    uid : string,\n    options : NormalizedComponentOptionsType<P, X, C>,\n    overrides? : ParentDelegateOverrides<P>,\n    parentWin? : CrossDomainWindowType\n|};\n\nexport function parentComponent<P, X, C>({ uid, options, overrides = getDefaultOverrides(), parentWin = window } : ParentOptions<P, X, C>) : ParentComponent<P, X> {\n    const { propsDef, containerTemplate, prerenderTemplate, tag, name, attributes, dimensions, autoResize, url, domain: domainMatch, validate, exports: xports } = options;\n\n    const initPromise = new ZalgoPromise();\n    const handledErrors = [];\n    const clean = cleanup();\n    const state = {};\n    const inputProps = {};\n    let internalState = {\n        visible: true\n    };\n    const event = overrides.event ? overrides.event : eventEmitter();\n    const props : PropsType<P> = overrides.props ? overrides.props : getDefaultProps();\n\n    let currentProxyWin : ?ProxyWindow;\n    let currentProxyContainer : ?ProxyObject<HTMLElement>;\n    let childComponent : ?ChildExportsType<P>;\n    let currentChildDomain : ?string;\n    let currentContainer : HTMLElement | void;\n\n    const onErrorOverride : ?OnError = overrides.onError;\n    let getProxyContainerOverride : ?GetProxyContainer = overrides.getProxyContainer;\n    let showOverride : ?Show = overrides.show;\n    let hideOverride : ?Hide = overrides.hide;\n    const closeOverride : ?Close = overrides.close;\n    let renderContainerOverride : ?RenderContainer = overrides.renderContainer;\n    let getProxyWindowOverride : ?GetProxyWindow = overrides.getProxyWindow;\n    let setProxyWinOverride : ?SetProxyWin = overrides.setProxyWin;\n    let openFrameOverride : ?OpenFrame = overrides.openFrame;\n    let openPrerenderFrameOverride : ?OpenPrerenderFrame = overrides.openPrerenderFrame;\n    let prerenderOverride : ?Prerender = overrides.prerender;\n    let openOverride : ?Open = overrides.open;\n    let openPrerenderOverride : ?OpenPrerender = overrides.openPrerender;\n    let watchForUnloadOverride : ?WatchForUnload = overrides.watchForUnload;\n    const getInternalStateOverride : ?GetInternalState = overrides.getInternalState;\n    const setInternalStateOverride : ?SetInternalState = overrides.setInternalState;\n\n    const getDimensions = () : CssDimensionsType => {\n        if (typeof dimensions === 'function') {\n            return dimensions({ props });\n        }\n        return dimensions;\n    };\n\n    const resolveInitPromise = () => {\n        return ZalgoPromise.try(() => {\n            if (overrides.resolveInitPromise) {\n                return overrides.resolveInitPromise();\n            }\n\n            return initPromise.resolve();\n        });\n    };\n\n    const rejectInitPromise = (err : mixed) => {\n        return ZalgoPromise.try(() => {\n            if (overrides.rejectInitPromise) {\n                return overrides.rejectInitPromise(err);\n            }\n\n            return initPromise.reject(err);\n        });\n    };\n\n    const getPropsForChild = (initialChildDomain : string) : ZalgoPromise<PropsType<P>> => {\n        const result = {};\n\n        for (const key of Object.keys(props)) {\n            const prop = propsDef[key];\n\n            if (prop && prop.sendToChild === false) {\n                continue;\n            }\n\n            if (prop && prop.sameDomain && !matchDomain(initialChildDomain, getDomain(window))) {\n                continue;\n            }\n            \n            result[key] = props[key];\n        }\n\n        // $FlowFixMe\n        return ZalgoPromise.hash(result);\n    };\n\n    const setupEvents = () => {\n        event.on(EVENT.RENDER,   () => props.onRender());\n        event.on(EVENT.DISPLAY,  () => props.onDisplay());\n        event.on(EVENT.RENDERED, () => props.onRendered());\n        event.on(EVENT.CLOSE,    () => props.onClose());\n        event.on(EVENT.DESTROY,  () => props.onDestroy());\n        event.on(EVENT.RESIZE,   () => props.onResize());\n        event.on(EVENT.FOCUS,    () => props.onFocus());\n        event.on(EVENT.PROPS,    (newProps) => props.onProps(newProps));\n        event.on(EVENT.ERROR, err => {\n            if (props && props.onError) {\n                return props.onError(err);\n            } else {\n                return rejectInitPromise(err).then(() => {\n                    setTimeout(() => {\n                        throw err;\n                    }, 1);\n                });\n            }\n        });\n\n        clean.register(event.reset);\n    };\n\n    const getInternalState = () => {\n        return ZalgoPromise.try(() => {\n            if (getInternalStateOverride) {\n                return getInternalStateOverride();\n            }\n\n            return internalState;\n        });\n    };\n\n    const setInternalState = (newInternalState)  => {\n        return ZalgoPromise.try(() => {\n            if (setInternalStateOverride) {\n                return setInternalStateOverride(newInternalState);\n            }\n\n            internalState = { ...internalState, ...newInternalState };\n            return internalState;\n        });\n    };\n\n    const getProxyWindow = () : ZalgoPromise<ProxyWindow> => {\n        if (getProxyWindowOverride) {\n            return getProxyWindowOverride();\n        }\n\n        return ZalgoPromise.try(() => {\n            const windowProp = props.window;\n\n            if (windowProp) {\n                const proxyWin = toProxyWindow(windowProp);\n                clean.register(() => windowProp.close());\n                return proxyWin;\n            }\n\n            return new ProxyWindow({ send });\n        });\n    };\n\n    const setProxyWin = (proxyWin : ProxyWindow) : ZalgoPromise<void> => {\n        if (setProxyWinOverride) {\n            return setProxyWinOverride(proxyWin);\n        }\n\n        return ZalgoPromise.try(() => {\n            currentProxyWin = proxyWin;\n        });\n    };\n\n    const show = () : ZalgoPromise<void> => {\n        if (showOverride) {\n            return showOverride();\n        }\n\n        return ZalgoPromise.hash({\n            setState:    setInternalState({ visible: true }),\n            showElement: currentProxyContainer ? currentProxyContainer.get().then(showElement) : null\n        }).then(noop);\n    };\n\n    const hide = () : ZalgoPromise<void> => {\n        if (hideOverride) {\n            return hideOverride();\n        }\n\n        return ZalgoPromise.hash({\n            setState:    setInternalState({ visible: false }),\n            showElement: currentProxyContainer ? currentProxyContainer.get().then(hideElement) : null\n        }).then(noop);\n    };\n\n    const getUrl = () : string => {\n        if (typeof url === 'function') {\n            return url({ props });\n        }\n\n        return url;\n    };\n\n    const getAttributes = () : AttributesType => {\n        if (typeof attributes === 'function') {\n            return attributes({ props });\n        }\n\n        return attributes;\n    };\n\n    const buildQuery = () : ZalgoPromise<{| [string] : string | boolean |}> => {\n        return serializeProps(propsDef, props, METHOD.GET);\n    };\n\n    const buildBody = () : ZalgoPromise<{| [string] : string | boolean |}> => {\n        return serializeProps(propsDef, props, METHOD.POST);\n    };\n\n    const buildUrl = () : ZalgoPromise<string> => {\n        return buildQuery().then(query => {\n            return extendUrl(normalizeMockUrl(getUrl()), { query });\n        });\n    };\n\n    const getInitialChildDomain = () : string => {\n        return getDomainFromUrl(getUrl());\n    };\n\n    const getDomainMatcher = () : DomainMatcher => {\n        if (domainMatch) {\n            return domainMatch;\n        }\n\n        return getInitialChildDomain();\n    };\n\n    const openFrame = (context : $Values<typeof CONTEXT>, { windowName } : {| windowName : string |}) : ZalgoPromise<?ProxyObject<HTMLIFrameElement>> => {\n        if (openFrameOverride) {\n            return openFrameOverride(context, { windowName });\n        }\n        \n        return ZalgoPromise.try(() => {\n            if (context === CONTEXT.IFRAME && __ZOID__.__IFRAME_SUPPORT__) {\n\n                // $FlowFixMe\n                const attrs = {\n                    name:  windowName,\n                    title: name,\n                    ...getAttributes().iframe\n                };\n\n                return getProxyObject(iframe({ attributes: attrs }));\n            }\n        });\n    };\n\n    const openPrerenderFrame = (context : $Values<typeof CONTEXT>) : ZalgoPromise<?ProxyObject<HTMLIFrameElement>> => {\n        if (openPrerenderFrameOverride) {\n            return openPrerenderFrameOverride(context);\n        }\n\n        return ZalgoPromise.try(() => {\n            if (context === CONTEXT.IFRAME && __ZOID__.__IFRAME_SUPPORT__) {\n                // $FlowFixMe\n                const attrs = {\n                    name:  `__${ ZOID }_prerender_frame__${ name }_${ uniqueID() }__`,\n                    title: `prerender__${ name }`,\n                    ...getAttributes().iframe\n                };\n                return getProxyObject(iframe({\n                    attributes: attrs\n                }));\n            }\n        });\n    };\n    \n    const openPrerender = (context : $Values<typeof CONTEXT>, proxyWin : ProxyWindow, proxyPrerenderFrame : ?ProxyObject<HTMLIFrameElement>) : ZalgoPromise<ProxyWindow> => {\n        if (openPrerenderOverride) {\n            return openPrerenderOverride(context, proxyWin, proxyPrerenderFrame);\n        }\n        \n        return ZalgoPromise.try(() => {\n            if (context === CONTEXT.IFRAME && __ZOID__.__IFRAME_SUPPORT__) {\n                if (!proxyPrerenderFrame) {\n                    throw new Error(`Expected proxy frame to be passed`);\n                }\n                \n                return proxyPrerenderFrame.get().then(prerenderFrame => {\n                    clean.register(() => destroyElement(prerenderFrame));\n        \n                    return awaitFrameWindow(prerenderFrame).then(prerenderFrameWindow => {\n                        return assertSameDomain(prerenderFrameWindow);\n                    }).then(win => {\n                        return toProxyWindow(win);\n                    });\n                });\n            } else if (context === CONTEXT.POPUP && __ZOID__.__POPUP_SUPPORT__) {\n                return proxyWin;\n            } else {\n                throw new Error(`No render context available for ${ context }`);\n            }\n        });\n    };\n\n    const focus = () : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            if (currentProxyWin) {\n                return ZalgoPromise.all([\n                    event.trigger(EVENT.FOCUS),\n                    currentProxyWin.focus()\n                ]).then(noop);\n            }\n        });\n    };\n\n    const getCurrentWindowReferenceUID = () : string => {\n        const global = getGlobal(window);\n        global.windows = global.windows || {};\n        global.windows[uid] = window;\n        clean.register(() => {\n            delete global.windows[uid];\n        });\n        return uid;\n    };\n\n    const getWindowRef = (target : CrossDomainWindowType, initialChildDomain : string, context : $Values<typeof CONTEXT>, proxyWin : ProxyWindow) : WindowRef => {\n        if (initialChildDomain === getDomain(window)) {\n            return { type: WINDOW_REFERENCE.GLOBAL, uid: getCurrentWindowReferenceUID() };\n        }\n\n        if (target !== window) {\n            throw new Error(`Can not construct cross-domain window reference for different target window`);\n        }\n\n        if (props.window) {\n            const actualComponentWindow = proxyWin.getWindow();\n            if (!actualComponentWindow) {\n                throw new Error(`Can not construct cross-domain window reference for lazy window prop`);\n            }\n\n            if (getAncestor(actualComponentWindow) !== window) {\n                throw new Error(`Can not construct cross-domain window reference for window prop with different ancestor`);\n            }\n        }\n\n        if (context === CONTEXT.POPUP) {\n            return { type: WINDOW_REFERENCE.OPENER };\n        } else if (context === CONTEXT.IFRAME) {\n            return { type: WINDOW_REFERENCE.PARENT, distance: getDistanceFromTop(window) };\n        }\n\n        throw new Error(`Can not construct window reference for child`);\n    };\n\n    const runTimeout = () : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            const timeout = props.timeout;\n\n            if (timeout) {\n                return initPromise.timeout(timeout, new Error(`Loading component timed out after ${ timeout } milliseconds`));\n            }\n        });\n    };\n\n    const initChild = (childDomain : string, childExports : ChildExportsType<P>) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            currentChildDomain = childDomain;\n            childComponent = childExports;\n            resolveInitPromise();\n            clean.register(() => childExports.close.fireAndForget().catch(noop));\n        });\n    };\n\n    const resize = ({ width, height } : {| width? : ?number, height? : ?number |}) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            event.trigger(EVENT.RESIZE, { width, height });\n        });\n    };\n\n    const destroy = (err : mixed) : ZalgoPromise<void> => {\n        // eslint-disable-next-line promise/no-promise-in-callback\n        return ZalgoPromise.try(() => {\n            return event.trigger(EVENT.DESTROY);\n        }).catch(noop).then(() => {\n            return clean.all(err);\n        }).then(() => {\n            initPromise.asyncReject(err || new Error('Component destroyed'));\n        });\n    };\n\n    const close = memoize((err? : mixed) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n\n            if (closeOverride) {\n                // $FlowFixMe\n                const source = closeOverride.__source__;\n\n                if (isWindowClosed(source)) {\n                    return;\n                }\n\n                return closeOverride();\n            }\n\n            return ZalgoPromise.try(() => {\n                return event.trigger(EVENT.CLOSE);\n            }).then(() => {\n                return destroy(err || new Error(`Component closed`));\n            });\n        });\n    });\n\n    const open = (context : $Values<typeof CONTEXT>, { proxyWin, proxyFrame, windowName } : {| proxyWin : ProxyWindow, proxyFrame : ?ProxyObject<HTMLIFrameElement>, windowName : string |}) : ZalgoPromise<ProxyWindow> => {\n        if (openOverride) {\n            return openOverride(context,  { proxyWin, proxyFrame, windowName });\n        }\n        \n        return ZalgoPromise.try(() => {\n            if (context === CONTEXT.IFRAME && __ZOID__.__IFRAME_SUPPORT__) {\n                if (!proxyFrame) {\n                    throw new Error(`Expected proxy frame to be passed`);\n                }\n        \n                return proxyFrame.get().then(frame => {\n                    return awaitFrameWindow(frame).then(win => {\n                        clean.register(() => destroyElement(frame));\n                        clean.register(() => cleanUpWindow(win));\n                        return win;\n                    });\n                });\n            } else if (context === CONTEXT.POPUP && __ZOID__.__POPUP_SUPPORT__) {\n                let { width = DEFAULT_DIMENSIONS.WIDTH, height = DEFAULT_DIMENSIONS.HEIGHT } = getDimensions();\n\n                width = normalizeDimension(width, window.outerWidth);\n                height = normalizeDimension(height, window.outerWidth);\n\n                // $FlowFixMe\n                const attrs = {\n                    name: windowName,\n                    width,\n                    height,\n                    ...getAttributes().popup\n                };\n    \n                const win = popup('', attrs);\n    \n                clean.register(() => closeWindow(win));\n                clean.register(() => cleanUpWindow(win));\n\n                return win;\n            } else {\n                throw new Error(`No render context available for ${ context }`);\n            }\n\n        }).then(win => {\n            proxyWin.setWindow(win, { send });\n            return proxyWin.setName(windowName).then(() => {\n                return proxyWin;\n            });\n        });\n    };\n\n    const watchForUnload = () => {\n        return ZalgoPromise.try(() => {\n            const unloadWindowListener = addEventListener(window, 'unload', once(() => {\n                destroy(new Error(`Window navigated away`));\n            }));\n    \n            const closeParentWindowListener = onCloseWindow(parentWin, destroy, 3000);\n            clean.register(closeParentWindowListener.cancel);\n            clean.register(unloadWindowListener.cancel);\n\n            if (watchForUnloadOverride) {\n                return watchForUnloadOverride();\n            }\n        });\n    };\n\n    const watchForClose = (proxyWin : ProxyWindow, context : $Values<typeof CONTEXT>) : ZalgoPromise<void> => {\n        let cancelled = false;\n\n        clean.register(() => {\n            cancelled = true;\n        });\n\n        return ZalgoPromise.delay(2000).then(() => {\n            return proxyWin.isClosed();\n        }).then(isClosed => {\n            if (!cancelled) {\n                if (isClosed) {\n                    return close(new Error(`Detected ${ context } close`));\n                } else {\n                    return watchForClose(proxyWin, context);\n                }\n            }\n        });\n    };\n\n    const checkWindowClose = (proxyWin : ProxyWindow) : ZalgoPromise<boolean> => {\n        let closed = false;\n        \n        return proxyWin.isClosed().then(isClosed => {\n            if (isClosed) {\n                closed = true;\n                return close(new Error(`Detected component window close`));\n            }\n\n            return ZalgoPromise.delay(200)\n                .then(() => proxyWin.isClosed())\n                .then(secondIsClosed => {\n                    if (secondIsClosed) {\n                        closed = true;\n                        return close(new Error(`Detected component window close`));\n                    }\n                });\n        }).then(() => {\n            return closed;\n        });\n    };\n\n    const onError = (err : mixed) : ZalgoPromise<void> => {\n        if (onErrorOverride) {\n            return onErrorOverride(err);\n        }\n\n        return ZalgoPromise.try(() => {\n            if (handledErrors.indexOf(err) !== -1) {\n                return;\n            }\n\n            handledErrors.push(err);\n            initPromise.asyncReject(err);\n\n            return event.trigger(EVENT.ERROR, err);\n        });\n    };\n\n    const exportsPromise : ZalgoPromise<X> = new ZalgoPromise();\n\n    const getExports = () : X => {\n        return xports({\n            getExports: () => exportsPromise\n        });\n    };\n\n    const xport = (actualExports : X) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            exportsPromise.resolve(actualExports);\n        });\n    };\n\n    initChild.onError = onError;\n\n    const buildParentExports = (win : ProxyWindow) : ParentExportsType<P, X> => {\n        const checkClose = () => checkWindowClose(win);\n        function init(childExports : ChildExportsType<P>) : ZalgoPromise<void> {\n            return initChild(this.origin, childExports);\n        }\n        return { init, close, checkClose, resize, onError, show, hide, export: xport };\n    };\n\n    const buildInitialChildPayload = ({ proxyWin, initialChildDomain, childDomainMatch, context } : {| proxyWin : ProxyWindow, initialChildDomain : string, childDomainMatch : DomainMatcher, context : $Values<typeof CONTEXT>|} = {}) : ZalgoPromise<InitialChildPayload<P, X>> => {\n        return getPropsForChild(initialChildDomain).then(childProps => {\n            return {\n                uid,\n                context,\n                tag,\n                childDomainMatch,\n                version:      __ZOID__.__VERSION__,\n                props:        childProps,\n                exports:      buildParentExports(proxyWin)\n            };\n        });\n    };\n\n    const buildSerializedChildPayload = ({ proxyWin, initialChildDomain, childDomainMatch, target = window, context } : {| proxyWin : ProxyWindow, initialChildDomain : string, childDomainMatch : DomainMatcher, target : CrossDomainWindowType, context : $Values<typeof CONTEXT>|} = {}) : ZalgoPromise<string> => {\n        return buildInitialChildPayload({ proxyWin, initialChildDomain, childDomainMatch, context }).then(childPayload => {\n            const { serializedData, cleanReference } = crossDomainSerialize({\n                data:     childPayload,\n                metaData: {\n                    windowRef: getWindowRef(target, initialChildDomain, context, proxyWin)\n                },\n                sender: {\n                    domain: getDomain(window)\n                },\n                receiver: {\n                    win:    proxyWin,\n                    domain: childDomainMatch\n                },\n                passByReference: initialChildDomain === getDomain()\n            });\n\n            clean.register(cleanReference);\n            return serializedData;\n        });\n    };\n\n    const buildWindowName = ({ proxyWin, initialChildDomain, childDomainMatch, target, context } : {| proxyWin : ProxyWindow, initialChildDomain : string, childDomainMatch : DomainMatcher, target : CrossDomainWindowType, context : $Values<typeof CONTEXT>|}) : ZalgoPromise<string> => {\n        return buildSerializedChildPayload({ proxyWin, initialChildDomain, childDomainMatch, target, context }).then(serializedPayload => {\n            return buildChildWindowName({ name, serializedPayload });\n        });\n    };\n\n    const renderTemplate = (renderer : (RenderOptionsType<P>) => ?HTMLElement, { context, container, doc, frame, prerenderFrame } : {| context : $Values<typeof CONTEXT>, container? : HTMLElement, doc : Document, frame? : ?HTMLIFrameElement, prerenderFrame? : ?HTMLIFrameElement |}) : ?HTMLElement => {\n        \n        return renderer({\n            uid, container, context, doc, frame, prerenderFrame,\n            focus, close, state, props, tag, dimensions: getDimensions(), event\n        });\n    };\n\n    const prerender = (proxyPrerenderWin : ProxyWindow, { context } : {| context : $Values<typeof CONTEXT>|}) : ZalgoPromise<void> => {\n        if (prerenderOverride) {\n            return prerenderOverride(proxyPrerenderWin, { context });\n        }\n                                                                                                                                                                                                                                    \n        return ZalgoPromise.try(() => {\n            if (!prerenderTemplate) {\n                return;\n            }\n\n            let prerenderWindow = proxyPrerenderWin.getWindow();\n\n            if (!prerenderWindow || !isSameDomain(prerenderWindow) || !isBlankDomain(prerenderWindow)) {\n                return;\n            }\n\n            prerenderWindow = assertSameDomain(prerenderWindow);\n    \n            const doc = prerenderWindow.document;\n            const el = renderTemplate(prerenderTemplate, { context, doc });\n\n            if (!el) {\n                return;\n            }\n\n            if (el.ownerDocument !== doc) {\n                throw new Error(`Expected prerender template to have been created with document from child window`);\n            }\n\n            writeElementToWindow(prerenderWindow, el);\n\n            let { width = false, height = false, element = 'body' } = autoResize;\n            element = getElementSafe(element, doc);\n            \n            if (element && (width || height)) {\n                const prerenderResizeListener = onResize(element, ({ width: newWidth, height: newHeight }) => {\n                    resize({\n                        width:  width ? newWidth : undefined,\n                        height: height ? newHeight : undefined\n                    });\n                }, { width, height, win: prerenderWindow });\n\n                event.on(EVENT.RENDERED, prerenderResizeListener.cancel);\n            }\n        });\n    };\n    const renderContainer : RenderContainer = (proxyContainer : ProxyObject<HTMLElement>, { proxyFrame, proxyPrerenderFrame, context, rerender } : RenderContainerOptions) : ZalgoPromise<?ProxyObject<HTMLElement>> => {\n\n        if (renderContainerOverride) {\n            return renderContainerOverride(proxyContainer, { proxyFrame, proxyPrerenderFrame, context, rerender });\n        }\n\n        return ZalgoPromise.hash({\n            container:      proxyContainer.get(),\n            // $FlowFixMe\n            frame:          proxyFrame ? proxyFrame.get() : null,\n            // $FlowFixMe\n            prerenderFrame: proxyPrerenderFrame ? proxyPrerenderFrame.get() : null,\n            internalState:  getInternalState()\n        }).then(({ container, frame, prerenderFrame, internalState: { visible } }) => {\n            const innerContainer = renderTemplate(containerTemplate, { context, container, frame, prerenderFrame, doc: document });\n            if (innerContainer) {\n                if (!visible) {\n                    hideElement(innerContainer);\n                }\n                appendChild(container, innerContainer);\n                const containerWatcher = watchElementForClose(innerContainer, () => {\n                    const removeError = new Error(`Detected container element removed from DOM`);\n                    return ZalgoPromise.delay(1).then(() => {\n                        if (isElementClosed(innerContainer)) {\n                            close(removeError);\n                        } else {\n                            clean.all(removeError);\n                            return rerender().then(resolveInitPromise, rejectInitPromise);\n                        }\n                    });\n                });\n                \n                clean.register(() => containerWatcher.cancel());\n                clean.register(() => destroyElement(innerContainer));\n                currentProxyContainer = getProxyObject(innerContainer);\n                return currentProxyContainer;\n            }\n        });\n    };\n\n    const getBridgeUrl = () : ?string => {\n        if (typeof options.bridgeUrl === 'function') {\n            return options.bridgeUrl({ props });\n        }\n\n        return options.bridgeUrl;\n    };\n\n    const openBridge = (proxyWin : ProxyWindow, initialChildDomain : string, context : $Values<typeof CONTEXT>) : ?ZalgoPromise<?CrossDomainWindowType> => {\n        if (__POST_ROBOT__.__IE_POPUP_SUPPORT__) {\n            return ZalgoPromise.try(() => {\n                return proxyWin.awaitWindow();\n                \n            }).then(win => {\n                if (!bridge || !bridge.needsBridge({ win, domain: initialChildDomain }) || bridge.hasBridge(initialChildDomain, initialChildDomain)) {\n                    return;\n                }\n\n                const bridgeUrl = getBridgeUrl();\n\n                if (!bridgeUrl) {\n                    throw new Error(`Bridge needed to render ${ context }`);\n                }\n\n                const bridgeDomain = getDomainFromUrl(bridgeUrl);\n                bridge.linkUrl(win, initialChildDomain);\n                return bridge.openBridge(normalizeMockUrl(bridgeUrl), bridgeDomain);\n            });\n        }\n    };\n\n    const getHelpers = () : ParentHelpers<P> => {\n        return {\n            state, event, close, focus, resize,\n            // eslint-disable-next-line no-use-before-define\n            onError, updateProps, show, hide\n        };\n    };\n\n    const getProps = () => props;\n\n    const getDefaultPropsInput = () : PropsInputType<P> => {\n        // $FlowFixMe\n        return {};\n    };\n\n    const setProps = (newInputProps : PropsInputType<P> = getDefaultPropsInput()) => {\n        if (__DEBUG__ && validate) {\n            validate({ props: newInputProps });\n        }\n\n        const container = currentContainer;\n        const helpers = getHelpers();\n        extend(inputProps, newInputProps);\n\n        // $FlowFixMe\n        extendProps(propsDef, props, inputProps, helpers, container);\n    };\n\n    const updateProps = (newProps : PropsInputType<P>) : ZalgoPromise<void> => {\n        setProps(newProps);\n\n        return initPromise.then(() => {\n            const child = childComponent;\n            const proxyWin = currentProxyWin;\n            const childDomain = currentChildDomain;\n            \n            if (!child || !proxyWin || !childDomain) {\n                return;\n            }\n\n            return getPropsForChild(childDomain).then(childProps => {\n                return child.updateProps(childProps).catch(err => {\n                    return checkWindowClose(proxyWin).then(closed => {\n                        if (!closed) {\n                            throw err;\n                        }\n                    });\n                });\n            });\n        });\n    };\n\n    const getProxyContainer : GetProxyContainer = (container : ContainerReferenceType) : ZalgoPromise<ProxyObject<HTMLElement>> => {\n        if (getProxyContainerOverride) {\n            return getProxyContainerOverride(container);\n        }\n\n        return ZalgoPromise.try(() => {\n            return elementReady(container);\n        }).then(containerElement => {\n            if (isShadowElement(containerElement)) {\n                containerElement = insertShadowSlot(containerElement);\n            }\n\n            currentContainer = containerElement;\n            return getProxyObject(containerElement);\n        });\n    };\n\n    const delegate = (context : $Values<typeof CONTEXT>, target : CrossDomainWindowType) : ZalgoPromise<DelegateOverrides> => {\n        const delegateProps = {};\n        for (const propName of Object.keys(props)) {\n            const propDef = propsDef[propName];\n            if (propDef && propDef.allowDelegate) {\n                delegateProps[propName] = props[propName];\n            }\n        }\n\n        const childOverridesPromise = send(target, `${ POST_MESSAGE.DELEGATE }_${ name }`, {\n            uid,\n            overrides: {\n                props: delegateProps, event, close, onError, getInternalState,\n                setInternalState, resolveInitPromise, rejectInitPromise\n            }\n        }).then(({ data: { parent } }) => {\n            const parentComp : ParentComponent<P, X> = parent;\n\n            clean.register(err => {\n                if (!isWindowClosed(target)) {\n                    return parentComp.destroy(err);\n                }\n            });\n            return parentComp.getDelegateOverrides();\n\n        }).catch(err => {\n            throw new Error(`Unable to delegate rendering. Possibly the component is not loaded in the target window.\\n\\n${ stringifyError(err) }`);\n        });\n\n        getProxyContainerOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.getProxyContainer(...args));\n        renderContainerOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.renderContainer(...args));\n        showOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.show(...args));\n        hideOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.hide(...args));\n        watchForUnloadOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.watchForUnload(...args));\n\n        if (context === CONTEXT.IFRAME && __ZOID__.__IFRAME_SUPPORT__) {\n            getProxyWindowOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.getProxyWindow(...args));\n            openFrameOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.openFrame(...args));\n            openPrerenderFrameOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.openPrerenderFrame(...args));\n            prerenderOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.prerender(...args));\n            openOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.open(...args));\n            openPrerenderOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.openPrerender(...args));\n        } else if (context === CONTEXT.POPUP && __ZOID__.__POPUP_SUPPORT__) {\n            setProxyWinOverride = (...args) => childOverridesPromise.then(childOverrides => childOverrides.setProxyWin(...args));\n        }\n\n        return childOverridesPromise;\n    };\n\n    const getDelegateOverrides = () : ZalgoPromise<DelegateOverrides> => {\n        return ZalgoPromise.try(() => {\n            return {\n                getProxyContainer, show, hide, renderContainer, getProxyWindow, watchForUnload,\n                openFrame, openPrerenderFrame, prerender, open, openPrerender, setProxyWin\n            };\n        });\n    };\n\n    const checkAllowRender = (target : CrossDomainWindowType, childDomainMatch : DomainMatcher, container : ContainerReferenceType) => {\n        if (target === window) {\n            return;\n        }\n\n        if (!isSameTopWindow(window, target)) {\n            throw new Error(`Can only renderTo an adjacent frame`);\n        }\n\n        const origin = getDomain();\n\n        if (!matchDomain(childDomainMatch, origin) && !isSameDomain(target)) {\n            throw new Error(`Can not render remotely to ${ childDomainMatch.toString() } - can only render to ${ origin }`);\n        }\n\n        if (container && typeof container !== 'string') {\n            throw new Error(`Container passed to renderTo must be a string selector, got ${ typeof container } }`);\n        }\n    };\n\n    const init = () => {\n        setupEvents();\n    };\n\n    const render = ({ target, container, context, rerender } : RenderOptions) : ZalgoPromise<void> => {\n        return ZalgoPromise.try(() => {\n            const initialChildDomain = getInitialChildDomain();\n            const childDomainMatch = getDomainMatcher();\n            \n            checkAllowRender(target, childDomainMatch, container);\n\n            const delegatePromise = ZalgoPromise.try(() => {\n                if (target !== window) {\n                    return delegate(context, target);\n                }\n            });\n\n            const windowProp = props.window;\n\n            const watchForUnloadPromise = watchForUnload();\n            \n            const buildBodyPromise = buildBody();\n            const onRenderPromise = event.trigger(EVENT.RENDER);\n\n            const getProxyContainerPromise = getProxyContainer(container);\n            const getProxyWindowPromise = getProxyWindow();\n\n            const finalSetPropsPromise = getProxyContainerPromise.then(() => {\n                return setProps();\n            });\n\n            const buildUrlPromise = finalSetPropsPromise.then(() => {\n                return buildUrl();\n            });\n\n            const buildWindowNamePromise = getProxyWindowPromise.then(proxyWin => {\n                return buildWindowName({ proxyWin, initialChildDomain, childDomainMatch, target, context });\n            });\n\n            const openFramePromise = buildWindowNamePromise.then(windowName => openFrame(context, { windowName }));\n            const openPrerenderFramePromise = openPrerenderFrame(context);\n\n            const renderContainerPromise = ZalgoPromise.hash({ proxyContainer: getProxyContainerPromise, proxyFrame: openFramePromise, proxyPrerenderFrame: openPrerenderFramePromise }).then(({ proxyContainer, proxyFrame, proxyPrerenderFrame }) => {\n                return renderContainer(proxyContainer, { context, proxyFrame, proxyPrerenderFrame, rerender });\n            }).then(proxyContainer => {\n                return proxyContainer;\n            });\n\n            const openPromise = ZalgoPromise.hash({ windowName: buildWindowNamePromise, proxyFrame: openFramePromise, proxyWin: getProxyWindowPromise }).then(({ windowName, proxyWin, proxyFrame }) => {\n                return windowProp\n                    ? proxyWin\n                    : open(context, { windowName, proxyWin, proxyFrame });\n            });\n\n            const openPrerenderPromise = ZalgoPromise.hash({ proxyWin: openPromise, proxyPrerenderFrame: openPrerenderFramePromise }).then(({ proxyWin, proxyPrerenderFrame }) => {\n                return openPrerender(context, proxyWin, proxyPrerenderFrame);\n            });\n\n            const setStatePromise = openPromise.then(proxyWin => {\n                currentProxyWin = proxyWin;\n                return setProxyWin(proxyWin);\n            });\n            \n            const prerenderPromise = ZalgoPromise.hash({ proxyPrerenderWin: openPrerenderPromise, state: setStatePromise }).then(({ proxyPrerenderWin }) => {\n                return prerender(proxyPrerenderWin, { context });\n            });\n\n            const setWindowNamePromise =  ZalgoPromise.hash({ proxyWin: openPromise, windowName: buildWindowNamePromise }).then(({ proxyWin, windowName }) => {\n                if (windowProp) {\n                    return proxyWin.setName(windowName);\n                }\n            });\n\n            const getMethodPromise = ZalgoPromise.hash({ body: buildBodyPromise }).then(({ body }) => {\n                if (options.method) {\n                    return options.method;\n                }\n\n                if (Object.keys(body).length) {\n                    return METHOD.POST;\n                }\n\n                return METHOD.GET;\n            });\n\n\n            const loadUrlPromise = ZalgoPromise.hash({ proxyWin: openPromise, windowUrl: buildUrlPromise, body: buildBodyPromise, method: getMethodPromise, windowName: setWindowNamePromise, prerender: prerenderPromise }).then(({ proxyWin, windowUrl, body, method }) => {\n                return proxyWin.setLocation(windowUrl, { method, body });\n            });\n\n            const watchForClosePromise = openPromise.then(proxyWin => {\n                watchForClose(proxyWin, context);\n            });\n\n            const onDisplayPromise = ZalgoPromise.hash({ container: renderContainerPromise, prerender: prerenderPromise }).then(() => {\n                return event.trigger(EVENT.DISPLAY);\n            });\n\n            const openBridgePromise = openPromise.then(proxyWin => {\n                return openBridge(proxyWin, initialChildDomain, context);\n            });\n\n            const runTimeoutPromise = loadUrlPromise.then(() => {\n                return runTimeout();\n            });\n\n            const onRenderedPromise = initPromise.then(() => {\n                return event.trigger(EVENT.RENDERED);\n            });\n\n            return ZalgoPromise.hash({\n                initPromise, buildUrlPromise, onRenderPromise, getProxyContainerPromise, openFramePromise, openPrerenderFramePromise, renderContainerPromise, openPromise,\n                openPrerenderPromise, setStatePromise, prerenderPromise, loadUrlPromise, buildWindowNamePromise, setWindowNamePromise, watchForClosePromise, onDisplayPromise,\n                openBridgePromise, runTimeoutPromise, onRenderedPromise, delegatePromise, watchForUnloadPromise, finalSetPropsPromise\n            });\n            \n        }).catch(err => {\n            return ZalgoPromise.all([\n                onError(err),\n                destroy(err)\n            ]).then(() => {\n                throw err;\n            }, () => {\n                throw err;\n            });\n        }).then(noop);\n    };\n\n    return {\n        init,\n        render,\n        destroy,\n        getProps,\n        setProps,\n        export: xport,\n        getHelpers,\n        getDelegateOverrides,\n        getExports\n    };\n}\n","/* @flow */\n\nimport { type CrossDomainWindowType, isWindowClosed } from 'cross-domain-utils/src';\nimport { noop } from 'belter/src';\n\nimport { windowStore } from './global';\n\nexport function cleanUpWindow(win : CrossDomainWindowType) {\n    const requestPromises = windowStore('requestPromises');\n    for (const promise of requestPromises.get(win, [])) {\n        promise.reject(new Error(`Window ${ isWindowClosed(win) ? 'closed' : 'cleaned up' } before response`)).catch(noop);\n    }\n}\n","/* @flow */\n/* eslint react/no-deprecated: off, react/no-find-dom-node: off, react/display-name: off, react/no-did-mount-set-state: off, react/destructuring-assignment: off, react/prop-types: off */\n\nimport { extend, noop } from 'belter/src';\n\nimport type { ComponentDriverType } from '../component';\nimport { CONTEXT } from '../constants';\n\n// eslint-disable-next-line flowtype/require-exact-type\ndeclare class ReactClassType {}\n\n// eslint-disable-next-line flowtype/require-exact-type\ndeclare class __ReactComponent {}\n\ntype ReactElementType = {|\n\n|};\n\ntype ReactType = {|\n    Component : __ReactComponent,\n    createClass : ({| render : () => ReactElementType, componentDidMount : () => void, componentDidUpdate : () => void |}) => (typeof ReactClassType),\n    createElement : (string, ?{ [string] : mixed }, ...children : $ReadOnlyArray<ReactElementType>) => ReactElementType\n|};\n\ntype ReactDomType = {|\n    findDOMNode : (typeof ReactClassType) => HTMLElement\n|};\n\ntype ReactLibraryType = {|\n    React : ReactType,\n    ReactDOM : ReactDomType\n|};\n\nexport const react : ComponentDriverType<*, ReactLibraryType, typeof ReactClassType, *, *> = {\n\n    register: (tag, propsDef, init, { React, ReactDOM }) => {\n\n        // $FlowFixMe\n        return class extends React.Component {\n            render() : ReactElementType {\n                return React.createElement('div', null);\n            }\n\n            componentDidMount() {\n                // $FlowFixMe\n                const el = ReactDOM.findDOMNode(this);\n                const parent = init(extend({}, this.props));\n                parent.render(el, CONTEXT.IFRAME);\n                this.setState({ parent });\n            }\n\n            componentDidUpdate() {\n\n                if (this.state && this.state.parent) {\n                    this.state.parent.updateProps(extend({}, this.props)).catch(noop);\n                }\n            }\n        };\n    }\n};\n","/* @flow */\n\nimport { noop, dasherizeToCamel } from 'belter/src';\n\nimport type { ComponentDriverType } from '../component';\nimport { CONTEXT } from '../constants';\n\ntype VueComponent = {|\n    render : (Function) => Element,\n    inheritAttrs : boolean,\n    mounted : () => void,\n    watch : {|\n        $attrs : {|\n            deep : boolean,\n            handler : () => void\n        |}\n    |}\n|};\n\ntype RegisteredVueComponent = {|\n    \n|};\n\ntype VueType = {|\n    component : (string, VueComponent) => RegisteredVueComponent\n|};\n\nfunction propsToCamelCase(props : Object) : Object {\n    return Object.keys(props).reduce((acc, key) => {\n        const value = props[key];\n        // In vue `style` is a reserved prop name\n        if (key === 'style-object' || key === 'styleObject') {\n            acc.style = value;\n            // To keep zoid as generic as possible, passing in the original prop name as well\n            acc.styleObject = value;\n        } else if (key.includes('-')) {\n            acc[dasherizeToCamel(key)] = value;\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, {});\n}\n\nexport const vue : ComponentDriverType<*, VueType, RegisteredVueComponent, *, *> = {\n\n    register: (tag, propsDef, init, Vue) => {\n\n        return Vue.component(tag, {\n            render(createElement) : Element {\n                return createElement('div');\n            },\n\n            inheritAttrs: false,\n\n            mounted() {\n                // $FlowFixMe[object-this-reference]\n                const el = this.$el;\n                // $FlowFixMe[object-this-reference]\n                this.parent = init({ ...propsToCamelCase(this.$attrs) });\n                // $FlowFixMe[object-this-reference]\n                this.parent.render(el, CONTEXT.IFRAME);\n            },\n\n            watch: {\n                $attrs: {\n                    handler: function handler() {\n                        if (this.parent && this.$attrs) {\n                            this.parent.updateProps({ ...this.$attrs }).catch(noop);\n                        }\n                    },\n                    deep: true\n                }\n            }\n        });\n    }\n};\n","/* @flow */\nimport { dasherizeToCamel, noop } from 'belter/src';\n\nimport type { ComponentDriverType } from '../component';\nimport { CONTEXT } from '../constants';\n\nfunction propsToCamelCase(props : Object) : Object {\n    return Object.keys(props).reduce((acc, key) => {\n        const value = props[key];\n        // In vue `style` is a reserved prop name\n        if (key === 'style-object' || key === 'styleObject') {\n            acc.style = value;\n            // To keep zoid as generic as possible, passing in the original prop name as well\n            acc.styleObject = value;\n        } else if (key.includes('-')) {\n            acc[dasherizeToCamel(key)] = value;\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, {});\n}\n\nexport const vue3 : ComponentDriverType<*, *, *, *, *> = {\n    register: (tag, propsDef, init) => {\n        return {\n            template: `<div></div>`,\n\n            inheritAttrs: false,\n\n            mounted() {\n                // $FlowFixMe[object-this-reference]\n                const el = this.$el;\n                // $FlowFixMe[object-this-reference]\n                this.parent = init({ ...propsToCamelCase(this.$attrs) });\n                // $FlowFixMe[object-this-reference]\n                this.parent.render(el, CONTEXT.IFRAME);\n            },\n\n            watch: {\n                $attrs: {\n                    handler: function handler() {\n                        if (this.parent && this.$attrs) {\n                            this.parent.updateProps({ ...this.$attrs }).catch(noop);\n                        }\n                    },\n                    deep: true\n                }\n            }\n        };\n\n    }\n};\n","/* @flow */\n\nimport { dasherizeToCamel, replaceObject, noop } from 'belter/src';\n\nimport type { ComponentDriverType } from '../component';\nimport { CONTEXT } from '../constants';\n\ntype AngularModule = {|\n    directive : (string, () => {|\n        scope : { [string] : '=' | '@' },\n        restrict : string,\n        controller : $ReadOnlyArray<string | Function>\n    |}) => AngularModule\n|};\n\ntype Angular = {|\n    module : (string, $ReadOnlyArray<string>) => AngularModule\n|};\n\nexport const angular : ComponentDriverType<*, Angular, AngularModule, *, *> = {\n\n    register: (tag, propsDef, init, ng) => {\n\n        const module = ng.module(tag, []).directive(dasherizeToCamel(tag), () => {\n\n            const scope = {};\n\n            for (const key of Object.keys(propsDef)) {\n                scope[key] = '=';\n            }\n\n            scope.props = '=';\n\n            return {\n                scope,\n\n                restrict: 'E',\n\n                controller: [ '$scope', '$element', ($scope, $element) => {\n                    function safeApply() {\n                        if ($scope.$root.$$phase !== '$apply' && $scope.$root.$$phase !== '$digest') {\n                            try {\n                                $scope.$apply();\n                            } catch (err) {\n                                // pass\n                            }\n                        }\n                    }\n\n                    const getProps = () => {\n                        return replaceObject($scope.props, item => {\n                            if (typeof item === 'function') {\n                                return function angularWrapped() : mixed {\n                                    // $FlowFixMe\n                                    const result = item.apply(this, arguments);\n                                    safeApply();\n                                    return result;\n                                };\n                            }\n                            return item;\n                        });\n                    };\n\n                    const instance = init(getProps());\n                    instance.render($element[0], CONTEXT.IFRAME);\n\n                    $scope.$watch(() => {\n                        instance.updateProps(getProps()).catch(noop);\n                    });\n                } ]\n            };\n        });\n\n        return module;\n    }\n};\n","/* @flow */\n/* eslint new-cap: 0 */\n\nimport { replaceObject } from 'belter/src';\n\nimport type { ComponentDriverType } from '../component';\nimport { CONTEXT } from '../constants';\n\ntype Angular2Injection = {||};\n\ntype Angular2Component = {||};\n\ntype Angular2Module = {| annotations : Object, name : string |};\n\ntype Angular2 = {|\n    Component : ({| selector : string, template : string, inputs : $ReadOnlyArray<string> |}) => {|\n        Class : ({| constructor : $ReadOnlyArray<Angular2Injection | Function>, ngOnInit : () => void, ngDoCheck : () => void |}) => Angular2Component\n    |},\n    NgModule : ({| declarations : $ReadOnlyArray<*>, exports : $ReadOnlyArray<*> |}) => {|\n        Class : ({| constructor : () => void |}) => Angular2Module\n    |},\n    ElementRef : Angular2Injection,\n    NgZone : Angular2Injection,\n    Inject : Function\n|};\n\nconst equals = (obj1, obj2) => {\n    const checked = {};\n\n    for (const key in obj1) {\n        if (obj1.hasOwnProperty(key)) {\n            checked[key] = true;\n\n            if (obj1[key] !== obj2[key]) {\n                return false;\n            }\n        }\n    }\n\n    for (const key in obj2) {\n        if (!checked[key]) {\n            return false;\n        }\n    }\n\n    return true;\n};\n\nexport const angular2 : ComponentDriverType<*, Angular2, Angular2Module, *, *> = {\n\n    register: (tag, propsDef, init, { Component : AngularComponent, NgModule, ElementRef, NgZone, Inject }) => {\n        class ComponentInstance {\n            elementRef : Object;\n            internalProps : Object;\n            parent : Object;\n            props : Object;\n            zone : Object;\n            _props : Object;\n\n            static annotations : $ReadOnlyArray<*>;\n            static parameters : $ReadOnlyArray<*>;\n\n            constructor (elementRef, zone) {\n                this._props = {};\n                this.elementRef = elementRef;\n                this.zone = zone;\n            }\n\n            getProps () : Object {\n                return replaceObject({ ...this.internalProps, ...this.props }, item => {\n                    if (typeof item === 'function') {\n                        const { zone } = this;\n                        return function angular2Wrapped() : void {\n                            // $FlowFixMe\n                            return zone.run(() => item.apply(this, arguments));\n                        };\n                    }\n                    return item;\n                });\n            }\n\n            ngOnInit() {\n                const targetElement = this.elementRef.nativeElement;\n                this.parent = init(this.getProps());\n                this.parent.render(targetElement, CONTEXT.IFRAME);\n            }\n\n            ngDoCheck() {\n                if (this.parent && !equals(this._props, this.props)) {\n                    this._props = { ...this.props };\n                    this.parent.updateProps(this.getProps());\n                }\n            }\n        }\n\n        ComponentInstance.parameters = [\n            [ new Inject(ElementRef) ],\n            [ new Inject(NgZone) ]\n        ];\n\n        ComponentInstance.annotations = [\n            new AngularComponent({\n                selector: tag,\n                template: `<div></div>`,\n                inputs:   [ 'props' ]\n            })\n        ];\n\n        class ModuleInstance {\n            static annotations : $ReadOnlyArray<*>;\n        }\n\n        ModuleInstance.annotations = [\n            new NgModule({\n                declarations: [ ComponentInstance ],\n                exports:      [ ComponentInstance ]\n            })\n        ];\n\n        return ModuleInstance;\n    }\n};\n","/* @flow */\n/* eslint react/react-in-jsx-scope: off */\n\nimport { destroyElement, toCSS } from 'belter/src';\n\nimport { type RenderOptionsType } from '../../parent/parent';\nimport { EVENT } from '../../constants';\n\nconst CLASS = {\n    VISIBLE:   'zoid-visible',\n    INVISIBLE: 'zoid-invisible'\n};\n\n\nexport function defaultContainerTemplate<P>({ uid, frame, prerenderFrame, doc, props, event, dimensions } : RenderOptionsType<P>) : ?HTMLElement {\n    const  { width, height } = dimensions;\n\n    if (__ZOID__.__DEFAULT_CONTAINER__) {\n        if (!frame || !prerenderFrame) {\n            return;\n        }\n\n        const div = doc.createElement('div');\n        div.setAttribute('id', uid);\n        const style = doc.createElement('style');\n        if (props.cspNonce) {\n            style.setAttribute('nonce', props.cspNonce);\n        }\n\n        style.appendChild(doc.createTextNode(`\n            #${ uid } {\n                display: inline-block;\n                position: relative;\n                width: ${ width };\n                height: ${ height };\n            }\n\n            #${ uid } > iframe {\n                display: inline-block;\n                position: absolute;\n                width: 100%;\n                height: 100%;\n                top: 0;\n                left: 0;\n                transition: opacity .2s ease-in-out;\n            }\n\n            #${ uid } > iframe.${ CLASS.INVISIBLE } {\n                opacity: 0;\n            }\n\n            #${ uid } > iframe.${ CLASS.VISIBLE } {\n                opacity: 1;\n        }\n        `));\n\n        div.appendChild(frame);\n        div.appendChild(prerenderFrame);\n        div.appendChild(style);\n\n        prerenderFrame.classList.add(CLASS.VISIBLE);\n        frame.classList.add(CLASS.INVISIBLE);\n    \n        event.on(EVENT.RENDERED, () => {\n            prerenderFrame.classList.remove(CLASS.VISIBLE);\n            prerenderFrame.classList.add(CLASS.INVISIBLE);\n    \n            frame.classList.remove(CLASS.INVISIBLE);\n            frame.classList.add(CLASS.VISIBLE);\n    \n            setTimeout(() => {\n                destroyElement(prerenderFrame);\n            }, 1);\n        });\n\n        event.on(EVENT.RESIZE, ({ width: newWidth, height: newHeight }) => {\n            if (typeof newWidth === 'number') {\n                div.style.width = toCSS(newWidth);\n            }\n    \n            if (typeof newHeight === 'number') {\n                div.style.height = toCSS(newHeight);\n            }\n        });\n\n        return div;\n    }\n}\n","/* @flow */\n/* eslint react/react-in-jsx-scope: off */\n\nimport { type RenderOptionsType } from '../../parent/parent';\n\nexport function defaultPrerenderTemplate<P>({ doc, props } : RenderOptionsType<P>) : ?HTMLElement {\n    if (__ZOID__.__DEFAULT_PRERENDER__) {\n        const html = doc.createElement('html');\n        const body = doc.createElement('body');\n        const style = doc.createElement('style');\n        const spinner = doc.createElement('div');\n        spinner.classList.add('spinner');\n\n        if (props.cspNonce) {\n            style.setAttribute('nonce', props.cspNonce);\n        }\n\n        html.appendChild(body);\n        body.appendChild(spinner);\n        body.appendChild(style);\n        style.appendChild(doc.createTextNode(`\n            html, body {\n                width: 100%;\n                height: 100%;\n            }\n\n            .spinner {\n                position: fixed;\n                max-height: 60vmin;\n                max-width: 60vmin;\n                height: 40px;\n                width: 40px;\n                top: 50%;\n                left: 50%;\n                box-sizing: border-box;\n                border: 3px solid rgba(0, 0, 0, .2);\n                border-top-color: rgba(33, 128, 192, 0.8);\n                border-radius: 100%;\n                animation: rotation .7s infinite linear;\n            }\n\n            @keyframes rotation {\n                from {\n                    transform: translateX(-50%) translateY(-50%) rotate(0deg);\n                }\n                to {\n                    transform: translateX(-50%) translateY(-50%) rotate(359deg);\n                }\n            }\n        `));\n\n        return html;\n    }\n}\n","/* @flow */\n/* eslint max-lines: 0 */\n\nimport { setup as setupPostRobot, on, send, bridge, toProxyWindow, destroy as destroyPostRobot } from 'post-robot/src';\nimport { ZalgoPromise } from 'zalgo-promise/src';\nimport { isWindow, getDomain, matchDomain, type CrossDomainWindowType, type DomainMatcher } from 'cross-domain-utils/src';\nimport { noop, isElement, cleanup, memoize, identity, extend, uniqueID } from 'belter/src';\n\nimport { childComponent, type ChildComponent } from '../child';\nimport { type RenderOptionsType, type ParentHelpers, parentComponent } from '../parent/parent';\nimport { ZOID, CONTEXT, POST_MESSAGE, WILDCARD, METHOD, PROP_TYPE } from '../constants';\nimport { react, angular, vue, vue3, angular2 } from '../drivers';\nimport { getGlobal, destroyGlobal, getInitialParentPayload, isChildComponentWindow } from '../lib';\nimport type { CssDimensionsType, StringMatcherType, ContainerReferenceType } from '../types';\n\nimport { validateOptions } from './validate';\nimport { defaultContainerTemplate, defaultPrerenderTemplate } from './templates';\nimport { getBuiltInProps, type UserPropsDefinitionType, type PropsDefinitionType, type PropsInputType,\n    type PropsType, type ParentPropType, type exportPropType, type DEFINITION_TYPE } from './props';\n\ntype LoggerPayload = { [string] : ?string | ?boolean };\n\n// eslint-disable-next-line flowtype/require-exact-type\ntype Logger = {\n    info : (event : string, payload? : LoggerPayload) => any // eslint-disable-line flowtype/no-weak-types\n};\n\n/*  Component\n    ---------\n\n    This is the spec for the component. The idea is, when I call zoid.create(), it will create a new instance\n    of Component with the blueprint needed to set up ParentComponents and ChildComponents.\n\n    This is the one portion of code which is required by -- and shared to -- both the parent and child windows, and\n    contains all of the configuration needed for them to set themselves up.\n*/\n\ntype Attributes = {|\n    iframe? : { [string] : string },\n    popup? : { [string] : string }\n|};\n\nexport type ExportsConfigDefinition = {|\n    [string] : {|\n        type : DEFINITION_TYPE\n    |}\n|};\n\nexport type ExportsMapperDefinition<X> = ({|\n    getExports : () => ZalgoPromise<X>\n|}) => X;\n\nexport type ExportsDefinition<X> = ExportsConfigDefinition | ExportsMapperDefinition<X>;\n\nexport type ComponentOptionsType<P, X, C> = {|\n\n    tag : string,\n\n    url : string | ({| props : PropsType<P> |}) => string,\n    domain? : DomainMatcher,\n    bridgeUrl? : string,\n    method? : $Values<typeof METHOD>,\n\n    props? : UserPropsDefinitionType<P, X>,\n\n    dimensions? : CssDimensionsType | ({| props : PropsType<P> |}) => CssDimensionsType,\n    autoResize? : {| width? : boolean, height? : boolean, element? : string |},\n\n    allowedParentDomains? : StringMatcherType,\n\n    attributes? : Attributes | ({| props : PropsType<P> |}) => Attributes,\n\n    eligible? : ({| props : PropsInputType<P> |}) => {| eligible : boolean, reason? : string |},\n\n    defaultContext? : $Values<typeof CONTEXT>,\n\n    containerTemplate? : (RenderOptionsType<P>) => ?HTMLElement,\n    prerenderTemplate? : (RenderOptionsType<P>) => ?HTMLElement,\n\n    validate? : ({| props : PropsInputType<P> |}) => void,\n\n    logger? : Logger,\n\n    children? : () => C,\n\n    exports? : ExportsDefinition<X>\n|};\n\nexport type AttributesType = {|\n    iframe? : { [string] : string },\n    popup? : { [string] : string }\n|};\n\ntype AutoResizeType = {|\n    width? : boolean,\n    height? : boolean,\n    element? : string\n|};\n\nexport type NormalizedComponentOptionsType<P, X, C> = {|\n    tag : string,\n    name : string,\n\n    url : string | ({| props : PropsType<P> |}) => string,\n    domain : ?DomainMatcher,\n    bridgeUrl : ?string,\n    method : ?$Values<typeof METHOD>,\n\n    propsDef : PropsDefinitionType<P, X>,\n    dimensions : CssDimensionsType | ({| props : PropsType<P> |}) => CssDimensionsType,\n    autoResize : AutoResizeType,\n\n    allowedParentDomains : StringMatcherType,\n\n    attributes : AttributesType | ({| props : PropsType<P> |}) => AttributesType,\n\n    eligible : ({| props : PropsInputType<P> |}) => {| eligible : boolean, reason? : string |},\n\n    defaultContext : $Values<typeof CONTEXT>,\n\n    containerTemplate : (RenderOptionsType<P>) => ?HTMLElement,\n    prerenderTemplate : ?(RenderOptionsType<P>) => ?HTMLElement,\n\n    validate : ?({| props : PropsInputType<P> |}) => void,\n    logger : Logger,\n\n    children : () => C,\n\n    exports : ExportsMapperDefinition<X>\n|};\n\nexport type ZoidComponentInstance<P, X = void, C = void> = {|\n    ...ParentHelpers<P>,\n    ...X,\n    ...C,\n    isEligible : () => boolean,\n    clone : () => ZoidComponentInstance<P, X, C>,\n    render : (container? : ContainerReferenceType, context? : $Values<typeof CONTEXT>) => ZalgoPromise<void>,\n    renderTo : (target : CrossDomainWindowType, container? : ContainerReferenceType, context? : $Values<typeof CONTEXT>) => ZalgoPromise<void>\n|};\n\n// eslint-disable-next-line flowtype/require-exact-type\nexport type ZoidComponent<P, X = void, C = void> = {\n    (props? : PropsInputType<P> | void) : ZoidComponentInstance<P, X, C>,\n    // eslint-disable-next-line no-undef\n    driver : <T>(string, mixed) => T,\n    isChild : () => boolean,\n    xprops? : PropsType<P>,\n    canRenderTo : (CrossDomainWindowType) => ZalgoPromise<boolean>,\n    instances : $ReadOnlyArray<ZoidComponentInstance<P, X, C>>\n};\n\nconst getDefaultAttributes = () : AttributesType => {\n    // $FlowFixMe\n    return {};\n};\n\nconst getDefaultAutoResize = () : AutoResizeType => {\n    // $FlowFixMe\n    return {};\n};\n\nconst getDefaultExports = <X>() : () => X => {\n    // $FlowFixMe\n    return noop;\n};\n\nconst getDefaultDimensions = () : CssDimensionsType => {\n    // $FlowFixMe\n    return {};\n};\n\nfunction normalizeOptions<P, X, C>(options : ComponentOptionsType<P, X, C>) : NormalizedComponentOptionsType<P, X, C> {\n    const {\n        tag,\n        url,\n        domain,\n        bridgeUrl,\n        props = {},\n        dimensions = getDefaultDimensions(),\n        autoResize = getDefaultAutoResize(),\n        allowedParentDomains = WILDCARD,\n        attributes = getDefaultAttributes(),\n        defaultContext = CONTEXT.IFRAME,\n        containerTemplate = (__ZOID__.__DEFAULT_CONTAINER__ ? defaultContainerTemplate : null),\n        prerenderTemplate = (__ZOID__.__DEFAULT_PRERENDER__ ? defaultPrerenderTemplate : null),\n        validate,\n        eligible = () => ({ eligible: true }),\n        logger = { info: noop },\n        exports: xportsDefinition = getDefaultExports(),\n        method,\n        children = () : C => {\n            // $FlowFixMe\n            return {};\n        }\n    } = options;\n\n    const name = tag.replace(/-/g, '_');\n\n    // $FlowFixMe[incompatible-type]\n    // $FlowFixMe[cannot-spread-inexact]\n    const propsDef : PropsDefinitionType<P, X> = {\n        ...getBuiltInProps(),\n        ...props\n    };\n\n    if (!containerTemplate) {\n        throw new Error(`Container template required`);\n    }\n\n    const xports = typeof xportsDefinition === 'function'\n        ? xportsDefinition\n        : ({ getExports }) : X => {\n            const result = {};\n\n            for (const key of Object.keys(xportsDefinition)) {\n                const { type } = xportsDefinition[key];\n                const valuePromise = getExports().then(res => {\n                    // $FlowFixMe\n                    return res[key];\n                });\n\n                if (type === PROP_TYPE.FUNCTION) {\n                    result[key] = (...args) => valuePromise.then(value => value(...args));\n                } else {\n                    result[key] = valuePromise;\n                }\n            }\n\n            // $FlowFixMe\n            return result;\n        };\n\n    return {\n        name,\n        tag,\n        url,\n        domain,\n        bridgeUrl,\n        method,\n        propsDef,\n        dimensions,\n        autoResize,\n        allowedParentDomains,\n        attributes,\n        defaultContext,\n        containerTemplate,\n        prerenderTemplate,\n        validate,\n        logger,\n        eligible,\n        children,\n        exports:     xports\n    };\n}\n\nlet cleanInstances = cleanup();\nconst cleanZoid = cleanup();\n\nexport type Component<P, X, C> = {|\n    init : (props? : PropsInputType<P> | void) => ZoidComponentInstance<P, X, C>,\n    instances : $ReadOnlyArray<ZoidComponentInstance<P, X, C>>,\n    driver : (string, mixed) => mixed,\n    isChild : () => boolean,\n    canRenderTo : (CrossDomainWindowType) => ZalgoPromise<boolean>,\n    registerChild : () => ?ChildComponent<P, X>\n|};\n\nexport function component<P, X, C>(opts : ComponentOptionsType<P, X, C>) : Component<P, X, C> {\n    if (__DEBUG__) {\n        validateOptions(opts);\n    }\n\n    const options = normalizeOptions(opts);\n\n    const {\n        name,\n        tag,\n        defaultContext,\n        propsDef,\n        eligible,\n        children\n    } = options;\n\n    const global = getGlobal(window);\n    const driverCache = {};\n    const instances = [];\n\n    const isChild = () : boolean => {\n        if (isChildComponentWindow(name)) {\n            const { payload } = getInitialParentPayload();\n            if (payload.tag === tag && matchDomain(payload.childDomainMatch, getDomain())) {\n                return true;\n            }\n        }\n\n        return false;\n    };\n\n    const registerChild = memoize(() : ?ChildComponent<P, X> => {\n        if (isChild()) {\n            if (window.xprops) {\n                delete global.components[tag];\n                throw new Error(`Can not register ${ name } as child - child already registered`);\n            }\n\n            const child = childComponent(options);\n            child.init();\n            return child;\n        }\n    });\n\n    const listenForDelegate = () => {\n        const allowDelegateListener = on(`${ POST_MESSAGE.ALLOW_DELEGATE }_${ name }`, () => {\n            return true;\n        });\n\n        const delegateListener = on(`${ POST_MESSAGE.DELEGATE }_${ name }`, ({ source, data: { uid, overrides } }) => {\n            return {\n                parent: parentComponent({\n                    uid, options, overrides, parentWin: source\n                })\n            };\n        });\n\n        cleanZoid.register(allowDelegateListener.cancel);\n        cleanZoid.register(delegateListener.cancel);\n    };\n\n    const canRenderTo = (win : CrossDomainWindowType) : ZalgoPromise<boolean> => {\n        return send(win, `${ POST_MESSAGE.ALLOW_DELEGATE }_${ name }`).then(({ data }) => {\n            return data;\n        }).catch(() => {\n            return false;\n        });\n    };\n\n    const getDefaultContainer = (context : $Values<typeof CONTEXT>, container? : ContainerReferenceType) : ContainerReferenceType => {\n        if (container) {\n            if (typeof container !== 'string' && !isElement(container)) {\n                throw new TypeError(`Expected string or element selector to be passed`);\n            }\n\n            return container;\n        }\n\n        if (context === CONTEXT.POPUP) {\n            return 'body';\n        }\n\n        throw new Error(`Expected element to be passed to render iframe`);\n    };\n\n    const getDefaultContext = (props : PropsInputType<P>, context : ?$Values<typeof CONTEXT>) : ZalgoPromise<$Values<typeof CONTEXT>> => {\n        return ZalgoPromise.try(() => {\n            if (props.window) {\n                return toProxyWindow(props.window).getType();\n            }\n\n            if (context) {\n                if (context !== CONTEXT.IFRAME && context !== CONTEXT.POPUP) {\n                    throw new Error(`Unrecognized context: ${ context }`);\n                }\n\n                return context;\n            }\n\n            return defaultContext;\n        });\n    };\n\n    const getDefaultInputProps = () : PropsInputType<P> => {\n        // $FlowFixMe\n        return {};\n    };\n\n    const init = (inputProps? : PropsInputType<P> | void) : ZoidComponentInstance<P, X, C> => {\n        // eslint-disable-next-line prefer-const\n        let instance;\n\n        const uid = `${ ZOID }-${ tag }-${ uniqueID() }`;\n        const props = inputProps || getDefaultInputProps();\n\n        const { eligible: eligibility, reason } = eligible({ props });\n        const isEligible = () => eligibility;\n\n        const onDestroy = props.onDestroy;\n        props.onDestroy = (...args) => {\n            if (instance && eligibility) {\n                instances.splice(instances.indexOf(instance), 1);\n            }\n\n            if (onDestroy) {\n                return onDestroy(...args);\n            }\n        };\n\n        const parent = parentComponent({\n            uid, options\n        });\n\n        parent.init();\n\n        if (eligibility) {\n            parent.setProps(props);\n        } else {\n            if (props.onDestroy) {\n                props.onDestroy();\n            }\n        }\n\n        cleanInstances.register(err => {\n            return parent.destroy(err || new Error(`zoid destroyed all components`));\n        });\n\n        const clone = ({ decorate = identity } = {}) => {\n            return init(decorate(props));\n        };\n\n        const getChildren = () : C => {\n            // $FlowFixMe\n            const childComponents : {| [string] : ZoidComponent<mixed> |} = children();\n            const result = {};\n\n            for (const childName of Object.keys(childComponents)) {\n                const Child : ZoidComponent<mixed> = childComponents[childName];\n\n                result[childName] = (childInputProps) => {\n                    const parentProps : PropsType<P> = parent.getProps();\n                    const parentExport : exportPropType<X> = parent.export;\n\n                    const childParent : ParentPropType<P, X> = {\n                        uid,\n                        props:  parentProps,\n                        export: parentExport\n                    };\n                    \n                    const childProps : PropsInputType<mixed> = {\n                        ...childInputProps,\n                        parent: childParent\n                    };\n\n                    return Child(childProps);\n                };\n            }\n\n            // $FlowFixMe\n            return result;\n        };\n\n        const render = (target, container, context) => {\n            return ZalgoPromise.try(() => {\n                if (!eligibility) {\n                    const err = new Error(reason || `${ name } component is not eligible`);\n\n                    return parent.destroy(err).then(() => {\n                        throw err;\n                    });\n                }\n\n                if (!isWindow(target)) {\n                    throw new Error(`Must pass window to renderTo`);\n                }\n\n                return getDefaultContext(props, context);\n\n            }).then(finalContext => {\n                container = getDefaultContainer(finalContext, container);\n\n                if (target !== window && typeof container !== 'string') {\n                    throw new Error(`Must pass string element when rendering to another window`);\n                }\n\n                return parent.render({\n                    target,\n                    container,\n                    context:    finalContext,\n                    rerender: () => {\n                        const newInstance = clone();\n                        extend(instance, newInstance);\n                        return newInstance.renderTo(target, container, context);\n                    }\n                });\n\n            }).catch(err => {\n                return parent.destroy(err).then(() => {\n                    throw err;\n                });\n            });\n        };\n\n        instance = {\n            ...parent.getExports(),\n            ...parent.getHelpers(),\n            ...getChildren(),\n            isEligible,\n            clone,\n            render:   (container, context) => render(window, container, context),\n            renderTo: (target, container, context) => render(target, container, context)\n        };\n\n        if (eligibility) {\n            instances.push(instance);\n        }\n\n        return instance;\n    };\n\n    const driver = (driverName : string, dep : mixed) : mixed => {\n        if (__ZOID__.__FRAMEWORK_SUPPORT__) {\n            const drivers = { react, angular, vue, vue3, angular2 };\n\n            if (!drivers[driverName]) {\n                throw new Error(`Could not find driver for framework: ${ driverName }`);\n            }\n\n            if (!driverCache[driverName]) {\n                driverCache[driverName] = drivers[driverName].register(tag, propsDef, init, dep);\n            }\n\n            return driverCache[driverName];\n        } else {\n            throw new Error(`Driver support not enabled`);\n        }\n    };\n\n    registerChild();\n    listenForDelegate();\n\n    global.components = global.components || {};\n    if (global.components[tag]) {\n        throw new Error(`Can not register multiple components with the same tag: ${ tag }`);\n    }\n    global.components[tag] = true;\n\n    return {\n        init,\n        instances,\n        driver,\n        isChild,\n        canRenderTo,\n        registerChild\n    };\n}\n\nexport type ComponentDriverType<P, L, D, X, C> = {|\n    register : (string, PropsDefinitionType<P, X>, (PropsInputType<P>) => ZoidComponentInstance<P, X, C>, L) => D\n|};\n\nexport type ZoidProps<P> = PropsType<P>;\n\n// eslint-disable-next-line no-undef\nexport type CreateZoidComponent = <P, X, C>(options : ComponentOptionsType<P, X, C>) => ZoidComponent<P, X, C>;\n\nexport const create : CreateZoidComponent = <P, X, C>(options : ComponentOptionsType<P, X, C>) : ZoidComponent<P, X, C> => {\n    setupPostRobot();\n\n    const comp = component(options);\n\n    const init = (props? : PropsInputType<P> | void) => comp.init(props);\n    init.driver = (name, dep) => comp.driver(name, dep);\n    init.isChild = () => comp.isChild();\n    init.canRenderTo = (win) => comp.canRenderTo(win);\n    init.instances = comp.instances;\n\n    const child = comp.registerChild();\n    if (child) {\n        window.xprops = init.xprops = child.getProps();\n    }\n\n    return init;\n};\n\nexport function destroyComponents(err? : mixed) : ZalgoPromise<void> {\n    if (bridge) {\n        bridge.destroyBridges();\n    }\n\n    const destroyPromise = cleanInstances.all(err);\n    cleanInstances = cleanup();\n    return destroyPromise;\n}\n\nexport const destroyAll = destroyComponents;\n\nexport function destroy(err? : mixed) : ZalgoPromise<void> {\n    destroyAll();\n    destroyGlobal();\n    destroyPostRobot();\n    return cleanZoid.all(err);\n}\n"],"sourceRoot":""}