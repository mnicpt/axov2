{"version":3,"sources":["webpack://pragmatic/webpack/universalModuleDefinition","webpack://pragmatic/webpack/bootstrap","webpack://pragmatic/./src/constants.js","webpack://pragmatic/./src/node.js","webpack://pragmatic/./src/renderers/text.js","webpack://pragmatic/./src/util.js","webpack://pragmatic/./src/renderers/dom.js","webpack://pragmatic/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://pragmatic/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://pragmatic/./src/renderers/react.js","webpack://pragmatic/./src/renderers/html.js","webpack://pragmatic/./src/renderers/preact.js","webpack://pragmatic/./src/renderers/regex.js","webpack://pragmatic/./src/component/style.jsx","webpack://pragmatic/./src/component/regex.jsx"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","hasOwnProperty","p","s","NODE_TYPE","ELEMENT","TEXT","COMPONENT","FRAGMENT","renderChildren","children","renderer","result","renderedChild","render","Array","isArray","subchild","push","ElementNode","props","type","onRender","el","FragmentNode","TextNode","text","ComponentNode","component","renderComponent","child","normalizeChildren","length","normalizeChild","toString","TypeError","node","element","Fragment","textRenderer","concat","join","Error","isDefined","val","ELEMENT_DEFAULT_XML_NAMESPACE","ATTRIBUTE_DEFAULT_XML_NAMESPACE","createTextElement","doc","createTextNode","addProps","keys","prop","match","addEventListener","slice","toLowerCase","xmlNamespace","setAttributeNS","setAttribute","tagName","id","replace","charAt","Math","floor","random","ADD_CHILDREN","firstChild","win","contentWindow","document","docElement","documentElement","removeChild","dom","appendChild","addChildren","html","ELEMENT_PROP","innerHTML","window","querySelectorAll","script","parentNode","newScript","createElement","textContent","replaceChild","fixScripts","opts","domRenderer","xmlNamespaceDomRenderer","childNode","createElementNS","createElementWithXMLNamespace","_extends","assign","target","arguments","source","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","indexOf","react","React","reactRenderer","dangerouslySetInnerHTML","__html","className","class","SELF_CLOSING_TAGS","br","htmlEncode","htmlRenderer","renderedProps","filter","map","renderedChildren","preact","Preact","h","regex","regexRenderer","nodeInstance","RegExp","Style","css","nonce","_getCss","escapeRegex","validateAndEscapeChildren","validateChildren","Regex","exact","RegexText","RegexWord","validateNoChildren","RegexCharacters","RegexGroup","repeat","repeatMin","repeatMax","optional","capture","union","pop","RegexUnion"],"mappings":"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","file":"jsx-pragmatic.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pragmatic\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pragmatic\"] = factory();\n\telse\n\t\troot[\"pragmatic\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/* @flow */\n\nexport const NODE_TYPE = {\n    ELEMENT:   ('element' : 'element'),\n    TEXT:      ('text' : 'text'),\n    COMPONENT: ('component' : 'component'),\n    FRAGMENT:  ('fragment' : 'fragment')\n};\n","/* @flow */\n\nimport { NODE_TYPE } from './constants';\n\nexport type NodePropsType = {\n    [string] : any // eslint-disable-line flowtype/no-weak-types\n};\n\nexport type EmptyProps = {||};\n\nexport type NodeRenderer<N, O> = (N) => O;\nexport type NodeRendererFactory<L, N, O> = (L) => NodeRenderer<N, O>;\n\ntype Primitive = string | boolean | number;\ntype NullablePrimitive = Primitive | null | void;\n\nexport type NodeType = ElementNode | TextNode | FragmentNode | ComponentNode<*>; // eslint-disable-line no-use-before-define\nexport type ChildNodeType = ElementNode | TextNode | ComponentNode<*>; // eslint-disable-line no-use-before-define\nexport type ChildType = ChildNodeType | Primitive | $ReadOnlyArray<ChildType>;\nexport type ChildrenType = $ReadOnlyArray<ChildNodeType>;\nexport type NullableChildType = $ReadOnlyArray<ChildType> | ChildNodeType | NullablePrimitive;\nexport type NullableChildrenType = $ReadOnlyArray<NullableChildrenType | ChildNodeType | NullablePrimitive>;\n\nexport type ComponentFunctionType<P> = (P, ChildrenType) => NullableChildType;\n\nexport type CreateElementNode = <P>(string, P, ...NullableChildrenType) => ElementNode; // eslint-disable-line no-undef, no-use-before-define\nexport type CreateComponentNode = <P>(ComponentFunctionType<P>, P, ...NullableChildrenType) => ComponentNode<*>; // eslint-disable-line no-undef, no-use-before-define\nexport type CreateNullComponentNode = <P>(ComponentFunctionType<P>, null, ...NullableChildrenType) => ComponentNode<*>; // eslint-disable-line no-undef, no-use-before-define\n\nexport type CreateNode = CreateNullComponentNode & CreateComponentNode & CreateElementNode;\n\nfunction renderChildren<T>(children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>>, renderer : NodeRenderer<*, *>) : $ReadOnlyArray<T> { // eslint-disable-line no-use-before-define\n    const result = [];\n\n    for (const child of children) {\n        const renderedChild = child.render(renderer);\n\n        if (!renderedChild) {\n            continue;\n        } else if (Array.isArray(renderedChild)) {\n            for (const subchild of renderedChild) {\n                if (subchild) {\n                    result.push(subchild);\n                }\n            }\n        } else {\n            result.push(renderedChild);\n        }\n    }\n\n    return result;\n}\n\nexport class ElementNode {\n    type : (typeof NODE_TYPE.ELEMENT) = NODE_TYPE.ELEMENT\n\n    name : string\n    props : NodePropsType\n    children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>> // eslint-disable-line no-use-before-define\n    onRender : ?<T>(T) => void // eslint-disable-line no-undef\n\n    constructor(name : string, props : NodePropsType, children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>>) { // eslint-disable-line no-use-before-define\n        this.name = name;\n        this.props = props || {};\n        this.children = children;\n\n        const onRender = this.props.onRender;\n        if (typeof onRender === 'function') {\n            this.onRender = onRender;\n            delete props.onRender;\n        }\n    }\n\n    render<T>(renderer : NodeRenderer<*, *>) : T {\n        const el = renderer(this);\n        if (this.onRender) {\n            this.onRender(el);\n        }\n        return el;\n    }\n\n    renderChildren<T>(renderer : NodeRenderer<*, *>) : $ReadOnlyArray<T> {\n        return renderChildren(this.children, renderer);\n    }\n}\n\nexport class FragmentNode {\n    type : (typeof NODE_TYPE.FRAGMENT) = NODE_TYPE.FRAGMENT\n\n    children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>> // eslint-disable-line no-use-before-define\n\n    constructor(children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>>) { // eslint-disable-line no-use-before-define\n        this.children = children;\n    }\n\n    render<T>(renderer : NodeRenderer<*, *>) : $ReadOnlyArray<T> {\n        return renderChildren(this.children, renderer);\n    }\n}\n\nexport class TextNode {\n    type : (typeof NODE_TYPE.TEXT) = NODE_TYPE.TEXT\n\n    text : string\n\n    constructor(text : string) {\n        this.text = text;\n    }\n\n    render<T>(renderer : NodeRenderer<*, *>) : T {\n        return renderer(this);\n    }\n}\n\n// eslint-disable-next-line no-unused-vars\nexport class ComponentNode<P = null> {\n    type : (typeof NODE_TYPE.COMPONENT) = NODE_TYPE.COMPONENT\n\n    component : ComponentFunctionType<NodePropsType>\n    props : NodePropsType\n    children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>>\n\n    constructor(component : ComponentFunctionType<NodePropsType>, props : NodePropsType, children : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>>) {\n        this.component = component;\n        this.props = props || {};\n        this.children = children;\n\n        this.props.children = children;\n    }\n\n    renderComponent(renderer : NodeRenderer<*, *>) : * {\n        const child = normalizeChild(this.component(this.props, this.children)); // eslint-disable-line no-use-before-define\n        if (child) {\n            return child.render(renderer);\n        }\n    }\n\n    render<T>(renderer : NodeRenderer<*, *>) : T {\n        return renderer(this);\n    }\n\n    renderChildren<T>(renderer : NodeRenderer<*, *>) : $ReadOnlyArray<T> {\n        return renderChildren(this.children, renderer);\n    }\n}\n\nfunction normalizeChildren(children : NullableChildrenType) : $ReadOnlyArray<ElementNode | TextNode | ComponentNode<*>> {\n    const result = [];\n\n    for (const child of children) {\n        if (!child) {\n            continue;\n        } else if (typeof child === 'string' || typeof child === 'number') {\n            result.push(new TextNode(child.toString()));\n        } else if (typeof child === 'boolean') {\n            continue;\n        } else if (Array.isArray(child)) {\n            for (const subchild of normalizeChildren(child)) {\n                result.push(subchild);\n            }\n        } else if (child && (child.type === NODE_TYPE.ELEMENT || child.type === NODE_TYPE.TEXT || child.type === NODE_TYPE.COMPONENT)) {\n            result.push(child);\n        } else {\n            throw new TypeError(`Unrecognized node type: ${ typeof child }`);\n        }\n    }\n\n    return result;\n}\n\nfunction normalizeChild(child) : ElementNode | TextNode | ComponentNode<*> | FragmentNode | void {\n    const children = normalizeChildren(Array.isArray(child) ? child : [ child ]);\n\n    if (children.length === 1) {\n        return children[0];\n    } else if (children.length > 1) {\n        return new FragmentNode(children);\n    }\n}\n\nexport const node : CreateNode = <P>(element, props : P, ...children) => {\n    children = normalizeChildren(children);\n\n    if (typeof element === 'string') {\n        // $FlowFixMe\n        return new ElementNode(element, props, children);\n    }\n    \n    if (typeof element === 'function') {\n        // $FlowFixMe\n        return new ComponentNode<*>(element, props, children);\n    }\n\n    throw new TypeError(`Expected jsx element to be a string or a function`);\n};\n\nexport const Fragment : ComponentFunctionType<null> = (props, children) => {\n    return children;\n};\n","/* @flow */\n\nimport { ComponentNode, TextNode, ElementNode, type NodeRenderer } from '../node';\nimport { NODE_TYPE } from '../constants';\n\ntype TextRenderer = NodeRenderer<ElementNode | TextNode | ComponentNode<*>, string>;\n\nexport function text() : TextRenderer {\n\n    const textRenderer = (node) => {\n        if (node.type === NODE_TYPE.COMPONENT) {\n            return [].concat(node.renderComponent(textRenderer)).join('');\n        }\n        \n        if (node.type === NODE_TYPE.ELEMENT) {\n            throw new Error(`Text renderer does not support basic elements`);\n        }\n        \n        if (node.type === NODE_TYPE.TEXT) {\n            return node.text;\n        }\n\n        throw new TypeError(`Unhandleable node: ${ node.type }`);\n    };\n\n    return textRenderer;\n}\n","/* @flow */\n\nconst ALPHA_CHARS = '0123456789abcdef';\n\nexport function uniqueID() : string {\n    return 'xxxxxxxxxx'.replace(/./g, () => ALPHA_CHARS.charAt(Math.floor(Math.random() * ALPHA_CHARS.length)));\n}\n\n// eslint-disable-next-line flowtype/no-weak-types\nexport function isDefined(val : any) : boolean %checks {\n    return (val !== null && typeof val !== 'undefined');\n}\n","/* @flow */\n\nimport { ComponentNode, TextNode, type NodeRenderer, ElementNode } from '../node';\nimport { NODE_TYPE } from '../constants';\nimport { uniqueID } from '../util';\n\ntype DomNodeRenderer = NodeRenderer<ElementNode, HTMLElement>;\ntype DomTextRenderer = NodeRenderer<TextNode, Text>;\ntype DomComponentRenderer = NodeRenderer<ComponentNode<*>, HTMLElement | TextNode | $ReadOnlyArray<HTMLElement | TextNode> | void>;\ntype DomRenderer = DomComponentRenderer & DomNodeRenderer & DomTextRenderer;\n\nconst ELEMENT_TAG = {\n    HTML:    'html',\n    IFRAME:  'iframe',\n    SCRIPT:  'script',\n    SVG:     'svg',\n    DEFAULT: 'default'\n};\n\nconst ELEMENT_PROP = {\n    ID:         'id',\n    INNER_HTML: 'innerHTML',\n    EL:         'el',\n    XLINK_HREF: 'xlink:href'\n};\n\nconst ELEMENT_DEFAULT_XML_NAMESPACE : {| [$Values<typeof ELEMENT_TAG>] : string |} = {\n    [ ELEMENT_TAG.SVG ]: 'http://www.w3.org/2000/svg'\n};\n\nconst ATTRIBUTE_DEFAULT_XML_NAMESPACE : {| [$Values<typeof ELEMENT_PROP>] : string |} = {\n    [ ELEMENT_PROP.XLINK_HREF ]: 'http://www.w3.org/1999/xlink'\n};\n\nfunction fixScripts(el : HTMLElement | Element, doc : Document = window.document) {\n    for (const script of el.querySelectorAll('script')) {\n        const parentNode = script.parentNode;\n\n        if (!parentNode) {\n            continue;\n        }\n\n        const newScript = doc.createElement('script');\n        newScript.text = script.textContent;\n        parentNode.replaceChild(newScript, script);\n    }\n}\n\nfunction createElement(doc : Document, node : ElementNode) : HTMLElement | Element {\n    if (node.props[ELEMENT_PROP.EL]) {\n        return node.props[ELEMENT_PROP.EL];\n    } else {\n        return doc.createElement(node.name);\n    }\n}\n\nfunction createElementWithXMLNamespace(doc : Document, node : ElementNode, xmlNamespace : string) : HTMLElement | Element {\n    return doc.createElementNS(xmlNamespace, node.name);\n}\n\nfunction createTextElement(doc : Document, node : TextNode) : Text {\n    return doc.createTextNode(node.text);\n}\n\nfunction addProps(el : HTMLElement | Element, node) {\n    const props = node.props;\n\n    for (const prop of Object.keys(props)) {\n        const val = props[prop];\n\n        if (val === null || typeof val === 'undefined' || prop === ELEMENT_PROP.EL || prop === ELEMENT_PROP.INNER_HTML) {\n            continue;\n        }\n\n        if (prop.match(/^on[A-Z][a-z]/) && typeof val === 'function') {\n            el.addEventListener(prop.slice(2).toLowerCase(), val);\n        } else if (typeof val === 'string' || typeof val === 'number') {\n            const xmlNamespace = ATTRIBUTE_DEFAULT_XML_NAMESPACE[prop];\n            if (xmlNamespace) {\n                el.setAttributeNS(xmlNamespace, prop, val.toString());\n            } else {\n                el.setAttribute(prop, val.toString());\n            }\n        } else if (typeof val === 'boolean') {\n            if (val === true) {\n                el.setAttribute(prop, '');\n            }\n        }\n    }\n\n    if (el.tagName.toLowerCase() === ELEMENT_TAG.IFRAME && !props.id) {\n        el.setAttribute(ELEMENT_PROP.ID, `jsx-iframe-${ uniqueID() }`);\n    }\n}\nconst ADD_CHILDREN : { [string] : (HTMLElement | Element, ElementNode, DomNodeRenderer) => void } = {\n\n    [ ELEMENT_TAG.IFRAME ]: (el, node) => {\n        const firstChild = node.children[0];\n\n        if (node.children.length !== 1 || !(firstChild && firstChild.type === NODE_TYPE.ELEMENT) || firstChild.name !== ELEMENT_TAG.HTML) {\n            throw new Error(`Expected only single html element node as child of ${ ELEMENT_TAG.IFRAME } element`);\n        }\n    \n        el.addEventListener('load', () => {\n\n            // $FlowFixMe\n            const win = el.contentWindow;\n    \n            if (!win) {\n                throw new Error(`Expected frame to have contentWindow`);\n            }\n\n            const doc = win.document;\n            const docElement = doc.documentElement;\n\n            while (docElement.children && docElement.children.length) {\n                docElement.removeChild(docElement.children[0]);\n            }\n\n            // eslint-disable-next-line no-use-before-define\n            const child : HTMLElement = firstChild.render(dom({ doc }));\n        \n            while (child.children.length) {\n                docElement.appendChild(child.children[0]);\n            }\n        });\n    },\n\n    [ ELEMENT_TAG.SCRIPT ]: (el, node) => {\n        const firstChild = node.children[0];\n\n        if (node.children.length !== 1 || !(firstChild && firstChild.type === NODE_TYPE.TEXT)) {\n            throw new Error(`Expected only single text node as child of ${ ELEMENT_TAG.SCRIPT } element`);\n        }\n        \n        // $FlowFixMe\n        el.text = firstChild.text;\n    },\n\n    [ ELEMENT_TAG.DEFAULT ]: (el, node, renderer) => {\n        for (const child of node.renderChildren(renderer)) {\n            el.appendChild(child);\n        }\n    }\n};\n\nfunction addChildren(el : HTMLElement | Element, node : ElementNode, doc : Document, renderer : DomNodeRenderer) {\n    if (node.props.hasOwnProperty(ELEMENT_PROP.INNER_HTML)) {\n\n        if (node.children.length) {\n            throw new Error(`Expected no children to be passed when ${ ELEMENT_PROP.INNER_HTML } prop is set`);\n        }\n\n        const html = node.props[ELEMENT_PROP.INNER_HTML];\n\n        if (typeof html !== 'string') {\n            throw new TypeError(`${ ELEMENT_PROP.INNER_HTML } prop must be string`);\n        }\n\n        if (node.name === ELEMENT_TAG.SCRIPT) {\n            // $FlowFixMe\n            el.text = html;\n        } else {\n            el.innerHTML = html;\n            fixScripts(el, doc);\n        }\n\n    } else {\n        const addChildrenToElement = ADD_CHILDREN[node.name] || ADD_CHILDREN[ELEMENT_TAG.DEFAULT];\n        addChildrenToElement(el, node, renderer);\n    }\n}\n\ntype DomOptions = {|\n    doc? : Document\n|};\n\nconst getDefaultDomOptions = () : DomOptions => {\n    // $FlowFixMe\n    return {};\n};\n\nexport function dom(opts? : DomOptions = getDefaultDomOptions()) : DomRenderer {\n    const { doc = document } = opts;\n    \n    const xmlNamespaceDomRenderer = (node : ElementNode, xmlNamespace : string) : HTMLElement => {\n        if (node.type === NODE_TYPE.COMPONENT) {\n            return node.renderComponent(childNode => xmlNamespaceDomRenderer(childNode, xmlNamespace));\n        }\n        \n        if (node.type === NODE_TYPE.TEXT) {\n            // $FlowFixMe\n            return createTextElement(doc, node);\n        }\n        \n        if (node.type === NODE_TYPE.ELEMENT) {\n            const el = createElementWithXMLNamespace(doc, node, xmlNamespace);\n            addProps(el, node);\n            addChildren(el, node, doc, childNode => xmlNamespaceDomRenderer(childNode, xmlNamespace));\n            // $FlowFixMe\n            return el;\n        }\n\n        throw new TypeError(`Unhandleable node`);\n    };\n    \n    const domRenderer : DomRenderer = (node) => {\n        if (node.type === NODE_TYPE.COMPONENT) {\n            return node.renderComponent(domRenderer);\n        }\n        \n        if (node.type === NODE_TYPE.TEXT) {\n            // $FlowFixMe\n            return createTextElement(doc, node);\n        }\n        \n        if (node.type === NODE_TYPE.ELEMENT) {\n            const xmlNamespace = ELEMENT_DEFAULT_XML_NAMESPACE[node.name.toLowerCase()];\n\n            if (xmlNamespace) {\n                // $FlowFixMe\n                return xmlNamespaceDomRenderer(node, xmlNamespace);\n            }\n\n            const el = createElement(doc, node);\n            addProps(el, node);\n            addChildren(el, node, doc, domRenderer);\n            // $FlowFixMe\n            return el;\n        }\n\n        throw new TypeError(`Unhandleable node`);\n    };\n\n    return domRenderer;\n}\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","/* @flow */\n\n// eslint-disable-next-line import/no-unresolved\nimport type { Node } from 'react';\n\nimport { ComponentNode, TextNode, ElementNode, type NodeRenderer, type NodePropsType } from '../node';\nimport { NODE_TYPE } from '../constants';\n\ntype ReactType = {|\n    createElement : Function\n|};\n\ntype ReactRenderer = NodeRenderer<ElementNode | TextNode | ComponentNode<*>, Node | string | null>;\n\nfunction mapReactProps(props : NodePropsType) : NodePropsType {\n    const { innerHTML, class: className, ...remainingProps } = props;\n\n    const dangerouslySetInnerHTML = innerHTML\n        ? { __html: innerHTML }\n        : null;\n\n    // $FlowFixMe\n    return {\n        dangerouslySetInnerHTML,\n        className,\n        ...remainingProps\n    };\n}\n\nexport function react({ React } : {| React : ReactType |} = {}) : ReactRenderer {\n    if (!React) {\n        throw new Error(`Must pass React library to react renderer`);\n    }\n    \n    const reactRenderer = (node) => {\n        if (node.type === NODE_TYPE.COMPONENT) {\n            return React.createElement(() => (node.renderComponent(reactRenderer) || null), node.props, ...node.renderChildren(reactRenderer));\n        }\n        \n        if (node.type === NODE_TYPE.ELEMENT) {\n            return React.createElement(node.name, mapReactProps(node.props), ...node.renderChildren(reactRenderer));\n        }\n        \n        if (node.type === NODE_TYPE.TEXT) {\n            return node.text;\n        }\n\n        throw new TypeError(`Unhandleable node`);\n    };\n\n    return reactRenderer;\n}\n","/* @flow */\n\nimport { ComponentNode, TextNode, ElementNode, type NodePropsType, type NodeRenderer } from '../node';\nimport { NODE_TYPE } from '../constants';\n\ntype HTMLRenderer = NodeRenderer<ElementNode | TextNode | ComponentNode<*>, string>;\n\nconst ELEMENT_PROP = {\n    INNER_HTML: 'innerHTML'\n};\n\nconst SELF_CLOSING_TAGS = {\n    br: true\n};\n\nfunction htmlEncode(text : string) : string {\n    return text\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#39;')\n        .replace(/\\//g, '&#x2F;');\n}\n\nfunction propsToHTML(props : NodePropsType) : string {\n    const keys = Object.keys(props).filter(key => {\n        const val = props[key];\n\n        if (key === ELEMENT_PROP.INNER_HTML) {\n            return false;\n        }\n\n        if (typeof val === 'string' || typeof val === 'number' || val === true) {\n            return true;\n        }\n\n        return false;\n    });\n\n    if (!keys.length) {\n        return '';\n    }\n\n    const pairs = keys.map(key => {\n        const val = props[key];\n\n        if (val === true) {\n            return `${ htmlEncode(key) }`;\n        }\n\n        if (typeof val !== 'string' && typeof val !== 'number') {\n            throw new TypeError(`Unexpected prop type: ${ typeof val }`);\n        }\n\n        if (val === '') {\n            return htmlEncode(key);\n        }\n\n        return `${ htmlEncode(key) }=\"${ htmlEncode(val.toString()) }\"`;\n    });\n\n    return ` ${ pairs.join(' ') }`;\n}\n\nexport function html() : HTMLRenderer {\n\n    const htmlRenderer = (node) => {\n        if (node.type === NODE_TYPE.COMPONENT) {\n            return [].concat(node.renderComponent(htmlRenderer)).join('');\n        }\n        \n        if (node.type === NODE_TYPE.ELEMENT) {\n            const renderedProps = propsToHTML(node.props);\n\n            if (SELF_CLOSING_TAGS[node.name]) {\n                return `<${ node.name }${ renderedProps } />`;\n            } else {\n                const renderedChildren = (typeof node.props[ELEMENT_PROP.INNER_HTML] === 'string')\n                    ? node.props[ELEMENT_PROP.INNER_HTML]\n                    : node.renderChildren(htmlRenderer).join('');\n\n                return `<${ node.name }${ renderedProps }>${ renderedChildren }</${ node.name }>`;\n            }\n        }\n        \n        if (node.type === NODE_TYPE.TEXT) {\n            return htmlEncode(node.text);\n        }\n\n        throw new TypeError(`Unhandleable node: ${ node.type }`);\n    };\n\n    return htmlRenderer;\n}\n","/* @flow */\n\nimport { ComponentNode, TextNode, ElementNode, type NodeRenderer, type NodePropsType } from '../node';\nimport { NODE_TYPE } from '../constants';\n\ntype PreactType = {|\n    h : Function\n|};\n\ntype PreactNode = {||};\n\ntype PreactRenderer = NodeRenderer<ElementNode | TextNode | ComponentNode<*>, PreactNode | string | null>;\n\nfunction mapPreactProps(props : NodePropsType) : NodePropsType {\n    const { innerHTML, ...remainingProps } = props;\n\n    const dangerouslySetInnerHTML = innerHTML\n        ? { __html: innerHTML }\n        : null;\n\n    // $FlowFixMe\n    return {\n        dangerouslySetInnerHTML,\n        ...remainingProps\n    };\n}\n\nexport function preact({ Preact } : {| Preact : PreactType |} = {}) : PreactRenderer {\n    if (!Preact) {\n        throw new Error(`Must pass Preact library to react renderer`);\n    }\n    \n    const reactRenderer = (node) => {\n        if (node.type === NODE_TYPE.COMPONENT) {\n            return Preact.h(() => (node.renderComponent(reactRenderer) || null), node.props, ...node.renderChildren(reactRenderer));\n        }\n        \n        if (node.type === NODE_TYPE.ELEMENT) {\n            return Preact.h(node.name, mapPreactProps(node.props), ...node.renderChildren(reactRenderer));\n        }\n        \n        if (node.type === NODE_TYPE.TEXT) {\n            return node.text;\n        }\n\n        throw new TypeError(`Unhandleable node`);\n    };\n\n    return reactRenderer;\n}\n","/* @flow */\n\nimport { node, ComponentNode, TextNode, ElementNode, type NodeRenderer } from '../node';\n\nimport { text } from './text';\n\ntype RegexRenderer = NodeRenderer<ElementNode | TextNode | ComponentNode<*>, RegExp>;\n\nexport function regex() : RegexRenderer {\n    const regexRenderer = text();\n\n    // eslint-disable-next-line security/detect-non-literal-regexp\n    return (nodeInstance) => new RegExp(regexRenderer(nodeInstance));\n}\n\n// $FlowFixMe\nregex.node = (el, props, ...children) => {\n    // $FlowFixMe\n    const nodeInstance = node(el, props, ...children);\n\n    if (el.renderer) {\n        return nodeInstance.render(el.renderer());\n    }\n\n    return nodeInstance;\n};\n","/* @flow */\n/** @jsx node */\n\nimport { Fragment, node, type ChildType, type NullableChildrenType } from '../node';\n\ntype StyleProps = {|\n    css : string | {| _getCss : () => string |},\n    nonce? : ?string,\n    children? : ?NullableChildrenType\n|};\n\nexport function Style({ css, nonce, children } : StyleProps) : ChildType {\n    return (\n        <Fragment>\n            <style innerHTML={ typeof css === 'string' ? css : css._getCss() } nonce={ nonce } />\n            { children }\n        </Fragment>\n    );\n}\n","/* @flow */\n/** @jsx node */\n\nimport { type ChildType, type ChildrenType, TextNode } from '../node';\nimport { isDefined } from '../util';\nimport { NODE_TYPE } from '../constants';\nimport { regex } from '../renderers';\n\nconst escapeRegex = (text : string) : string => {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#]/g, '\\\\$&');\n};\n\nconst validateChildren = (name : string, children : ?ChildrenType) : ChildrenType => {\n    if (!children) {\n        throw new Error(`Must pass children to ${ name }`);\n    }\n\n    return children;\n};\n\nconst validateNoChildren = (name : string, children : ?ChildrenType) => {\n    if (children && children.length) {\n        throw new Error(`Must not pass children to ${ name }`);\n    }\n};\n\nconst validateAndEscapeChildren = (name : string, children : ?ChildrenType) : ChildrenType => {\n    children = validateChildren(name, children);\n\n    return children.map(child => {\n        if (child.type === NODE_TYPE.TEXT) {\n            return new TextNode(escapeRegex(child.text));\n        }\n\n        return child;\n    });\n};\n\nexport type RegexOptions = {|\n    exact? : boolean\n|};\n\nexport function Regex({ exact = true } : RegexOptions, children? : ChildrenType) : ChildType {\n    children = validateAndEscapeChildren('RegexGroup', children);\n\n    if (!exact) {\n        return children;\n    }\n\n    return [\n        '^',\n        ...children,\n        '$'\n    ];\n}\n\nRegex.renderer = regex;\n\ntype RegexTextOptions = {|\n    \n|};\n\nexport function RegexText(props : RegexTextOptions, children? : ChildrenType) : ChildType {\n    return validateAndEscapeChildren('RegexText', children);\n}\n\ntype RegexWordOptions = {|\n    \n|};\n\nexport function RegexWord(props : RegexWordOptions, children? : ChildrenType) : ChildType {\n    validateNoChildren('RegexWord', children);\n\n    return '\\\\w+';\n}\n\n\ntype RegexCharactersOptions = {|\n    \n|};\n\nexport function RegexCharacters(props : RegexCharactersOptions, children? : ChildrenType) : ChildType {\n    return [\n        '[',\n        ...validateAndEscapeChildren('RegexText', children),\n        ']'\n    ];\n}\n\n\ntype RegexGroupOptions = {|\n    optional? : boolean,\n    repeat? : boolean | number,\n    repeatMin? : number,\n    repeatMax? : number,\n    capture? : boolean,\n    union? : boolean,\n    name? : string\n|};\n\nexport function RegexGroup({ repeat, repeatMin, repeatMax, name, optional = false, capture = true, union = false } : RegexGroupOptions, children? : ChildrenType) : ChildType {\n    children = validateAndEscapeChildren('RegexGroup', children);\n\n    if (isDefined(repeat) && (isDefined(repeatMin) || isDefined(repeatMax))) {\n        throw new Error(`repeat can not be used with repeatMin or repeatMax`);\n    }\n\n    if (name && !capture) {\n        throw new Error(`Named groups must be captured`);\n    }\n\n    if (union) {\n        const result = [];\n\n        for (const child of children) {\n            result.push(child);\n            result.push(new TextNode('|'));\n        }\n    \n        result.pop();\n        children = result;\n    }\n\n    const result = [];\n\n    result.push(capture ? '(' : '(?:');\n\n    if (name) {\n        result.push(`?<${ escapeRegex(name) }>`);\n    }\n\n    result.push(...children);\n    result.push(')');\n\n    if (isDefined(repeat)) {\n        if (typeof repeat === 'number') {\n            result.push(`{${ repeat }}`);\n        } else if (repeat === true) {\n            result.push(`+`);\n        }\n    }\n\n    if (isDefined(repeatMin) || isDefined(repeatMax)) {\n        result.push(`{${ repeatMin || '' },${ repeatMax || '' }}`);\n    }\n\n    if (optional) {\n        result.push('?');\n    }\n\n    return result;\n}\n\ntype RegexUnionOptions = {|\n\n|};\n\nexport function RegexUnion(props : RegexUnionOptions, children? : ChildrenType) : ChildType {\n    children = validateAndEscapeChildren('RegexGroup', children);\n\n    const result = [];\n\n    for (const child of children) {\n        result.push(child);\n        result.push('|');\n    }\n\n    result.pop();\n\n    return result;\n}\n"],"sourceRoot":""}